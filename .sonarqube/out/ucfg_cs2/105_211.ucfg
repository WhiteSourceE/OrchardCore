
YOrchardCore.Locking.LocalLock.Semaphore.Semaphore(string, System.Threading.SemaphoreSlim)Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.cs\ \("1*ç
1Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.csa a(*
0*–
0Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.cs^ `(Ö
Ç
Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.cs^ ^(
%0string"/OrchardCore.Locking.LocalLock.Semaphore.Key.set*+)
'OrchardCore.Locking.LocalLock.Semaphore*

keystringπ
∂
Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.cs_ _($
%1System.Threading.SemaphoreSlim"1OrchardCore.Locking.LocalLock.Semaphore.Value.set*+)
'OrchardCore.Locking.LocalLock.Semaphore*)
'
valueSystem.Threading.SemaphoreSlim¸
˘
Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.cs` `(	
%2int"4OrchardCore.Locking.LocalLock.Semaphore.RefCount.set*+)
'OrchardCore.Locking.LocalLock.Semaphore*2*
2*•
2Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.csa a("ö
Ç
xD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore\Locking\LocalLock.csa a(
implicit return:
keystring:'
valueSystem.Threading.SemaphoreSlimB+)
'OrchardCore.Locking.LocalLock.Semaphore