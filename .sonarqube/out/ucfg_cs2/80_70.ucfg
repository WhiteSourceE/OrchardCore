
ëOrchardCore.OpenId.YesSql.Indexes.OpenIdTokenIndexProvider.Describe(YesSql.Indexes.DescribeContext<OrchardCore.OpenId.YesSql.Models.OpenIdToken>)ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs (%"0*µ
0ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs $(≠
™
ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs (+'
%0!YesSql.Indexes.IMapFor<T, TIndex>"/YesSql.Indexes.DescribeContext<T>.For<TIndex>()*.
,
context!YesSql.Indexes.DescribeContext<T>⁄◊
ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs $(&
%1 YesSql.Indexes.IGroupFor<TIndex>"=YesSql.Indexes.IMapFor<T, TIndex>.Map(System.Func<T, TIndex>)*)
'
%0!YesSql.Indexes.IMapFor<T, TIndex>*
""2Map(System.Func<T, TIndex>)*
1*€
1ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs%	 %(	"µ
ù
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs% %(	
implicit return:,
context!YesSql.Indexes.DescribeContext<T>B><
:OrchardCore.OpenId.YesSql.Indexes.OpenIdTokenIndexProvider