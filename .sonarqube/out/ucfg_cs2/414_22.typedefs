é
$OrchardCore.Roles.Services.RoleStoreobject€
òRoleStore(System.IServiceProvider, OrchardCore.Documents.IDocumentManager<OrchardCore.Roles.Models.RolesDocument>, Microsoft.Extensions.Localization.IStringLocalizer<OrchardCore.Roles.Services.RoleStore>, Microsoft.Extensions.Logging.ILogger<OrchardCore.Roles.Services.RoleStore>)ΩOrchardCore.Roles.Services.RoleStore.RoleStore(System.IServiceProvider, OrchardCore.Documents.IDocumentManager<OrchardCore.Roles.Models.RolesDocument>, Microsoft.Extensions.Localization.IStringLocalizer<OrchardCore.Roles.Services.RoleStore>, Microsoft.Extensions.Logging.ILogger<OrchardCore.Roles.Services.RoleStore>)I
LoadRolesAsync()5OrchardCore.Roles.Services.RoleStore.LoadRolesAsync()G
GetRolesAsync()4OrchardCore.Roles.Services.RoleStore.GetRolesAsync()ô
8UpdateRolesAsync(OrchardCore.Roles.Models.RolesDocument)]OrchardCore.Roles.Services.RoleStore.UpdateRolesAsync(OrchardCore.Roles.Models.RolesDocument)ø
KCreateAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)pOrchardCore.Roles.Services.RoleStore.CreateAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)ø
KDeleteAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)pOrchardCore.Roles.Services.RoleStore.DeleteAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)õ
9FindByIdAsync(string, System.Threading.CancellationToken)^OrchardCore.Roles.Services.RoleStore.FindByIdAsync(string, System.Threading.CancellationToken)ü
;FindByNameAsync(string, System.Threading.CancellationToken)`OrchardCore.Roles.Services.RoleStore.FindByNameAsync(string, System.Threading.CancellationToken)›
ZGetNormalizedRoleNameAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)OrchardCore.Roles.Services.RoleStore.GetNormalizedRoleNameAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)≈
NGetRoleIdAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)sOrchardCore.Roles.Services.RoleStore.GetRoleIdAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)…
PGetRoleNameAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)uOrchardCore.Roles.Services.RoleStore.GetRoleNameAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)Ó
bSetNormalizedRoleNameAsync(OrchardCore.Security.IRole, string, System.Threading.CancellationToken)áOrchardCore.Roles.Services.RoleStore.SetNormalizedRoleNameAsync(OrchardCore.Security.IRole, string, System.Threading.CancellationToken)Ÿ
XSetRoleNameAsync(OrchardCore.Security.IRole, string, System.Threading.CancellationToken)}OrchardCore.Roles.Services.RoleStore.SetRoleNameAsync(OrchardCore.Security.IRole, string, System.Threading.CancellationToken)ø
KUpdateAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)pOrchardCore.Roles.Services.RoleStore.UpdateAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)Ä
kAddClaimAsync(OrchardCore.Security.IRole, System.Security.Claims.Claim, System.Threading.CancellationToken)êOrchardCore.Roles.Services.RoleStore.AddClaimAsync(OrchardCore.Security.IRole, System.Security.Claims.Claim, System.Threading.CancellationToken)≈
NGetClaimsAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)sOrchardCore.Roles.Services.RoleStore.GetClaimsAsync(OrchardCore.Security.IRole, System.Threading.CancellationToken)Ü
nRemoveClaimAsync(OrchardCore.Security.IRole, System.Security.Claims.Claim, System.Threading.CancellationToken)ìOrchardCore.Roles.Services.RoleStore.RemoveClaimAsync(OrchardCore.Security.IRole, System.Security.Claims.Claim, System.Threading.CancellationToken);
	Dispose().OrchardCore.Roles.Services.RoleStore.Dispose();
	Roles.get.OrchardCore.Roles.Services.RoleStore.Roles.get;
	Roles.set.OrchardCore.Roles.Services.RoleStore.Roles.set