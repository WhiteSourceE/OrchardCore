ß
?OrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.OpenIddict.Core.OpenIddictScopeManager<TScope>objectú
´OpenIdScopeManager(OpenIddict.Abstractions.IOpenIddictScopeCache<TScope>, Microsoft.Extensions.Logging.ILogger<OpenIddict.Core.OpenIddictScopeManager<TScope>>, Microsoft.Extensions.Options.IOptionsMonitor<OpenIddict.Core.OpenIddictCoreOptions>, OpenIddict.Abstractions.IOpenIddictScopeStoreResolver)ÎOrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.OpenIdScopeManager(OpenIddict.Abstractions.IOpenIddictScopeCache<TScope>, Microsoft.Extensions.Logging.ILogger<OpenIddict.Core.OpenIddictScopeManager<TScope>>, Microsoft.Extensions.Options.IOptionsMonitor<OpenIddict.Core.OpenIddictCoreOptions>, OpenIddict.Abstractions.IOpenIddictScopeStoreResolver)«
AFindByPhysicalIdAsync(string, System.Threading.CancellationToken)ÅOrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.FindByPhysicalIdAsync(string, System.Threading.CancellationToken)¿
>GetPhysicalIdAsync(TScope, System.Threading.CancellationToken)~OrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.GetPhysicalIdAsync(TScope, System.Threading.CancellationToken)¡
~OrchardCore.OpenId.Abstractions.Managers.IOpenIdScopeManager.FindByPhysicalIdAsync(string, System.Threading.CancellationToken)æOrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.OrchardCore.OpenId.Abstractions.Managers.IOpenIdScopeManager.FindByPhysicalIdAsync(string, System.Threading.CancellationToken)ª
{OrchardCore.OpenId.Abstractions.Managers.IOpenIdScopeManager.GetPhysicalIdAsync(object, System.Threading.CancellationToken)ªOrchardCore.OpenId.Services.Managers.OpenIdScopeManager<TScope>.OrchardCore.OpenId.Abstractions.Managers.IOpenIdScopeManager.GetPhysicalIdAsync(object, System.Threading.CancellationToken)