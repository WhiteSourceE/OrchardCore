
KOrchardCore.Liquid.Ast.ExpressionArgumentsTag.GetSyntax(Fluid.FluidGrammar) 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs ( "0*«

0 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs (?™
–
 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs (%
%0Irony.Parsing.NonTerminal"__id*J*H

grammarFluid.FluidGrammar"'

ExpressionIrony.Parsing.NonTerminalž
›
 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs( (?
%1Irony.Parsing.NonTerminal"__id*O*M

grammarFluid.FluidGrammar",
FilterArgumentsIrony.Parsing.NonTerminalú
÷
 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs (?!
%2Irony.Parsing.BnfExpression"NIrony.Parsing.BnfTerm.operator +(Irony.Parsing.BnfTerm, Irony.Parsing.BnfTerm)*"
Irony.Parsing.BnfTerm*!

%0Irony.Parsing.NonTerminal*!

%1Irony.Parsing.NonTerminal"È
 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs (@#
!
%2Irony.Parsing.BnfExpression*á
1 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs	 (	"¸
 
•D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.Liquid.Abstractions\Ast\ExpressionArgumentsTag.cs (	
implicit return:
grammarFluid.FluidGrammarB1/
-OrchardCore.Liquid.Ast.ExpressionArgumentsTag