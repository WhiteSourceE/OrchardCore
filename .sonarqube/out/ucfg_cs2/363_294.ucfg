
ùOrchardCore.OpenId.YesSql.Indexes.OpenIdApplicationIndexProvider.Describe(YesSql.Indexes.DescribeContext<OrchardCore.OpenId.YesSql.Models.OpenIdApplication>)£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs! !(%"0*≈7
0£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs# ^(≥
∞
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs# #(1'
%0!YesSql.Indexes.IMapFor<T, TIndex>"/YesSql.Indexes.DescribeContext<T>.For<TIndex>()*.
,
context!YesSql.Indexes.DescribeContext<T>‡›
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs# ((&
%1 YesSql.Indexes.IGroupFor<TIndex>"=YesSql.Indexes.IMapFor<T, TIndex>.Map(System.Func<T, TIndex>)*)
'
%0!YesSql.Indexes.IMapFor<T, TIndex>*
""2Map(System.Func<T, TIndex>)π
∂
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs* *(<'
%2!YesSql.Indexes.IMapFor<T, TIndex>"5YesSql.Indexes.DescribeContext<T>.For<TIndex, TKey>()*.
,
context!YesSql.Indexes.DescribeContext<T>∞≠
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs* /(&
%3 YesSql.Indexes.IGroupFor<TIndex>"eYesSql.Indexes.IMapFor<T, TIndex>.Map(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)*)
'
%2!YesSql.Indexes.IMapFor<T, TIndex>*
""2CMap(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)√¿
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs* 0(8-
%4'YesSql.Indexes.IReduceFor<TIndex, TKey>"kYesSql.Indexes.IGroupFor<TIndex>.Group<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)*(
&
%3 YesSql.Indexes.IGroupFor<TIndex>*
""2JGroup<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)∑¥
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs* 5('
%5!YesSql.Indexes.IDeleteFor<TIndex>"hYesSql.Indexes.IReduceFor<TIndex, TKey>.Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)*/
-
%4'YesSql.Indexes.IReduceFor<TIndex, TKey>*
""2@Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)¥±
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs* :(

%6void"uYesSql.Indexes.IDeleteFor<TIndex>.Delete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)*)
'
%5!YesSql.Indexes.IDeleteFor<TIndex>*
""2SDelete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)π
∂
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs< <(>'
%7!YesSql.Indexes.IMapFor<T, TIndex>"5YesSql.Indexes.DescribeContext<T>.For<TIndex, TKey>()*.
,
context!YesSql.Indexes.DescribeContext<T>∞≠
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs< A(&
%8 YesSql.Indexes.IGroupFor<TIndex>"eYesSql.Indexes.IMapFor<T, TIndex>.Map(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)*)
'
%7!YesSql.Indexes.IMapFor<T, TIndex>*
""2CMap(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)√¿
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs< B(2-
%9'YesSql.Indexes.IReduceFor<TIndex, TKey>"kYesSql.Indexes.IGroupFor<TIndex>.Group<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)*(
&
%8 YesSql.Indexes.IGroupFor<TIndex>*
""2JGroup<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)∏µ
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs< G((
%10!YesSql.Indexes.IDeleteFor<TIndex>"hYesSql.Indexes.IReduceFor<TIndex, TKey>.Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)*/
-
%9'YesSql.Indexes.IReduceFor<TIndex, TKey>*
""2@Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)∂≥
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs< L(
%11void"uYesSql.Indexes.IDeleteFor<TIndex>.Delete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)**
(
%10!YesSql.Indexes.IDeleteFor<TIndex>*
""2SDelete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)∫
∑
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.csN N(;(
%12!YesSql.Indexes.IMapFor<T, TIndex>"5YesSql.Indexes.DescribeContext<T>.For<TIndex, TKey>()*.
,
context!YesSql.Indexes.DescribeContext<T>≤Ø
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.csN S('
%13 YesSql.Indexes.IGroupFor<TIndex>"eYesSql.Indexes.IMapFor<T, TIndex>.Map(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)**
(
%12!YesSql.Indexes.IMapFor<T, TIndex>*
""2CMap(System.Func<T, System.Collections.Generic.IEnumerable<TIndex>>)≈¬
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.csN T(/.
%14'YesSql.Indexes.IReduceFor<TIndex, TKey>"kYesSql.Indexes.IGroupFor<TIndex>.Group<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)*)
'
%13 YesSql.Indexes.IGroupFor<TIndex>*
""2JGroup<TKey>(System.Linq.Expressions.Expression<System.Func<TIndex, TKey>>)π∂
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.csN Y((
%15!YesSql.Indexes.IDeleteFor<TIndex>"hYesSql.Indexes.IReduceFor<TIndex, TKey>.Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)*0
.
%14'YesSql.Indexes.IReduceFor<TIndex, TKey>*
""2@Reduce(System.Func<System.Linq.IGrouping<TKey, TIndex>, TIndex>)∂≥
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.csN ^(
%16void"uYesSql.Indexes.IDeleteFor<TIndex>.Delete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)**
(
%15!YesSql.Indexes.IDeleteFor<TIndex>*
""2SDelete(System.Func<TIndex, System.Collections.Generic.IEnumerable<TIndex>, TIndex>)*
1*Á
1£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs_	 _(	"ª
£
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs_ _(	
implicit return:,
context!YesSql.Indexes.DescribeContext<T>BDB
@OrchardCore.OpenId.YesSql.Indexes.OpenIdApplicationIndexProvider