ó
ßD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Descriptors\OpenIdApplicationDescriptor.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Descriptors* 5
{ 
public 

class '
OpenIdApplicationDescriptor ,
:- .+
OpenIddictApplicationDescriptor/ N
{ 
public 
ISet 
< 
string 
> 
Roles !
{" #
get$ '
;' (
}) *
=+ ,
new- 0
HashSet1 8
<8 9
string9 ?
>? @
(@ A
StringComparerA O
.O P
OrdinalIgnoreCaseP a
)a b
;b c
} 
} ñ
©D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Descriptors\OpenIdAuthorizationDescriptor.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Descriptors* 5
{ 
public 

class )
OpenIdAuthorizationDescriptor .
:/ 0-
!OpenIddictAuthorizationDescriptor1 R
{S T
}U V
} ˛
°D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Descriptors\OpenIdScopeDescriptor.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Descriptors* 5
{ 
public 

class !
OpenIdScopeDescriptor &
:' (%
OpenIddictScopeDescriptor) B
{C D
}E F
} ˛
°D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Descriptors\OpenIdTokenDescriptor.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Descriptors* 5
{ 
public 

class !
OpenIdTokenDescriptor &
:' (%
OpenIddictTokenDescriptor) B
{C D
}E F
} ¸
¢D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Managers\IOpenIdApplicationManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Managers* 2
{ 
public 

	interface %
IOpenIdApplicationManager .
:/ 0)
IOpenIddictApplicationManager1 N
{ 
	ValueTask 
< 
object 
> !
FindByPhysicalIdAsync /
(/ 0
string0 6

identifier7 A
,A B
CancellationTokenC T
cancellationTokenU f
=g h
defaulti p
)p q
;q r
	ValueTask 
< 
string 
> 
GetPhysicalIdAsync ,
(, -
object- 3
application4 ?
,? @
CancellationTokenA R
cancellationTokenS d
=e f
defaultg n
)n o
;o p
	ValueTask 
< 
ImmutableArray  
<  !
string! '
>' (
>( )
GetRolesAsync* 7
(7 8
object8 >
application? J
,J K
CancellationTokenL ]
cancellationToken^ o
=p q
defaultr y
)y z
;z {
IAsyncEnumerable 
< 
object 
>  
ListInRoleAsync! 0
(0 1
string1 7
role8 <
,< =
CancellationToken> O
cancellationTokenP a
=b c
defaultd k
)k l
;l m
	ValueTask 
SetRolesAsync 
(  
object  &
application' 2
,2 3
ImmutableArray4 B
<B C
stringC I
>I J
rolesK P
,P Q
CancellationTokenR c
cancellationTokend u
=v w
defaultx 
)	 Ä
;
Ä Å
} 
} ˙
§D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Managers\IOpenIdAuthorizationManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Managers* 2
{ 
public 

	interface '
IOpenIdAuthorizationManager 0
:1 2+
IOpenIddictAuthorizationManager3 R
{ 
	ValueTask 
< 
object 
> !
FindByPhysicalIdAsync /
(/ 0
string0 6

identifier7 A
,A B
CancellationTokenC T
cancellationTokenU f
=g h
defaulti p
)p q
;q r
	ValueTask 
< 
string 
> 
GetPhysicalIdAsync ,
(, -
object- 3
authorization4 A
,A B
CancellationTokenC T
cancellationTokenU f
=g h
defaulti p
)p q
;q r
} 
} ⁄
úD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Managers\IOpenIdScopeManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Managers* 2
{ 
public 

	interface 
IOpenIdScopeManager (
:) *#
IOpenIddictScopeManager+ B
{ 
	ValueTask 
< 
object 
> !
FindByPhysicalIdAsync /
(/ 0
string0 6

identifier7 A
,A B
CancellationTokenC T
cancellationTokenU f
=g h
defaulti p
)p q
;q r
	ValueTask 
< 
string 
> 
GetPhysicalIdAsync ,
(, -
object- 3
scope4 9
,9 :
CancellationToken; L
cancellationTokenM ^
=_ `
defaulta h
)h i
;i j
} 
} ⁄
úD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Managers\IOpenIdTokenManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Managers* 2
{ 
public 

	interface 
IOpenIdTokenManager (
:) *#
IOpenIddictTokenManager+ B
{ 
	ValueTask 
< 
object 
> !
FindByPhysicalIdAsync /
(/ 0
string0 6

identifier7 A
,A B
CancellationTokenC T
cancellationTokenU f
=g h
defaulti p
)p q
;q r
	ValueTask 
< 
string 
> 
GetPhysicalIdAsync ,
(, -
object- 3
token4 9
,9 :
CancellationToken; L
cancellationTokenM ^
=_ `
defaulta h
)h i
;i j
} 
} ô
ûD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Stores\IOpenIdApplicationStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Stores* 0
{ 
public		 

	interface		 #
IOpenIdApplicationStore		 ,
<		, -
TApplication		- 9
>		9 :
:		; <'
IOpenIddictApplicationStore		= X
<		X Y
TApplication		Y e
>		e f
where		g l
TApplication		m y
:		z {
class			| Å
{

 
	ValueTask 
< 
TApplication 
> !
FindByPhysicalIdAsync  5
(5 6
string6 <

identifier= G
,G H
CancellationTokenI Z
cancellationToken[ l
)l m
;m n
	ValueTask 
< 
string 
> 
GetPhysicalIdAsync ,
(, -
TApplication- 9
application: E
,E F
CancellationTokenG X
cancellationTokenY j
)j k
;k l
	ValueTask 
< 
ImmutableArray  
<  !
string! '
>' (
>( )
GetRolesAsync* 7
(7 8
TApplication8 D
applicationE P
,P Q
CancellationTokenR c
cancellationTokend u
)u v
;v w
IAsyncEnumerable 
< 
TApplication %
>% &
ListInRoleAsync' 6
(6 7
string7 =
role> B
,B C
CancellationTokenD U
cancellationTokenV g
)g h
;h i
	ValueTask 
SetRolesAsync 
(  
TApplication  ,
application- 8
,8 9
ImmutableArray: H
<H I
stringI O
>O P
rolesQ V
,V W
CancellationTokenX i
cancellationTokenj {
){ |
;| }
} 
} Ç

†D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Stores\IOpenIdAuthorizationStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Stores* 0
{ 
public 

	interface %
IOpenIdAuthorizationStore .
<. /
TAuthorization/ =
>= >
:? @)
IOpenIddictAuthorizationStoreA ^
<^ _
TAuthorization_ m
>m n
whereo t
TAuthorization	u É
:
Ñ Ö
class
Ü ã
{ 
	ValueTask		 
<		 
TAuthorization		  
>		  !!
FindByPhysicalIdAsync		" 7
(		7 8
string		8 >

identifier		? I
,		I J
CancellationToken		K \
cancellationToken		] n
)		n o
;		o p
	ValueTask

 
<

 
string

 
>

 
GetPhysicalIdAsync

 ,
(

, -
TAuthorization

- ;
authorization

< I
,

I J
CancellationToken

K \
cancellationToken

] n
)

n o
;

o p
} 
} µ	
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Stores\IOpenIdScopeStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Stores* 0
{ 
public 

	interface 
IOpenIdScopeStore &
<& '
TScope' -
>- .
:/ 0!
IOpenIddictScopeStore1 F
<F G
TScopeG M
>M N
whereO T
TScopeU [
:\ ]
class^ c
{ 
	ValueTask		 
<		 
TScope		 
>		 !
FindByPhysicalIdAsync		 /
(		/ 0
string		0 6

identifier		7 A
,		A B
CancellationToken		C T
cancellationToken		U f
)		f g
;		g h
	ValueTask

 
<

 
string

 
>

 
GetPhysicalIdAsync

 ,
(

, -
TScope

- 3
scope

4 9
,

9 :
CancellationToken

; L
cancellationToken

M ^
)

^ _
;

_ `
} 
} µ	
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Abstractions\Stores\IOpenIdTokenStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Abstractions )
.) *
Stores* 0
{ 
public 

	interface 
IOpenIdTokenStore &
<& '
TToken' -
>- .
:/ 0!
IOpenIddictTokenStore1 F
<F G
TTokenG M
>M N
whereO T
TTokenU [
:\ ]
class^ c
{ 
	ValueTask		 
<		 
TToken		 
>		 !
FindByPhysicalIdAsync		 /
(		/ 0
string		0 6

identifier		7 A
,		A B
CancellationToken		C T
cancellationToken		U f
)		f g
;		g h
	ValueTask

 
<

 
string

 
>

 
GetPhysicalIdAsync

 ,
(

, -
TToken

- 3
token

4 9
,

9 :
CancellationToken

; L
cancellationToken

M ^
)

^ _
;

_ `
} 
} ñ
ÇD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\OpenIdConstants.cs
	namespace 	
OrchardCore
 
. 
OpenId 
{ 
public 

static 
class 
OpenIdConstants '
{ 
public 
static 
class 
Claims "
{ 	
public 
const 
string 

EntityType  *
=+ ,
$str- 7
;7 8
} 	
public

 
static

 
class

 
EntityTypes

 '
{ 	
public 
const 
string 
Application  +
=, -
$str. ;
;; <
public 
const 
string 
User  $
=% &
$str' -
;- .
} 	
public 
static 
class 
Features $
{ 	
public 
const 
string 
Client  &
=' (
$str) D
;D E
public 
const 
string 
Core  $
=% &
$str' ;
;; <
public 
const 
string 

Management  *
=+ ,
$str- L
;L M
public 
const 
string 
Server  &
=' (
$str) D
;D E
public 
const 
string 

Validation  *
=+ ,
$str- L
;L M
} 	
public 
static 
class 
Prefixes $
{ 	
public 
const 
string 
Tenant  &
=' (
$str) /
;/ 0
} 	
public 
static 
class 

Properties &
{ 	
public   
const   
string   
Roles    %
=  & '
$str  ( /
;  / 0
}!! 	
}"" 
}## ÓL
ÉD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\OpenIdExtensions.cs
	namespace 	
	Microsoft
 
. 

Extensions 
. 
DependencyInjection 2
{ 
public 

static 
class 
OpenIdExtensions (
{ 
public 
static !
OpenIddictCoreBuilder + 
AddOrchardMigrations, @
(@ A
thisA E!
OpenIddictCoreBuilderF [
builder\ c
)c d
{ 	
if 
( 
builder 
== 
null 
)  
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
builder7 >
)> ?
)? @
;@ A
} 
builder 
. 
Services 
. 
TryAddEnumerable -
(- .
ServiceDescriptor !
.! "
Scoped" (
<( )
IDataMigration) 7
,7 8
OpenIdMigrations9 I
>I J
(J K
)K L
)L M
;M N
return 
builder 
; 
} 	
public 
static !
OpenIddictCoreBuilder +
UseOrchardManagers, >
(> ?
this? C!
OpenIddictCoreBuilderD Y
builderZ a
)a b
{   	
if!! 
(!! 
builder!! 
==!! 
null!! 
)!!  
{"" 
throw## 
new## !
ArgumentNullException## /
(##/ 0
nameof##0 6
(##6 7
builder##7 >
)##> ?
)##? @
;##@ A
}$$ 
builder&& 
.&& %
ReplaceApplicationManager&& -
(&&- .
typeof&&. 4
(&&4 5$
OpenIdApplicationManager&&5 M
<&&M N
>&&N O
)&&O P
)&&P Q
.'' '
ReplaceAuthorizationManager'' /
(''/ 0
typeof''0 6
(''6 7&
OpenIdAuthorizationManager''7 Q
<''Q R
>''R S
)''S T
)''T U
.(( 
ReplaceScopeManager(( '
(((' (
typeof((( .
(((. /
OpenIdScopeManager((/ A
<((A B
>((B C
)((C D
)((D E
.)) 
ReplaceTokenManager)) '
())' (
typeof))( .
()). /
OpenIdTokenManager))/ A
<))A B
>))B C
)))C D
)))D E
;))E F
builder-- 
.-- 
Services-- 
.-- 
TryAddScoped-- )
(--) *
provider--* 2
=>--3 5
(--6 7%
IOpenIdApplicationManager--7 P
)--P Q
provider.. 
... 
GetRequiredService.. +
<..+ ,)
IOpenIddictApplicationManager.., I
>..I J
(..J K
)..K L
)..L M
;..M N
builder// 
.// 
Services// 
.// 
TryAddScoped// )
(//) *
provider//* 2
=>//3 5
(//6 7'
IOpenIdAuthorizationManager//7 R
)//R S
provider00 
.00 
GetRequiredService00 +
<00+ ,+
IOpenIddictAuthorizationManager00, K
>00K L
(00L M
)00M N
)00N O
;00O P
builder11 
.11 
Services11 
.11 
TryAddScoped11 )
(11) *
provider11* 2
=>113 5
(116 7
IOpenIdScopeManager117 J
)11J K
provider22 
.22 
GetRequiredService22 +
<22+ ,#
IOpenIddictScopeManager22, C
>22C D
(22D E
)22E F
)22F G
;22G H
builder33 
.33 
Services33 
.33 
TryAddScoped33 )
(33) *
provider33* 2
=>333 5
(336 7
IOpenIdTokenManager337 J
)33J K
provider44 
.44 
GetRequiredService44 +
<44+ ,#
IOpenIddictTokenManager44, C
>44C D
(44D E
)44E F
)44F G
;44G H
return66 
builder66 
;66 
}77 	
public99 
static99 !
OpenIddictCoreBuilder99 +
	UseYesSql99, 5
(995 6
this996 :!
OpenIddictCoreBuilder99; P
builder99Q X
)99X Y
{:: 	
if;; 
(;; 
builder;; 
==;; 
null;; 
);;  
{<< 
throw== 
new== !
ArgumentNullException== /
(==/ 0
nameof==0 6
(==6 7
builder==7 >
)==> ?
)==? @
;==@ A
}>> 
builderCC 
.CC 
	ConfigureCC 
(CC 
optionsCC %
=>CC& (
optionsCC) 0
.CC0 1&
DisableAdditionalFilteringCC1 K
=CCL M
falseCCN S
)CCS T
;CCT U
builderEE 
.EE '
SetDefaultApplicationEntityEE /
<EE/ 0
OpenIdApplicationEE0 A
>EEA B
(EEB C
)EEC D
.FF )
SetDefaultAuthorizationEntityFF 1
<FF1 2
OpenIdAuthorizationFF2 E
>FFE F
(FFF G
)FFG H
.GG !
SetDefaultScopeEntityGG )
<GG) *
OpenIdScopeGG* 5
>GG5 6
(GG6 7
)GG7 8
.HH !
SetDefaultTokenEntityHH )
<HH) *
OpenIdTokenHH* 5
>HH5 6
(HH6 7
)HH7 8
;HH8 9
builderJJ 
.JJ +
ReplaceApplicationStoreResolverJJ 3
<JJ3 4*
OpenIdApplicationStoreResolverJJ4 R
>JJR S
(JJS T
)JJT U
.KK -
!ReplaceAuthorizationStoreResolverKK 5
<KK5 6,
 OpenIdAuthorizationStoreResolverKK6 V
>KKV W
(KKW X
)KKX Y
.LL %
ReplaceScopeStoreResolverLL -
<LL- .$
OpenIdScopeStoreResolverLL. F
>LLF G
(LLG H
)LLH I
.MM %
ReplaceTokenStoreResolverMM -
<MM- .$
OpenIdTokenStoreResolverMM. F
>MMF G
(MMG H
)MMH I
;MMI J
builderOO 
.OO 
ServicesOO 
.OO 
TryAddSingletonOO ,
<OO, -*
OpenIdApplicationStoreResolverOO- K
.OOK L
TypeResolutionCacheOOL _
>OO_ `
(OO` a
)OOa b
;OOb c
builderPP 
.PP 
ServicesPP 
.PP 
TryAddSingletonPP ,
<PP, -,
 OpenIdAuthorizationStoreResolverPP- M
.PPM N
TypeResolutionCachePPN a
>PPa b
(PPb c
)PPc d
;PPd e
builderQQ 
.QQ 
ServicesQQ 
.QQ 
TryAddSingletonQQ ,
<QQ, -$
OpenIdScopeStoreResolverQQ- E
.QQE F
TypeResolutionCacheQQF Y
>QQY Z
(QQZ [
)QQ[ \
;QQ\ ]
builderRR 
.RR 
ServicesRR 
.RR 
TryAddSingletonRR ,
<RR, -$
OpenIdTokenStoreResolverRR- E
.RRE F
TypeResolutionCacheRRF Y
>RRY Z
(RRZ [
)RR[ \
;RR\ ]
builderTT 
.TT 
ServicesTT 
.TT 
TryAddScopedTT )
(TT) *
typeofTT* 0
(TT0 1"
OpenIdApplicationStoreTT1 G
<TTG H
>TTH I
)TTI J
)TTJ K
;TTK L
builderUU 
.UU 
ServicesUU 
.UU 
TryAddScopedUU )
(UU) *
typeofUU* 0
(UU0 1$
OpenIdAuthorizationStoreUU1 I
<UUI J
>UUJ K
)UUK L
)UUL M
;UUM N
builderVV 
.VV 
ServicesVV 
.VV 
TryAddScopedVV )
(VV) *
typeofVV* 0
(VV0 1
OpenIdScopeStoreVV1 A
<VVA B
>VVB C
)VVC D
)VVD E
;VVE F
builderWW 
.WW 
ServicesWW 
.WW 
TryAddScopedWW )
(WW) *
typeofWW* 0
(WW0 1
OpenIdTokenStoreWW1 A
<WWA B
>WWB C
)WWC D
)WWD E
;WWE F
builderYY 
.YY 
ServicesYY 
.YY 
TryAddEnumerableYY -
(YY- .
newYY. 1
[YY1 2
]YY2 3
{ZZ 
ServiceDescriptor[[ !
.[[! "
	Singleton[[" +
<[[+ ,
IIndexProvider[[, :
,[[: ;*
OpenIdApplicationIndexProvider[[< Z
>[[Z [
([[[ \
)[[\ ]
,[[] ^
ServiceDescriptor\\ !
.\\! "
	Singleton\\" +
<\\+ ,
IIndexProvider\\, :
,\\: ;,
 OpenIdAuthorizationIndexProvider\\< \
>\\\ ]
(\\] ^
)\\^ _
,\\_ `
ServiceDescriptor]] !
.]]! "
	Singleton]]" +
<]]+ ,
IIndexProvider]], :
,]]: ;$
OpenIdScopeIndexProvider]]< T
>]]T U
(]]U V
)]]V W
,]]W X
ServiceDescriptor^^ !
.^^! "
	Singleton^^" +
<^^+ ,
IIndexProvider^^, :
,^^: ;$
OpenIdTokenIndexProvider^^< T
>^^T U
(^^U V
)^^V W
}__ 
)__ 
;__ 
returnaa 
builderaa 
;aa 
}bb 	
}cc 
}dd ìª
ùD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Services\Managers\OpenIdApplicationManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Services %
.% &
Managers& .
{ 
public 

class $
OpenIdApplicationManager )
<) *
TApplication* 6
>6 7
:8 9(
OpenIddictApplicationManager: V
<V W
TApplicationW c
>c d
,d e%
IOpenIdApplicationManager !
where" '
TApplication( 4
:5 6
class7 <
{ 
public $
OpenIdApplicationManager '
(' ('
IOpenIddictApplicationCache '
<' (
TApplication( 4
>4 5
cache6 ;
,; <
ILogger 
< $
OpenIdApplicationManager ,
<, -
TApplication- 9
>9 :
>: ;
logger< B
,B C
IOptionsMonitor 
< !
OpenIddictCoreOptions 1
>1 2
options3 :
,: ;/
#IOpenIddictApplicationStoreResolver /
resolver0 8
)8 9
: 
base 
( 
cache 
, 
logger  
,  !
options" )
,) *
resolver+ 3
)3 4
{ 	
} 	
public)) 
virtual)) 
	ValueTask))  
<))  !
TApplication))! -
>))- .!
FindByPhysicalIdAsync))/ D
())D E
string))E K

identifier))L V
,))V W
CancellationToken))X i
cancellationToken))j {
=))| }
default	))~ Ö
)
))Ö Ü
{** 	
if++ 
(++ 
string++ 
.++ 
IsNullOrEmpty++ $
(++$ %

identifier++% /
)++/ 0
)++0 1
{,, 
throw-- 
new-- 
ArgumentException-- +
(--+ ,
$str--, U
,--U V
nameof--W ]
(--] ^

identifier--^ h
)--h i
)--i j
;--j k
}.. 
return00 
Store00 
is00 #
IOpenIdApplicationStore00 3
<003 4
TApplication004 @
>00@ A
store00B G
?00H I
store11 
.11 !
FindByPhysicalIdAsync11 +
(11+ ,

identifier11, 6
,116 7
cancellationToken118 I
)11I J
:11K L
Store22 
.22 
FindByIdAsync22 #
(22# $

identifier22$ .
,22. /
cancellationToken220 A
)22A B
;22B C
}33 	
public>> 
virtual>> 
	ValueTask>>  
<>>  !
string>>! '
>>>' (
GetPhysicalIdAsync>>) ;
(>>; <
TApplication>>< H
application>>I T
,>>T U
CancellationToken>>V g
cancellationToken>>h y
=>>z {
default	>>| É
)
>>É Ñ
{?? 	
if@@ 
(@@ 
application@@ 
==@@ 
null@@ #
)@@# $
{AA 
throwBB 
newBB !
ArgumentNullExceptionBB /
(BB/ 0
nameofBB0 6
(BB6 7
applicationBB7 B
)BBB C
)BBC D
;BBD E
}CC 
returnEE 
StoreEE 
isEE #
IOpenIdApplicationStoreEE 3
<EE3 4
TApplicationEE4 @
>EE@ A
storeEEB G
?EEH I
storeFF 
.FF 
GetPhysicalIdAsyncFF (
(FF( )
applicationFF) 4
,FF4 5
cancellationTokenFF6 G
)FFG H
:FFI J
StoreGG 
.GG 

GetIdAsyncGG  
(GG  !
applicationGG! ,
,GG, -
cancellationTokenGG. ?
)GG? @
;GG@ A
}HH 	
publicJJ 
virtualJJ 
asyncJJ 
	ValueTaskJJ &
<JJ& '
ImmutableArrayJJ' 5
<JJ5 6
stringJJ6 <
>JJ< =
>JJ= >
GetRolesAsyncJJ? L
(JJL M
TApplicationKK 
applicationKK $
,KK$ %
CancellationTokenKK& 7
cancellationTokenKK8 I
=KKJ K
defaultKKL S
)KKS T
{LL 	
ifMM 
(MM 
applicationMM 
==MM 
nullMM #
)MM# $
{NN 
throwOO 
newOO !
ArgumentNullExceptionOO /
(OO/ 0
nameofOO0 6
(OO6 7
applicationOO7 B
)OOB C
)OOC D
;OOD E
}PP 
ifRR 
(RR 
StoreRR 
isRR #
IOpenIdApplicationStoreRR 0
<RR0 1
TApplicationRR1 =
>RR= >
storeRR? D
)RRD E
{SS 
returnTT 
awaitTT 
storeTT "
.TT" #
GetRolesAsyncTT# 0
(TT0 1
applicationTT1 <
,TT< =
cancellationTokenTT> O
)TTO P
;TTP Q
}UU 
elseVV 
{WW 
varXX 

propertiesXX 
=XX  
awaitXX! &
StoreXX' ,
.XX, -
GetPropertiesAsyncXX- ?
(XX? @
applicationXX@ K
,XXK L
cancellationTokenXXM ^
)XX^ _
;XX_ `
ifYY 
(YY 

propertiesYY 
.YY 
TryGetValueYY *
(YY* +
OpenIdConstantsYY+ :
.YY: ;

PropertiesYY; E
.YYE F
RolesYYF K
,YYK L
outYYM P
JsonElementYYQ \
valueYY] b
)YYb c
)YYc d
{ZZ 
var[[ 
builder[[ 
=[[  !
ImmutableArray[[" 0
.[[0 1
CreateBuilder[[1 >
<[[> ?
string[[? E
>[[E F
([[F G
)[[G H
;[[H I
foreach]] 
(]] 
var]]  
item]]! %
in]]& (
value]]) .
.]]. /
EnumerateArray]]/ =
(]]= >
)]]> ?
)]]? @
{^^ 
builder__ 
.__  
Add__  #
(__# $
item__$ (
.__( )
	GetString__) 2
(__2 3
)__3 4
)__4 5
;__5 6
}`` 
returnbb 
builderbb "
.bb" #
ToImmutablebb# .
(bb. /
)bb/ 0
;bb0 1
}cc 
returnee 
ImmutableArrayee %
.ee% &
Createee& ,
<ee, -
stringee- 3
>ee3 4
(ee4 5
)ee5 6
;ee6 7
}ff 
}gg 	
publicii 
virtualii 
IAsyncEnumerableii '
<ii' (
TApplicationii( 4
>ii4 5
ListInRoleAsyncii6 E
(iiE F
stringjj 
rolejj 
,jj 
CancellationTokenjj *
cancellationTokenjj+ <
=jj= >
defaultjj? F
)jjF G
{kk 	
ifll 
(ll 
stringll 
.ll 
IsNullOrEmptyll $
(ll$ %
rolell% )
)ll) *
)ll* +
{mm 
thrownn 
newnn 
ArgumentExceptionnn +
(nn+ ,
$strnn, T
,nnT U
nameofnnV \
(nn\ ]
rolenn] a
)nna b
)nnb c
;nnc d
}oo 
ifqq 
(qq 
Storeqq 
isqq #
IOpenIdApplicationStoreqq 0
<qq0 1
TApplicationqq1 =
>qq= >
storeqq? D
)qqD E
{rr 
returnss 
storess 
.ss 
ListInRoleAsyncss ,
(ss, -
roless- 1
,ss1 2
cancellationTokenss3 D
)ssD E
;ssE F
}tt 
returnvv 
ExecuteAsyncvv 
(vv  
)vv  !
;vv! "
asyncxx 
IAsyncEnumerablexx "
<xx" #
TApplicationxx# /
>xx/ 0
ExecuteAsyncxx1 =
(xx= >
)xx> ?
{yy 
forzz 
(zz 
varzz 
offsetzz 
=zz  !
$numzz" #
;zz# $
;zz% &
offsetzz' -
+=zz. 0
$numzz1 6
)zz6 7
{{{ 
await|| 
foreach|| !
(||" #
var||# &
application||' 2
in||3 5
Store||6 ;
.||; <
	ListAsync||< E
(||E F
$num||F K
,||K L
offset||M S
,||S T
cancellationToken||U f
)||f g
)||g h
{}} 
var~~ 
roles~~ !
=~~" #
await~~$ )
GetRolesAsync~~* 7
(~~7 8
application~~8 C
,~~C D
cancellationToken~~E V
)~~V W
;~~W X
if 
( 
roles !
.! "
Contains" *
(* +
role+ /
,/ 0
StringComparer1 ?
.? @
OrdinalIgnoreCase@ Q
)Q R
)R S
{
ÄÄ 
yield
ÅÅ !
return
ÅÅ" (
application
ÅÅ) 4
;
ÅÅ4 5
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
àà 
virtual
àà 
async
àà 
	ValueTask
àà &
SetRolesAsync
àà' 4
(
àà4 5
TApplication
àà5 A
application
ààB M
,
ààM N
ImmutableArray
ââ 
<
ââ 
string
ââ !
>
ââ! "
roles
ââ# (
,
ââ( )
CancellationToken
ââ* ;
cancellationToken
ââ< M
=
ââN O
default
ââP W
)
ââW X
{
ää 	
if
ãã 
(
ãã 
application
ãã 
==
ãã 
null
ãã #
)
ãã# $
{
åå 
throw
çç 
new
çç #
ArgumentNullException
çç /
(
çç/ 0
nameof
çç0 6
(
çç6 7
application
çç7 B
)
ççB C
)
ççC D
;
ççD E
}
éé 
if
êê 
(
êê 
roles
êê 
.
êê 
Any
êê 
(
êê 
role
êê 
=>
êê !
string
êê" (
.
êê( )
IsNullOrEmpty
êê) 6
(
êê6 7
role
êê7 ;
)
êê; <
)
êê< =
)
êê= >
{
ëë 
throw
íí 
new
íí 
ArgumentException
íí +
(
íí+ ,
$str
íí, Q
,
ííQ R
nameof
ííS Y
(
ííY Z
roles
ííZ _
)
íí_ `
)
íí` a
;
íía b
}
ìì 
if
ïï 
(
ïï 
Store
ïï 
is
ïï %
IOpenIdApplicationStore
ïï 0
<
ïï0 1
TApplication
ïï1 =
>
ïï= >
store
ïï? D
)
ïïD E
{
ññ 
await
óó 
store
óó 
.
óó 
SetRolesAsync
óó )
(
óó) *
application
óó* 5
,
óó5 6
roles
óó7 <
,
óó< =
cancellationToken
óó> O
)
óóO P
;
óóP Q
}
òò 
else
ôô 
{
öö 
var
õõ 

properties
õõ 
=
õõ  
await
õõ! &
Store
õõ' ,
.
õõ, - 
GetPropertiesAsync
õõ- ?
(
õõ? @
application
õõ@ K
,
õõK L
cancellationToken
õõM ^
)
õõ^ _
;
õõ_ `

properties
úú 
=
úú 

properties
úú '
.
úú' (
SetItem
úú( /
(
úú/ 0
OpenIdConstants
úú0 ?
.
úú? @

Properties
úú@ J
.
úúJ K
Roles
úúK P
,
úúP Q
JsonSerializer
úúR `
.
úú` a
Deserialize
úúa l
<
úúl m
JsonElement
úúm x
>
úúx y
(
úúy z
JsonSerializer
ùù "
.
ùù" #
	Serialize
ùù# ,
(
ùù, -
roles
ùù- 2
,
ùù2 3
new
ùù4 7#
JsonSerializerOptions
ùù8 M
{
ûû 
Encoder
üü 
=
üü  !
JavaScriptEncoder
üü" 3
.
üü3 4'
UnsafeRelaxedJsonEscaping
üü4 M
}
†† 
)
†† 
)
†† 
)
†† 
;
†† 
await
¢¢ 
Store
¢¢ 
.
¢¢  
SetPropertiesAsync
¢¢ .
(
¢¢. /
application
¢¢/ :
,
¢¢: ;

properties
¢¢< F
,
¢¢F G
cancellationToken
¢¢H Y
)
¢¢Y Z
;
¢¢Z [
}
££ 
await
•• 
UpdateAsync
•• 
(
•• 
application
•• )
,
••) *
cancellationToken
••+ <
)
••< =
;
••= >
}
¶¶ 	
public
®® 
override
®® 
async
®® 
	ValueTask
®® '
PopulateAsync
®®( 5
(
®®5 6
TApplication
®®6 B
application
®®C N
,
®®N O-
OpenIddictApplicationDescriptor
©© +

descriptor
©©, 6
,
©©6 7
CancellationToken
©©8 I
cancellationToken
©©J [
=
©©\ ]
default
©©^ e
)
©©e f
{
™™ 	
if
´´ 
(
´´ 
application
´´ 
==
´´ 
null
´´ #
)
´´# $
{
¨¨ 
throw
≠≠ 
new
≠≠ #
ArgumentNullException
≠≠ /
(
≠≠/ 0
nameof
≠≠0 6
(
≠≠6 7
application
≠≠7 B
)
≠≠B C
)
≠≠C D
;
≠≠D E
}
ÆÆ 
if
∞∞ 
(
∞∞ 

descriptor
∞∞ 
==
∞∞ 
null
∞∞ "
)
∞∞" #
{
±± 
throw
≤≤ 
new
≤≤ #
ArgumentNullException
≤≤ /
(
≤≤/ 0
nameof
≤≤0 6
(
≤≤6 7

descriptor
≤≤7 A
)
≤≤A B
)
≤≤B C
;
≤≤C D
}
≥≥ 
if
µµ 
(
µµ 

descriptor
µµ 
is
µµ )
OpenIdApplicationDescriptor
µµ 9
model
µµ: ?
)
µµ? @
{
∂∂ 
if
∑∑ 
(
∑∑ 
Store
∑∑ 
is
∑∑ %
IOpenIdApplicationStore
∑∑ 4
<
∑∑4 5
TApplication
∑∑5 A
>
∑∑A B
store
∑∑C H
)
∑∑H I
{
∏∏ 
await
ππ 
store
ππ 
.
ππ  
SetRolesAsync
ππ  -
(
ππ- .
application
ππ. 9
,
ππ9 :
model
ππ; @
.
ππ@ A
Roles
ππA F
.
ππF G
ToImmutableArray
ππG W
(
ππW X
)
ππX Y
,
ππY Z
cancellationToken
ππ[ l
)
ππl m
;
ππm n
}
∫∫ 
else
ªª 
{
ºº 
var
ΩΩ 

properties
ΩΩ "
=
ΩΩ# $
await
ΩΩ% *
Store
ΩΩ+ 0
.
ΩΩ0 1 
GetPropertiesAsync
ΩΩ1 C
(
ΩΩC D
application
ΩΩD O
,
ΩΩO P
cancellationToken
ΩΩQ b
)
ΩΩb c
;
ΩΩc d

properties
ææ 
=
ææ  

properties
ææ! +
.
ææ+ ,
SetItem
ææ, 3
(
ææ3 4
OpenIdConstants
ææ4 C
.
ææC D

Properties
ææD N
.
ææN O
Roles
ææO T
,
ææT U
JsonSerializer
ææV d
.
ææd e
Deserialize
ææe p
<
ææp q
JsonElement
ææq |
>
ææ| }
(
ææ} ~
JsonSerializer
øø &
.
øø& '
	Serialize
øø' 0
(
øø0 1
model
øø1 6
.
øø6 7
Roles
øø7 <
,
øø< =
new
øø> A#
JsonSerializerOptions
øøB W
{
¿¿ 
Encoder
¡¡ #
=
¡¡$ %
JavaScriptEncoder
¡¡& 7
.
¡¡7 8'
UnsafeRelaxedJsonEscaping
¡¡8 Q
}
¬¬ 
)
¬¬ 
)
¬¬ 
)
¬¬ 
;
¬¬ 
await
ƒƒ 
Store
ƒƒ 
.
ƒƒ   
SetPropertiesAsync
ƒƒ  2
(
ƒƒ2 3
application
ƒƒ3 >
,
ƒƒ> ?

properties
ƒƒ@ J
,
ƒƒJ K
cancellationToken
ƒƒL ]
)
ƒƒ] ^
;
ƒƒ^ _
}
≈≈ 
}
∆∆ 
await
»» 
base
»» 
.
»» 
PopulateAsync
»» $
(
»»$ %
application
»»% 0
,
»»0 1

descriptor
»»2 <
,
»»< =
cancellationToken
»»> O
)
»»O P
;
»»P Q
}
…… 	
public
ÀÀ 
override
ÀÀ 
async
ÀÀ 
	ValueTask
ÀÀ '
PopulateAsync
ÀÀ( 5
(
ÀÀ5 6-
OpenIddictApplicationDescriptor
ÀÀ6 U

descriptor
ÀÀV `
,
ÀÀ` a
TApplication
ÃÃ 
application
ÃÃ $
,
ÃÃ$ %
CancellationToken
ÃÃ& 7
cancellationToken
ÃÃ8 I
=
ÃÃJ K
default
ÃÃL S
)
ÃÃS T
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 

descriptor
ŒŒ 
==
ŒŒ 
null
ŒŒ "
)
ŒŒ" #
{
œœ 
throw
–– 
new
–– #
ArgumentNullException
–– /
(
––/ 0
nameof
––0 6
(
––6 7

descriptor
––7 A
)
––A B
)
––B C
;
––C D
}
—— 
if
”” 
(
”” 
application
”” 
==
”” 
null
”” #
)
””# $
{
‘‘ 
throw
’’ 
new
’’ #
ArgumentNullException
’’ /
(
’’/ 0
nameof
’’0 6
(
’’6 7
application
’’7 B
)
’’B C
)
’’C D
;
’’D E
}
÷÷ 
if
ÿÿ 
(
ÿÿ 

descriptor
ÿÿ 
is
ÿÿ )
OpenIdApplicationDescriptor
ÿÿ 9
model
ÿÿ: ?
)
ÿÿ? @
{
ŸŸ 
model
⁄⁄ 
.
⁄⁄ 
Roles
⁄⁄ 
.
⁄⁄ 
	UnionWith
⁄⁄ %
(
⁄⁄% &
await
⁄⁄& +
GetRolesAsync
⁄⁄, 9
(
⁄⁄9 :
application
⁄⁄: E
,
⁄⁄E F
cancellationToken
⁄⁄G X
)
⁄⁄X Y
)
⁄⁄Y Z
;
⁄⁄Z [
}
€€ 
await
›› 
base
›› 
.
›› 
PopulateAsync
›› $
(
››$ %

descriptor
››% /
,
››/ 0
application
››1 <
,
››< =
cancellationToken
››> O
)
››O P
;
››P Q
}
ﬁﬁ 	
public
‡‡ 
override
‡‡ 
IAsyncEnumerable
‡‡ (
<
‡‡( )
ValidationResult
‡‡) 9
>
‡‡9 :
ValidateAsync
‡‡; H
(
‡‡H I
TApplication
·· 
application
·· $
,
··$ %
CancellationToken
··& 7
cancellationToken
··8 I
=
··J K
default
··L S
)
··S T
{
‚‚ 	
if
„„ 
(
„„ 
application
„„ 
==
„„ 
null
„„ #
)
„„# $
{
‰‰ 
throw
ÂÂ 
new
ÂÂ #
ArgumentNullException
ÂÂ /
(
ÂÂ/ 0
nameof
ÂÂ0 6
(
ÂÂ6 7
application
ÂÂ7 B
)
ÂÂB C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ 
return
ËË 
ExecuteAsync
ËË 
(
ËË  
)
ËË  !
;
ËË! "
async
ÍÍ 
IAsyncEnumerable
ÍÍ "
<
ÍÍ" #
ValidationResult
ÍÍ# 3
>
ÍÍ3 4
ExecuteAsync
ÍÍ5 A
(
ÍÍA B
)
ÍÍB C
{
ÎÎ 
await
ÏÏ 
foreach
ÏÏ 
(
ÏÏ 
var
ÏÏ "
result
ÏÏ# )
in
ÏÏ* ,
base
ÏÏ- 1
.
ÏÏ1 2
ValidateAsync
ÏÏ2 ?
(
ÏÏ? @
application
ÏÏ@ K
,
ÏÏK L
cancellationToken
ÏÏM ^
)
ÏÏ^ _
)
ÏÏ_ `
{
ÌÌ 
yield
ÓÓ 
return
ÓÓ  
result
ÓÓ! '
;
ÓÓ' (
}
ÔÔ 
foreach
ÒÒ 
(
ÒÒ 
var
ÒÒ 
role
ÒÒ !
in
ÒÒ" $
await
ÒÒ% *
GetRolesAsync
ÒÒ+ 8
(
ÒÒ8 9
application
ÒÒ9 D
,
ÒÒD E
cancellationToken
ÒÒF W
)
ÒÒW X
)
ÒÒX Y
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 
string
ÛÛ 
.
ÛÛ 
IsNullOrEmpty
ÛÛ ,
(
ÛÛ, -
role
ÛÛ- 1
)
ÛÛ1 2
)
ÛÛ2 3
{
ÙÙ 
yield
ıı 
return
ıı $
new
ıı% (
ValidationResult
ıı) 9
(
ıı9 :
$str
ıı: Z
)
ııZ [
;
ıı[ \
break
˜˜ 
;
˜˜ 
}
¯¯ 
}
˘˘ 
}
˙˙ 
}
˚˚ 	
async
˝˝ 
	ValueTask
˝˝ 
<
˝˝ 
object
˝˝ 
>
˝˝ '
IOpenIdApplicationManager
˝˝  9
.
˝˝9 :#
FindByPhysicalIdAsync
˝˝: O
(
˝˝O P
string
˝˝P V

identifier
˝˝W a
,
˝˝a b
CancellationToken
˝˝c t 
cancellationToken˝˝u Ü
)˝˝Ü á
=>
˛˛ 
await
˛˛ #
FindByPhysicalIdAsync
˛˛ *
(
˛˛* +

identifier
˛˛+ 5
,
˛˛5 6
cancellationToken
˛˛7 H
)
˛˛H I
;
˛˛I J
	ValueTask
ÄÄ 
<
ÄÄ 
string
ÄÄ 
>
ÄÄ '
IOpenIdApplicationManager
ÄÄ 3
.
ÄÄ3 4 
GetPhysicalIdAsync
ÄÄ4 F
(
ÄÄF G
object
ÄÄG M
application
ÄÄN Y
,
ÄÄY Z
CancellationToken
ÄÄ[ l
cancellationToken
ÄÄm ~
)
ÄÄ~ 
=>
ÅÅ  
GetPhysicalIdAsync
ÅÅ !
(
ÅÅ! "
(
ÅÅ" #
TApplication
ÅÅ# /
)
ÅÅ/ 0
application
ÅÅ0 ;
,
ÅÅ; <
cancellationToken
ÅÅ= N
)
ÅÅN O
;
ÅÅO P
	ValueTask
ÉÉ 
<
ÉÉ 
ImmutableArray
ÉÉ  
<
ÉÉ  !
string
ÉÉ! '
>
ÉÉ' (
>
ÉÉ( )'
IOpenIdApplicationManager
ÉÉ* C
.
ÉÉC D
GetRolesAsync
ÉÉD Q
(
ÉÉQ R
object
ÉÉR X
application
ÉÉY d
,
ÉÉd e
CancellationToken
ÉÉf w 
cancellationTokenÉÉx â
)ÉÉâ ä
=>
ÑÑ 
GetRolesAsync
ÑÑ 
(
ÑÑ 
(
ÑÑ 
TApplication
ÑÑ *
)
ÑÑ* +
application
ÑÑ+ 6
,
ÑÑ6 7
cancellationToken
ÑÑ8 I
)
ÑÑI J
;
ÑÑJ K
IAsyncEnumerable
ÜÜ 
<
ÜÜ 
object
ÜÜ 
>
ÜÜ  '
IOpenIdApplicationManager
ÜÜ! :
.
ÜÜ: ;
ListInRoleAsync
ÜÜ; J
(
ÜÜJ K
string
ÜÜK Q
role
ÜÜR V
,
ÜÜV W
CancellationToken
ÜÜX i
cancellationToken
ÜÜj {
)
ÜÜ{ |
=>
áá 
ListInRoleAsync
áá 
(
áá 
role
áá #
,
áá# $
cancellationToken
áá% 6
)
áá6 7
;
áá7 8
	ValueTask
ââ '
IOpenIdApplicationManager
ââ +
.
ââ+ ,
SetRolesAsync
ââ, 9
(
ââ9 :
object
ââ: @
application
ââA L
,
ââL M
ImmutableArray
ââN \
<
ââ\ ]
string
ââ] c
>
ââc d
roles
ââe j
,
ââj k
CancellationToken
ââl } 
cancellationTokenââ~ è
)ââè ê
=>
ää 
SetRolesAsync
ää 
(
ää 
(
ää 
TApplication
ää *
)
ää* +
application
ää+ 6
,
ää6 7
roles
ää8 =
,
ää= >
cancellationToken
ää? P
)
ääP Q
;
ääQ R
}
ãã 
}åå É)
üD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Services\Managers\OpenIdAuthorizationManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Services %
.% &
Managers& .
{ 
public 

class &
OpenIdAuthorizationManager +
<+ ,
TAuthorization, :
>: ;
:< =*
OpenIddictAuthorizationManager> \
<\ ]
TAuthorization] k
>k l
,l m'
IOpenIdAuthorizationManager #
where$ )
TAuthorization* 8
:9 :
class; @
{ 
public &
OpenIdAuthorizationManager )
() *)
IOpenIddictAuthorizationCache )
<) *
TAuthorization* 8
>8 9
cache: ?
,? @
ILogger 
< *
OpenIddictAuthorizationManager 2
<2 3
TAuthorization3 A
>A B
>B C
loggerD J
,J K
IOptionsMonitor 
< !
OpenIddictCoreOptions 1
>1 2
options3 :
,: ;1
%IOpenIddictAuthorizationStoreResolver 1
resolver2 :
): ;
: 
base 
( 
cache 
, 
logger  
,  !
options" )
,) *
resolver+ 3
)3 4
{ 	
} 	
public"" 
virtual"" 
	ValueTask""  
<""  !
TAuthorization""! /
>""/ 0!
FindByPhysicalIdAsync""1 F
(""F G
string""G M

identifier""N X
,""X Y
CancellationToken""Z k
cancellationToken""l }
=""~ 
default
""Ä á
)
""á à
{## 	
if$$ 
($$ 
string$$ 
.$$ 
IsNullOrEmpty$$ $
($$$ %

identifier$$% /
)$$/ 0
)$$0 1
{%% 
throw&& 
new&& 
ArgumentException&& +
(&&+ ,
$str&&, U
,&&U V
nameof&&W ]
(&&] ^

identifier&&^ h
)&&h i
)&&i j
;&&j k
}'' 
return)) 
Store)) 
is)) #
IOpenIdApplicationStore)) 3
<))3 4
TAuthorization))4 B
>))B C
store))D I
?))J K
store** 
.** !
FindByPhysicalIdAsync** +
(**+ ,

identifier**, 6
,**6 7
cancellationToken**8 I
)**I J
:**K L
Store++ 
.++ 
FindByIdAsync++ #
(++# $

identifier++$ .
,++. /
cancellationToken++0 A
)++A B
;++B C
},, 	
public77 
virtual77 
	ValueTask77  
<77  !
string77! '
>77' (
GetPhysicalIdAsync77) ;
(77; <
TAuthorization77< J
authorization77K X
,77X Y
CancellationToken77Z k
cancellationToken77l }
=77~ 
default
77Ä á
)
77á à
{88 	
if99 
(99 
authorization99 
==99  
null99! %
)99% &
{:: 
throw;; 
new;; !
ArgumentNullException;; /
(;;/ 0
nameof;;0 6
(;;6 7
authorization;;7 D
);;D E
);;E F
;;;F G
}<< 
return>> 
Store>> 
is>> %
IOpenIdAuthorizationStore>> 5
<>>5 6
TAuthorization>>6 D
>>>D E
store>>F K
?>>L M
store?? 
.?? 
GetPhysicalIdAsync?? (
(??( )
authorization??) 6
,??6 7
cancellationToken??8 I
)??I J
:??K L
Store@@ 
.@@ 

GetIdAsync@@  
(@@  !
authorization@@! .
,@@. /
cancellationToken@@0 A
)@@A B
;@@B C
}AA 	
asyncCC 
	ValueTaskCC 
<CC 
objectCC 
>CC '
IOpenIdAuthorizationManagerCC  ;
.CC; <!
FindByPhysicalIdAsyncCC< Q
(CCQ R
stringCCR X

identifierCCY c
,CCc d
CancellationTokenCCe v
cancellationToken	CCw à
)
CCà â
=>DD 
awaitDD !
FindByPhysicalIdAsyncDD *
(DD* +

identifierDD+ 5
,DD5 6
cancellationTokenDD7 H
)DDH I
;DDI J
	ValueTaskFF 
<FF 
stringFF 
>FF '
IOpenIdAuthorizationManagerFF 5
.FF5 6
GetPhysicalIdAsyncFF6 H
(FFH I
objectFFI O
authorizationFFP ]
,FF] ^
CancellationTokenFF_ p
cancellationToken	FFq Ç
)
FFÇ É
=>GG 
GetPhysicalIdAsyncGG !
(GG! "
(GG" #
TAuthorizationGG# 1
)GG1 2
authorizationGG2 ?
,GG? @
cancellationTokenGGA R
)GGR S
;GGS T
}HH 
}II ì'
óD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Services\Managers\OpenIdScopeManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Services %
.% &
Managers& .
{ 
public 

class 
OpenIdScopeManager #
<# $
TScope$ *
>* +
:, -"
OpenIddictScopeManager. D
<D E
TScopeE K
>K L
,L M
IOpenIdScopeManagerN a
whereb g
TScopeh n
:o p
classq v
{ 
public 
OpenIdScopeManager !
(! "!
IOpenIddictScopeCache !
<! "
TScope" (
>( )
cache* /
,/ 0
ILogger 
< "
OpenIddictScopeManager *
<* +
TScope+ 1
>1 2
>2 3
logger4 :
,: ;
IOptionsMonitor 
< !
OpenIddictCoreOptions 1
>1 2
options3 :
,: ;)
IOpenIddictScopeStoreResolver )
resolver* 2
)2 3
: 
base 
( 
cache 
, 
logger  
,  !
options" )
,) *
resolver+ 3
)3 4
{ 	
} 	
public!! 
virtual!! 
	ValueTask!!  
<!!  !
TScope!!! '
>!!' (!
FindByPhysicalIdAsync!!) >
(!!> ?
string!!? E

identifier!!F P
,!!P Q
CancellationToken!!R c
cancellationToken!!d u
=!!v w
default!!x 
)	!! Ä
{"" 	
if## 
(## 
string## 
.## 
IsNullOrEmpty## $
(##$ %

identifier##% /
)##/ 0
)##0 1
{$$ 
throw%% 
new%% 
ArgumentException%% +
(%%+ ,
$str%%, U
,%%U V
nameof%%W ]
(%%] ^

identifier%%^ h
)%%h i
)%%i j
;%%j k
}&& 
return(( 
Store(( 
is(( 
IOpenIdScopeStore(( -
<((- .
TScope((. 4
>((4 5
store((6 ;
?((< =
store)) 
.)) !
FindByPhysicalIdAsync)) +
())+ ,

identifier)), 6
,))6 7
cancellationToken))8 I
)))I J
:))K L
Store** 
.** 
FindByIdAsync** #
(**# $

identifier**$ .
,**. /
cancellationToken**0 A
)**A B
;**B C
}++ 	
public66 
virtual66 
	ValueTask66  
<66  !
string66! '
>66' (
GetPhysicalIdAsync66) ;
(66; <
TScope66< B
scope66C H
,66H I
CancellationToken66J [
cancellationToken66\ m
=66n o
default66p w
)66w x
{77 	
if88 
(88 
scope88 
==88 
null88 
)88 
{99 
throw:: 
new:: !
ArgumentNullException:: /
(::/ 0
nameof::0 6
(::6 7
scope::7 <
)::< =
)::= >
;::> ?
};; 
return== 
Store== 
is== 
IOpenIdScopeStore== -
<==- .
TScope==. 4
>==4 5
store==6 ;
?==< =
store>> 
.>> 
GetPhysicalIdAsync>> (
(>>( )
scope>>) .
,>>. /
cancellationToken>>0 A
)>>A B
:>>C D
Store?? 
.?? 

GetIdAsync??  
(??  !
scope??! &
,??& '
cancellationToken??( 9
)??9 :
;??: ;
}@@ 	
asyncBB 
	ValueTaskBB 
<BB 
objectBB 
>BB 
IOpenIdScopeManagerBB  3
.BB3 4!
FindByPhysicalIdAsyncBB4 I
(BBI J
stringBBJ P

identifierBBQ [
,BB[ \
CancellationTokenBB] n
cancellationToken	BBo Ä
)
BBÄ Å
=>CC 
awaitCC !
FindByPhysicalIdAsyncCC *
(CC* +

identifierCC+ 5
,CC5 6
cancellationTokenCC7 H
)CCH I
;CCI J
	ValueTaskEE 
<EE 
stringEE 
>EE 
IOpenIdScopeManagerEE -
.EE- .
GetPhysicalIdAsyncEE. @
(EE@ A
objectEEA G
scopeEEH M
,EEM N
CancellationTokenEEO `
cancellationTokenEEa r
)EEr s
=>FF 
GetPhysicalIdAsyncFF !
(FF! "
(FF" #
TScopeFF# )
)FF) *
scopeFF* /
,FF/ 0
cancellationTokenFF1 B
)FFB C
;FFC D
}GG 
}HH ì'
óD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\Services\Managers\OpenIdTokenManager.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
Services %
.% &
Managers& .
{ 
public 

class 
OpenIdTokenManager #
<# $
TToken$ *
>* +
:, -"
OpenIddictTokenManager. D
<D E
TTokenE K
>K L
,L M
IOpenIdTokenManagerN a
whereb g
TTokenh n
:o p
classq v
{ 
public 
OpenIdTokenManager !
(! "!
IOpenIddictTokenCache !
<! "
TToken" (
>( )
cache* /
,/ 0
ILogger 
< "
OpenIddictTokenManager *
<* +
TToken+ 1
>1 2
>2 3
logger4 :
,: ;
IOptionsMonitor 
< !
OpenIddictCoreOptions 1
>1 2
options3 :
,: ;)
IOpenIddictTokenStoreResolver )
resolver* 2
)2 3
: 
base 
( 
cache 
, 
logger  
,  !
options" )
,) *
resolver+ 3
)3 4
{ 	
} 	
public!! 
virtual!! 
	ValueTask!!  
<!!  !
TToken!!! '
>!!' (!
FindByPhysicalIdAsync!!) >
(!!> ?
string!!? E

identifier!!F P
,!!P Q
CancellationToken!!R c
cancellationToken!!d u
=!!v w
default!!x 
)	!! Ä
{"" 	
if## 
(## 
string## 
.## 
IsNullOrEmpty## $
(##$ %

identifier##% /
)##/ 0
)##0 1
{$$ 
throw%% 
new%% 
ArgumentException%% +
(%%+ ,
$str%%, U
,%%U V
nameof%%W ]
(%%] ^

identifier%%^ h
)%%h i
)%%i j
;%%j k
}&& 
return(( 
Store(( 
is(( 
IOpenIdTokenStore(( -
<((- .
TToken((. 4
>((4 5
store((6 ;
?((< =
store)) 
.)) !
FindByPhysicalIdAsync)) +
())+ ,

identifier)), 6
,))6 7
cancellationToken))8 I
)))I J
:))K L
Store** 
.** 
FindByIdAsync** #
(**# $

identifier**$ .
,**. /
cancellationToken**0 A
)**A B
;**B C
}++ 	
public66 
virtual66 
	ValueTask66  
<66  !
string66! '
>66' (
GetPhysicalIdAsync66) ;
(66; <
TToken66< B
token66C H
,66H I
CancellationToken66J [
cancellationToken66\ m
=66n o
default66p w
)66w x
{77 	
if88 
(88 
token88 
==88 
null88 
)88 
{99 
throw:: 
new:: !
ArgumentNullException:: /
(::/ 0
nameof::0 6
(::6 7
token::7 <
)::< =
)::= >
;::> ?
};; 
return== 
Store== 
is== 
IOpenIdTokenStore== -
<==- .
TToken==. 4
>==4 5
store==6 ;
?==< =
store>> 
.>> 
GetPhysicalIdAsync>> (
(>>( )
token>>) .
,>>. /
cancellationToken>>0 A
)>>A B
:>>C D
Store?? 
.?? 

GetIdAsync??  
(??  !
token??! &
,??& '
cancellationToken??( 9
)??9 :
;??: ;
}@@ 	
asyncBB 
	ValueTaskBB 
<BB 
objectBB 
>BB 
IOpenIdTokenManagerBB  3
.BB3 4!
FindByPhysicalIdAsyncBB4 I
(BBI J
stringBBJ P

identifierBBQ [
,BB[ \
CancellationTokenBB] n
cancellationToken	BBo Ä
)
BBÄ Å
=>CC 
awaitCC !
FindByPhysicalIdAsyncCC *
(CC* +

identifierCC+ 5
,CC5 6
cancellationTokenCC7 H
)CCH I
;CCI J
	ValueTaskEE 
<EE 
stringEE 
>EE 
IOpenIdTokenManagerEE -
.EE- .
GetPhysicalIdAsyncEE. @
(EE@ A
objectEEA G
tokenEEH M
,EEM N
CancellationTokenEEO `
cancellationTokenEEa r
)EEr s
=>FF 
GetPhysicalIdAsyncFF !
(FF! "
(FF" #
TTokenFF# )
)FF) *
tokenFF* /
,FF/ 0
cancellationTokenFF1 B
)FFB C
;FFC D
}GG 
}HH ÎF
òD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdApplicationIndex.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Indexes$ +
{ 
public 

class "
OpenIdApplicationIndex '
:( )
MapIndex* 2
{ 
public		 
string		 
ApplicationId		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
string

 
ClientId

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
} 
public 

class %
OpenIdAppByLogoutUriIndex *
:+ ,
ReduceIndex- 8
{ 
public 
string 
LogoutRedirectUri '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class '
OpenIdAppByRedirectUriIndex ,
:- .
ReduceIndex/ :
{ 
public 
string 
RedirectUri !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class $
OpenIdAppByRoleNameIndex )
:* +
ReduceIndex, 7
{ 
public 
string 
RoleName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class *
OpenIdApplicationIndexProvider /
:0 1
IndexProvider2 ?
<? @
OpenIdApplication@ Q
>Q R
{   
public!! 
override!! 
void!! 
Describe!! %
(!!% &
DescribeContext!!& 5
<!!5 6
OpenIdApplication!!6 G
>!!G H
context!!I P
)!!P Q
{"" 	
context## 
.## 
For## 
<## "
OpenIdApplicationIndex## .
>##. /
(##/ 0
)##0 1
.$$ 
Map$$ 
($$ 
application$$  
=>$$! #
new$$$ '"
OpenIdApplicationIndex$$( >
{%% 
ApplicationId&& !
=&&" #
application&&$ /
.&&/ 0
ApplicationId&&0 =
,&&= >
ClientId'' 
='' 
application'' *
.''* +
ClientId''+ 3
}(( 
)(( 
;(( 
context** 
.** 
For** 
<** %
OpenIdAppByLogoutUriIndex** 1
,**1 2
string**3 9
>**9 :
(**: ;
)**; <
.++ 
Map++ 
(++ 
application++  
=>++! #
application++$ /
.++/ 0"
PostLogoutRedirectUris++0 F
.++F G
Select++G M
(++M N
uri++N Q
=>++R T
new++U X%
OpenIdAppByLogoutUriIndex++Y r
{,, 
LogoutRedirectUri-- %
=--& '
uri--( +
,--+ ,
Count.. 
=.. 
$num.. 
}// 
)// 
)// 
.00 
Group00 
(00 
index00 
=>00 
index00  %
.00% &
LogoutRedirectUri00& 7
)007 8
.11 
Reduce11 
(11 
group11 
=>11  
new11! $%
OpenIdAppByLogoutUriIndex11% >
{22 
LogoutRedirectUri33 %
=33& '
group33( -
.33- .
Key33. 1
,331 2
Count44 
=44 
group44 !
.44! "
Sum44" %
(44% &
x44& '
=>44( *
x44+ ,
.44, -
Count44- 2
)442 3
}55 
)55 
.66 
Delete66 
(66 
(66 
index66 
,66 
map66  #
)66# $
=>66% '
{77 
index88 
.88 
Count88 
-=88  "
map88# &
.88& '
Sum88' *
(88* +
x88+ ,
=>88- /
x880 1
.881 2
Count882 7
)887 8
;888 9
return99 
index99  
.99  !
Count99! &
>99' (
$num99) *
?99+ ,
index99- 2
:993 4
null995 9
;999 :
}:: 
):: 
;:: 
context<< 
.<< 
For<< 
<<< '
OpenIdAppByRedirectUriIndex<< 3
,<<3 4
string<<5 ;
><<; <
(<<< =
)<<= >
.== 
Map== 
(== 
application==  
=>==! #
application==$ /
.==/ 0
RedirectUris==0 <
.==< =
Select=== C
(==C D
uri==D G
=>==H J
new==K N'
OpenIdAppByRedirectUriIndex==O j
{>> 
RedirectUri?? 
=??  !
uri??" %
,??% &
Count@@ 
=@@ 
$num@@ 
}AA 
)AA 
)AA 
.BB 
GroupBB 
(BB 
indexBB 
=>BB 
indexBB  %
.BB% &
RedirectUriBB& 1
)BB1 2
.CC 
ReduceCC 
(CC 
groupCC 
=>CC  
newCC! $'
OpenIdAppByRedirectUriIndexCC% @
{DD 
RedirectUriEE 
=EE  !
groupEE" '
.EE' (
KeyEE( +
,EE+ ,
CountFF 
=FF 
groupFF !
.FF! "
SumFF" %
(FF% &
xFF& '
=>FF( *
xFF+ ,
.FF, -
CountFF- 2
)FF2 3
}GG 
)GG 
.HH 
DeleteHH 
(HH 
(HH 
indexHH 
,HH 
mapHH  #
)HH# $
=>HH% '
{II 
indexJJ 
.JJ 
CountJJ 
-=JJ  "
mapJJ# &
.JJ& '
SumJJ' *
(JJ* +
xJJ+ ,
=>JJ- /
xJJ0 1
.JJ1 2
CountJJ2 7
)JJ7 8
;JJ8 9
returnKK 
indexKK  
.KK  !
CountKK! &
>KK' (
$numKK) *
?KK+ ,
indexKK- 2
:KK3 4
nullKK5 9
;KK9 :
}LL 
)LL 
;LL 
contextNN 
.NN 
ForNN 
<NN $
OpenIdAppByRoleNameIndexNN 0
,NN0 1
stringNN2 8
>NN8 9
(NN9 :
)NN: ;
.OO 
MapOO 
(OO 
applicationOO  
=>OO! #
applicationOO$ /
.OO/ 0
RolesOO0 5
.OO5 6
SelectOO6 <
(OO< =
roleOO= A
=>OOB D
newOOE H$
OpenIdAppByRoleNameIndexOOI a
{PP 
RoleNameQQ 
=QQ 
roleQQ #
,QQ# $
CountRR 
=RR 
$numRR 
}SS 
)SS 
)SS 
.TT 
GroupTT 
(TT 
indexTT 
=>TT 
indexTT  %
.TT% &
RoleNameTT& .
)TT. /
.UU 
ReduceUU 
(UU 
groupUU 
=>UU  
newUU! $$
OpenIdAppByRoleNameIndexUU% =
{VV 
RoleNameWW 
=WW 
groupWW $
.WW$ %
KeyWW% (
,WW( )
CountXX 
=XX 
groupXX !
.XX! "
SumXX" %
(XX% &
xXX& '
=>XX( *
xXX+ ,
.XX, -
CountXX- 2
)XX2 3
}YY 
)YY 
.ZZ 
DeleteZZ 
(ZZ 
(ZZ 
indexZZ 
,ZZ 
mapZZ  #
)ZZ# $
=>ZZ% '
{[[ 
index\\ 
.\\ 
Count\\ 
-=\\  "
map\\# &
.\\& '
Sum\\' *
(\\* +
x\\+ ,
=>\\- /
x\\0 1
.\\1 2
Count\\2 7
)\\7 8
;\\8 9
return]] 
index]]  
.]]  !
Count]]! &
>]]' (
$num]]) *
?]]+ ,
index]]- 2
:]]3 4
null]]5 9
;]]9 :
}^^ 
)^^ 
;^^ 
}__ 	
}`` 
}aa õ
öD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdAuthorizationIndex.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Indexes$ +
{ 
public 

class $
OpenIdAuthorizationIndex )
:* +
MapIndex, 4
{ 
public		 
string		 
AuthorizationId		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
public

 
string

 
ApplicationId

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
DateTime 
? 
CreationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Subject 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
} 
public 

class ,
 OpenIdAuthorizationIndexProvider 1
:2 3
IndexProvider4 A
<A B
OpenIdAuthorizationB U
>U V
{ 
public 
override 
void 
Describe %
(% &
DescribeContext& 5
<5 6
OpenIdAuthorization6 I
>I J
contextK R
)R S
{ 	
context 
. 
For 
< $
OpenIdAuthorizationIndex 0
>0 1
(1 2
)2 3
. 
Map 
( 
authorization "
=># %
new& )$
OpenIdAuthorizationIndex* B
{ 
ApplicationId !
=" #
authorization$ 1
.1 2
ApplicationId2 ?
,? @
AuthorizationId #
=$ %
authorization& 3
.3 4
AuthorizationId4 C
,C D
CreationDate  
=! "
authorization# 0
.0 1
CreationDate1 =
,= >
Status 
= 
authorization *
.* +
Status+ 1
,1 2
Subject 
= 
authorization +
.+ ,
Subject, 3
,3 4
Type 
= 
authorization (
.( )
Type) -
} 
) 
; 
} 	
}   
}!! ß 
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdScopeIndex.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Indexes$ +
{ 
public 

class 
OpenIdScopeIndex !
:" #
MapIndex$ ,
{ 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
ScopeId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
} 
public 

class &
OpenIdScopeByResourceIndex +
:, -
ReduceIndex. 9
{ 
public 
string 
Resource 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
} 
public 

class $
OpenIdScopeIndexProvider )
:* +
IndexProvider, 9
<9 :
OpenIdScope: E
>E F
{ 
public 
override 
void 
Describe %
(% &
DescribeContext& 5
<5 6
OpenIdScope6 A
>A B
contextC J
)J K
{ 	
context 
. 
For 
< 
OpenIdScopeIndex (
>( )
() *
)* +
. 
Map 
( 
scope 
=> 
new !
OpenIdScopeIndex" 2
{ 
Name 
= 
scope  
.  !
Name! %
,% &
ScopeId 
= 
scope #
.# $
ScopeId$ +
} 
) 
; 
context 
. 
For 
< &
OpenIdScopeByResourceIndex 2
,2 3
string4 :
>: ;
(; <
)< =
. 
Map 
( 
scope 
=> 
scope #
.# $
	Resources$ -
.- .
Select. 4
(4 5
resource5 =
=>> @
newA D&
OpenIdScopeByResourceIndexE _
{   
Resource!! 
=!! 
resource!! '
,!!' (
Count"" 
="" 
$num"" 
}## 
)## 
)## 
.$$ 
Group$$ 
($$ 
index$$ 
=>$$ 
index$$  %
.$$% &
Resource$$& .
)$$. /
.%% 
Reduce%% 
(%% 
group%% 
=>%%  
new%%! $&
OpenIdScopeByResourceIndex%%% ?
{&& 
Resource'' 
='' 
group'' $
.''$ %
Key''% (
,''( )
Count(( 
=(( 
group(( !
.((! "
Sum((" %
(((% &
x((& '
=>((( *
x((+ ,
.((, -
Count((- 2
)((2 3
})) 
))) 
.** 
Delete** 
(** 
(** 
index** 
,** 
map**  #
)**# $
=>**% '
{++ 
index,, 
.,, 
Count,, 
-=,,  "
map,,# &
.,,& '
Sum,,' *
(,,* +
x,,+ ,
=>,,- /
x,,0 1
.,,1 2
Count,,2 7
),,7 8
;,,8 9
return-- 
index--  
.--  !
Count--! &
>--' (
$num--) *
?--+ ,
index--- 2
:--3 4
null--5 9
;--9 :
}.. 
).. 
;.. 
}// 	
}00 
}11 Ï
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Indexes\OpenIdTokenIndex.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Indexes$ +
{ 
public 

class 
OpenIdTokenIndex !
:" #
MapIndex$ ,
{ 
public		 
string		 
TokenId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
ApplicationId

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
string 
AuthorizationId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 
CreationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 
ExpirationDate '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
ReferenceId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Subject 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
} 
public 

class $
OpenIdTokenIndexProvider )
:* +
IndexProvider, 9
<9 :
OpenIdToken: E
>E F
{ 
public 
override 
void 
Describe %
(% &
DescribeContext& 5
<5 6
OpenIdToken6 A
>A B
contextC J
)J K
{ 	
context 
. 
For 
< 
OpenIdTokenIndex (
>( )
() *
)* +
. 
Map 
( 
token 
=> 
new !
OpenIdTokenIndex" 2
{ 
TokenId 
= 
token #
.# $
TokenId$ +
,+ ,
ApplicationId !
=" #
token$ )
.) *
ApplicationId* 7
,7 8
AuthorizationId #
=$ %
token& +
.+ ,
AuthorizationId, ;
,; <
CreationDate  
=! "
token# (
.( )
CreationDate) 5
,5 6
ExpirationDate "
=# $
token% *
.* +
ExpirationDate+ 9
,9 :
ReferenceId   
=    !
token  " '
.  ' (
ReferenceId  ( 3
,  3 4
Status!! 
=!! 
token!! "
.!!" #
Status!!# )
,!!) *
Subject"" 
="" 
token"" #
.""# $
Subject""$ +
,""+ ,
Type## 
=## 
token##  
.##  !
Type##! %
}$$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' Ö÷
ïD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Migrations\OpenIdMigrations.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $

Migrations$ .
{ 
public 

class 
OpenIdMigrations !
:" #
DataMigration$ 1
{		 
public

 
int

 
Create

 
(

 
)

 
{ 	
SchemaBuilder 
. 
CreateMapIndexTable -
<- ."
OpenIdApplicationIndex. D
>D E
(E F
tableF K
=>L N
tableO T
. 
Column 
< 
string 
> 
(  
nameof  &
(& '"
OpenIdApplicationIndex' =
.= >
ApplicationId> K
)K L
,L M
columnN T
=>U W
columnX ^
.^ _

WithLength_ i
(i j
$numj l
)l m
)m n
. 
Column 
< 
string 
> 
(  
nameof  &
(& '"
OpenIdApplicationIndex' =
.= >
ClientId> F
)F G
,G H
columnI O
=>P R
columnS Y
.Y Z
UniqueZ `
(` a
)a b
)b c
)c d
;d e
SchemaBuilder 
. 
AlterIndexTable )
<) *"
OpenIdApplicationIndex* @
>@ A
(A B
tableB G
=>H J
tableK P
. 
CreateIndex 
( 
$str D
,D E
$str  
,  !
nameof 
( "
OpenIdApplicationIndex 1
.1 2
ApplicationId2 ?
)? @
,@ A
nameof 
( "
OpenIdApplicationIndex 1
.1 2
ClientId2 :
): ;
); <
) 
; 
SchemaBuilder 
. "
CreateReduceIndexTable 0
<0 1%
OpenIdAppByLogoutUriIndex1 J
>J K
(K L
tableL Q
=>R T
tableU Z
. 
Column 
< 
string 
> 
(  
nameof  &
(& '%
OpenIdAppByLogoutUriIndex' @
.@ A
LogoutRedirectUriA R
)R S
)S T
. 
Column 
< 
int 
> 
( 
nameof #
(# $%
OpenIdAppByLogoutUriIndex$ =
.= >
Count> C
)C D
)D E
)E F
;F G
SchemaBuilder 
. "
CreateReduceIndexTable 0
<0 1'
OpenIdAppByRedirectUriIndex1 L
>L M
(M N
tableN S
=>T V
tableW \
. 
Column 
< 
string 
> 
(  
nameof  &
(& ''
OpenIdAppByRedirectUriIndex' B
.B C
RedirectUriC N
)N O
)O P
. 
Column 
< 
int 
> 
( 
nameof #
(# $'
OpenIdAppByRedirectUriIndex$ ?
.? @
Count@ E
)E F
)F G
)G H
;H I
SchemaBuilder 
. "
CreateReduceIndexTable 0
<0 1$
OpenIdAppByRoleNameIndex1 I
>I J
(J K
tableK P
=>Q S
tableT Y
.   
Column   
<   
string   
>   
(    
nameof    &
(  & '$
OpenIdAppByRoleNameIndex  ' ?
.  ? @
RoleName  @ H
)  H I
)  I J
.!! 
Column!! 
<!! 
int!! 
>!! 
(!! 
nameof!! #
(!!# $$
OpenIdAppByRoleNameIndex!!$ <
.!!< =
Count!!= B
)!!B C
)!!C D
)!!D E
;!!E F
SchemaBuilder## 
.## 
CreateMapIndexTable## -
<##- .$
OpenIdAuthorizationIndex##. F
>##F G
(##G H
table##H M
=>##N P
table##Q V
.$$ 
Column$$ 
<$$ 
string$$ 
>$$ 
($$  
nameof$$  &
($$& '$
OpenIdAuthorizationIndex$$' ?
.$$? @
AuthorizationId$$@ O
)$$O P
,$$P Q
column$$R X
=>$$Y [
column$$\ b
.$$b c

WithLength$$c m
($$m n
$num$$n p
)$$p q
)$$q r
.%% 
Column%% 
<%% 
string%% 
>%% 
(%%  
nameof%%  &
(%%& '$
OpenIdAuthorizationIndex%%' ?
.%%? @
ApplicationId%%@ M
)%%M N
,%%N O
column%%P V
=>%%W Y
column%%Z `
.%%` a

WithLength%%a k
(%%k l
$num%%l n
)%%n o
)%%o p
.&& 
Column&& 
<&& 
string&& 
>&& 
(&&  
nameof&&  &
(&&& '$
OpenIdAuthorizationIndex&&' ?
.&&? @
Status&&@ F
)&&F G
)&&G H
.'' 
Column'' 
<'' 
string'' 
>'' 
(''  
nameof''  &
(''& '$
OpenIdAuthorizationIndex''' ?
.''? @
Subject''@ G
)''G H
)''H I
.(( 
Column(( 
<(( 
string(( 
>(( 
(((  
nameof((  &
(((& '$
OpenIdAuthorizationIndex((' ?
.((? @
Type((@ D
)((D E
)((E F
.)) 
Column)) 
<)) 
DateTime))  
>))  !
())! "
nameof))" (
())( )$
OpenIdAuthorizationIndex))) A
.))A B
CreationDate))B N
)))N O
)))O P
)))P Q
;))Q R
SchemaBuilder++ 
.++ 
AlterIndexTable++ )
<++) *$
OpenIdAuthorizationIndex++* B
>++B C
(++C D
table++D I
=>++J L
table++M R
.,, 
CreateIndex,, 
(,, 
$str,, T
,,,T U
$str--  
,--  !
nameof.. 
(.. $
OpenIdAuthorizationIndex.. 3
...3 4
ApplicationId..4 A
)..A B
,..B C
nameof// 
(// $
OpenIdAuthorizationIndex// 3
.//3 4
Status//4 :
)//: ;
,//; <
nameof00 
(00 $
OpenIdAuthorizationIndex00 3
.003 4
Subject004 ;
)00; <
)00< =
)11 
;11 
SchemaBuilder33 
.33 
AlterIndexTable33 )
<33) *$
OpenIdAuthorizationIndex33* B
>33B C
(33C D
table33D I
=>33J L
table33M R
.44 
CreateIndex44 
(44 
$str44 V
,44V W
$str55  
,55  !
nameof66 
(66 $
OpenIdAuthorizationIndex66 3
.663 4
AuthorizationId664 C
)66C D
,66D E
nameof77 
(77 $
OpenIdAuthorizationIndex77 3
.773 4
Status774 :
)77: ;
,77; <
nameof88 
(88 $
OpenIdAuthorizationIndex88 3
.883 4
Type884 8
)888 9
,889 :
nameof99 
(99 $
OpenIdAuthorizationIndex99 3
.993 4
CreationDate994 @
)99@ A
)99A B
):: 
;:: 
SchemaBuilder<< 
.<< 
CreateMapIndexTable<< -
<<<- .
OpenIdScopeIndex<<. >
><<> ?
(<<? @
table<<@ E
=><<F H
table<<I N
.== 
Column== 
<== 
string== 
>== 
(==  
nameof==  &
(==& '
OpenIdScopeIndex==' 7
.==7 8
Name==8 <
)==< =
,=== >
column==? E
=>==F H
column==I O
.==O P
Unique==P V
(==V W
)==W X
)==X Y
.>> 
Column>> 
<>> 
string>> 
>>> 
(>>  
nameof>>  &
(>>& '
OpenIdScopeIndex>>' 7
.>>7 8
ScopeId>>8 ?
)>>? @
,>>@ A
column>>B H
=>>>I K
column>>L R
.>>R S

WithLength>>S ]
(>>] ^
$num>>^ `
)>>` a
)>>a b
)>>b c
;>>c d
SchemaBuilder@@ 
.@@ 
AlterIndexTable@@ )
<@@) *
OpenIdScopeIndex@@* :
>@@: ;
(@@; <
table@@< A
=>@@B D
table@@E J
.AA 
CreateIndexAA 
(AA 
$strAA >
,AA> ?
$strBB  
,BB  !
nameofCC 
(CC 
OpenIdScopeIndexCC +
.CC+ ,
NameCC, 0
)CC0 1
,CC1 2
nameofDD 
(DD 
OpenIdScopeIndexDD +
.DD+ ,
ScopeIdDD, 3
)DD3 4
)DD4 5
)EE 
;EE 
SchemaBuilderGG 
.GG "
CreateReduceIndexTableGG 0
<GG0 1&
OpenIdScopeByResourceIndexGG1 K
>GGK L
(GGL M
tableGGM R
=>GGS U
tableGGV [
.HH 
ColumnHH 
<HH 
stringHH 
>HH 
(HH  
nameofHH  &
(HH& '&
OpenIdScopeByResourceIndexHH' A
.HHA B
ResourceHHB J
)HHJ K
)HHK L
.II 
ColumnII 
<II 
intII 
>II 
(II 
nameofII #
(II# $&
OpenIdScopeByResourceIndexII$ >
.II> ?
CountII? D
)IID E
)IIE F
)IIF G
;IIG H
SchemaBuilderKK 
.KK 
CreateMapIndexTableKK -
<KK- .
OpenIdTokenIndexKK. >
>KK> ?
(KK? @
tableKK@ E
=>KKF H
tableKKI N
.LL 
ColumnLL 
<LL 
stringLL 
>LL 
(LL  
nameofLL  &
(LL& '
OpenIdTokenIndexLL' 7
.LL7 8
TokenIdLL8 ?
)LL? @
,LL@ A
columnLLB H
=>LLI K
columnLLL R
.LLR S

WithLengthLLS ]
(LL] ^
$numLL^ `
)LL` a
)LLa b
.MM 
ColumnMM 
<MM 
stringMM 
>MM 
(MM  
nameofMM  &
(MM& '
OpenIdTokenIndexMM' 7
.MM7 8
ApplicationIdMM8 E
)MME F
,MMF G
columnMMH N
=>MMO Q
columnMMR X
.MMX Y

WithLengthMMY c
(MMc d
$numMMd f
)MMf g
)MMg h
.NN 
ColumnNN 
<NN 
stringNN 
>NN 
(NN  
nameofNN  &
(NN& '
OpenIdTokenIndexNN' 7
.NN7 8
AuthorizationIdNN8 G
)NNG H
,NNH I
columnNNJ P
=>NNQ S
columnNNT Z
.NNZ [

WithLengthNN[ e
(NNe f
$numNNf h
)NNh i
)NNi j
.OO 
ColumnOO 
<OO 
DateTimeOO  
>OO  !
(OO! "
nameofOO" (
(OO( )
OpenIdTokenIndexOO) 9
.OO9 :
ExpirationDateOO: H
)OOH I
)OOI J
.PP 
ColumnPP 
<PP 
stringPP 
>PP 
(PP  
nameofPP  &
(PP& '
OpenIdTokenIndexPP' 7
.PP7 8
ReferenceIdPP8 C
)PPC D
)PPD E
.QQ 
ColumnQQ 
<QQ 
stringQQ 
>QQ 
(QQ  
nameofQQ  &
(QQ& '
OpenIdTokenIndexQQ' 7
.QQ7 8
StatusQQ8 >
)QQ> ?
)QQ? @
.RR 
ColumnRR 
<RR 
stringRR 
>RR 
(RR  
nameofRR  &
(RR& '
OpenIdTokenIndexRR' 7
.RR7 8
SubjectRR8 ?
)RR? @
)RR@ A
.SS 
ColumnSS 
<SS 
stringSS 
>SS 
(SS  
nameofSS  &
(SS& '
OpenIdTokenIndexSS' 7
.SS7 8
TypeSS8 <
)SS< =
)SS= >
.TT 
ColumnTT 
<TT 
DateTimeTT  
>TT  !
(TT! "
nameofTT" (
(TT( )
OpenIdTokenIndexTT) 9
.TT9 :
CreationDateTT: F
)TTF G
)TTG H
)TTH I
;TTI J
SchemaBuilderVV 
.VV 
AlterIndexTableVV )
<VV) *
OpenIdTokenIndexVV* :
>VV: ;
(VV; <
tableVV< A
=>VVB D
tableVVE J
.WW 
CreateIndexWW 
(WW 
$strWW L
,WWL M
$strXX  
,XX  !
nameofYY 
(YY 
OpenIdTokenIndexYY +
.YY+ ,
ApplicationIdYY, 9
)YY9 :
,YY: ;
nameofZZ 
(ZZ 
OpenIdTokenIndexZZ +
.ZZ+ ,
StatusZZ, 2
)ZZ2 3
,ZZ3 4
nameof[[ 
([[ 
OpenIdTokenIndex[[ +
.[[+ ,
Subject[[, 3
)[[3 4
)[[4 5
)\\ 
;\\ 
SchemaBuilder^^ 
.^^ 
AlterIndexTable^^ )
<^^) *
OpenIdTokenIndex^^* :
>^^: ;
(^^; <
table^^< A
=>^^B D
table^^E J
.__ 
CreateIndex__ 
(__ 
$str__ N
,__N O
$str``  
,``  !
nameofaa 
(aa 
OpenIdTokenIndexaa +
.aa+ ,
AuthorizationIdaa, ;
)aa; <
,aa< =
nameofbb 
(bb 
OpenIdTokenIndexbb +
.bb+ ,
Statusbb, 2
)bb2 3
,bb3 4
nameofcc 
(cc 
OpenIdTokenIndexcc +
.cc+ ,
Typecc, 0
)cc0 1
,cc1 2
nameofdd 
(dd 
OpenIdTokenIndexdd +
.dd+ ,
CreationDatedd, 8
)dd8 9
,dd9 :
nameofee 
(ee 
OpenIdTokenIndexee +
.ee+ ,
ExpirationDateee, :
)ee: ;
)ee; <
)ff 
;ff 
SchemaBuilderhh 
.hh 
AlterIndexTablehh )
<hh) *
OpenIdTokenIndexhh* :
>hh: ;
(hh; <
tablehh< A
=>hhB D
tablehhE J
.ii 
CreateIndexii 
(ii 
$strii F
,iiF G
$strjj  
,jj  !
nameofkk 
(kk 
OpenIdTokenIndexkk +
.kk+ ,
TokenIdkk, 3
)kk3 4
,kk4 5
nameofll 
(ll 
OpenIdTokenIndexll +
.ll+ ,
ReferenceIdll, 7
)ll7 8
)ll8 9
)mm 
;mm 
returnpp 
$numpp 
;pp 
}qq 	
publictt 
inttt 
UpdateFrom1tt 
(tt 
)tt  
{uu 	
SchemaBuildervv 
.vv 
AlterIndexTablevv )
<vv) *
OpenIdTokenIndexvv* :
>vv: ;
(vv; <
tablevv< A
=>vvB D
tablevvE J
.ww 
	AddColumnww 
<ww 
stringww !
>ww! "
(ww" #
nameofww# )
(ww) *
OpenIdTokenIndexww* :
.ww: ;
Typeww; ?
)ww? @
)ww@ A
)wwA B
;wwB C
returnyy 
$numyy 
;yy 
}zz 	
private|| 
class|| 9
-OpenIdApplicationByPostLogoutRedirectUriIndex|| C
{||D E
}||F G
private}} 
class}} /
#OpenIdApplicationByRedirectUriIndex}} 9
{}}: ;
}}}< =
private~~ 
class~~ ,
 OpenIdApplicationByRoleNameIndex~~ 6
{~~7 8
}~~9 :
public
ÅÅ 
int
ÅÅ 
UpdateFrom2
ÅÅ 
(
ÅÅ 
)
ÅÅ  
{
ÇÇ 	
SchemaBuilder
ÉÉ 
.
ÉÉ "
DropReduceIndexTable
ÉÉ .
<
ÉÉ. /;
-OpenIdApplicationByPostLogoutRedirectUriIndex
ÉÉ/ \
>
ÉÉ\ ]
(
ÉÉ] ^
null
ÉÉ^ b
)
ÉÉb c
;
ÉÉc d
SchemaBuilder
ÑÑ 
.
ÑÑ "
DropReduceIndexTable
ÑÑ .
<
ÑÑ. /1
#OpenIdApplicationByRedirectUriIndex
ÑÑ/ R
>
ÑÑR S
(
ÑÑS T
null
ÑÑT X
)
ÑÑX Y
;
ÑÑY Z
SchemaBuilder
ÖÖ 
.
ÖÖ "
DropReduceIndexTable
ÖÖ .
<
ÖÖ. /.
 OpenIdApplicationByRoleNameIndex
ÖÖ/ O
>
ÖÖO P
(
ÖÖP Q
null
ÖÖQ U
)
ÖÖU V
;
ÖÖV W
SchemaBuilder
áá 
.
áá $
CreateReduceIndexTable
áá 0
<
áá0 1'
OpenIdAppByLogoutUriIndex
áá1 J
>
ááJ K
(
ááK L
table
ááL Q
=>
ááR T
table
ááU Z
.
àà 
Column
àà 
<
àà 
string
àà 
>
àà 
(
àà  
nameof
àà  &
(
àà& ''
OpenIdAppByLogoutUriIndex
àà' @
.
àà@ A
LogoutRedirectUri
ààA R
)
ààR S
)
ààS T
.
ââ 
Column
ââ 
<
ââ 
int
ââ 
>
ââ 
(
ââ 
nameof
ââ #
(
ââ# $'
OpenIdAppByLogoutUriIndex
ââ$ =
.
ââ= >
Count
ââ> C
)
ââC D
)
ââD E
)
ââE F
;
ââF G
SchemaBuilder
ãã 
.
ãã $
CreateReduceIndexTable
ãã 0
<
ãã0 1)
OpenIdAppByRedirectUriIndex
ãã1 L
>
ããL M
(
ããM N
table
ããN S
=>
ããT V
table
ããW \
.
åå 
Column
åå 
<
åå 
string
åå 
>
åå 
(
åå  
nameof
åå  &
(
åå& ')
OpenIdAppByRedirectUriIndex
åå' B
.
ååB C
RedirectUri
ååC N
)
ååN O
)
ååO P
.
çç 
Column
çç 
<
çç 
int
çç 
>
çç 
(
çç 
nameof
çç #
(
çç# $)
OpenIdAppByRedirectUriIndex
çç$ ?
.
çç? @
Count
çç@ E
)
ççE F
)
ççF G
)
ççG H
;
ççH I
SchemaBuilder
èè 
.
èè $
CreateReduceIndexTable
èè 0
<
èè0 1&
OpenIdAppByRoleNameIndex
èè1 I
>
èèI J
(
èèJ K
table
èèK P
=>
èèQ S
table
èèT Y
.
êê 
Column
êê 
<
êê 
string
êê 
>
êê 
(
êê  
nameof
êê  &
(
êê& '&
OpenIdAppByRoleNameIndex
êê' ?
.
êê? @
RoleName
êê@ H
)
êêH I
)
êêI J
.
ëë 
Column
ëë 
<
ëë 
int
ëë 
>
ëë 
(
ëë 
nameof
ëë #
(
ëë# $&
OpenIdAppByRoleNameIndex
ëë$ <
.
ëë< =
Count
ëë= B
)
ëëB C
)
ëëC D
)
ëëD E
;
ëëE F
return
ìì 
$num
ìì 
;
ìì 
}
îî 	
public
óó 
int
óó 
UpdateFrom3
óó 
(
óó 
)
óó  
{
òò 	
SchemaBuilder
ôô 
.
ôô 
AlterIndexTable
ôô )
<
ôô) *&
OpenIdAuthorizationIndex
ôô* B
>
ôôB C
(
ôôC D
table
ôôD I
=>
ôôJ L
table
ôôM R
.
öö 
	AddColumn
öö 
<
öö 
DateTime
öö #
>
öö# $
(
öö$ %
nameof
öö% +
(
öö+ ,&
OpenIdAuthorizationIndex
öö, D
.
ööD E
CreationDate
ööE Q
)
ööQ R
)
ööR S
)
ööS T
;
ööT U
SchemaBuilder
úú 
.
úú 
AlterIndexTable
úú )
<
úú) *
OpenIdTokenIndex
úú* :
>
úú: ;
(
úú; <
table
úú< A
=>
úúB D
table
úúE J
.
ùù 
	AddColumn
ùù 
<
ùù 
DateTime
ùù #
>
ùù# $
(
ùù$ %
nameof
ùù% +
(
ùù+ ,
OpenIdTokenIndex
ùù, <
.
ùù< =
CreationDate
ùù= I
)
ùùI J
)
ùùJ K
)
ùùK L
;
ùùL M
return
üü 
$num
üü 
;
üü 
}
†† 	
public
££ 
int
££ 
UpdateFrom4
££ 
(
££ 
)
££  
{
§§ 	
SchemaBuilder
•• 
.
•• 
AlterIndexTable
•• )
<
••) *$
OpenIdApplicationIndex
••* @
>
••@ A
(
••A B
table
••B G
=>
••H J
table
••K P
.
¶¶ 
CreateIndex
¶¶ 
(
¶¶ 
$str
¶¶ D
,
¶¶D E
$str
ßß  
,
ßß  !
nameof
®® 
(
®® $
OpenIdApplicationIndex
®® 1
.
®®1 2
ApplicationId
®®2 ?
)
®®? @
,
®®@ A
nameof
©© 
(
©© $
OpenIdApplicationIndex
©© 1
.
©©1 2
ClientId
©©2 :
)
©©: ;
)
©©; <
)
™™ 
;
™™ 
SchemaBuilder
¨¨ 
.
¨¨ 
AlterIndexTable
¨¨ )
<
¨¨) *&
OpenIdAuthorizationIndex
¨¨* B
>
¨¨B C
(
¨¨C D
table
¨¨D I
=>
¨¨J L
table
¨¨M R
.
≠≠ 
CreateIndex
≠≠ 
(
≠≠ 
$str
≠≠ T
,
≠≠T U
$str
ÆÆ  
,
ÆÆ  !
nameof
ØØ 
(
ØØ &
OpenIdAuthorizationIndex
ØØ 3
.
ØØ3 4
ApplicationId
ØØ4 A
)
ØØA B
,
ØØB C
nameof
∞∞ 
(
∞∞ &
OpenIdAuthorizationIndex
∞∞ 3
.
∞∞3 4
Status
∞∞4 :
)
∞∞: ;
,
∞∞; <
nameof
±± 
(
±± &
OpenIdAuthorizationIndex
±± 3
.
±±3 4
Subject
±±4 ;
)
±±; <
)
±±< =
)
≤≤ 
;
≤≤ 
SchemaBuilder
¥¥ 
.
¥¥ 
AlterIndexTable
¥¥ )
<
¥¥) *&
OpenIdAuthorizationIndex
¥¥* B
>
¥¥B C
(
¥¥C D
table
¥¥D I
=>
¥¥J L
table
¥¥M R
.
µµ 
CreateIndex
µµ 
(
µµ 
$str
µµ V
,
µµV W
$str
∂∂  
,
∂∂  !
nameof
∑∑ 
(
∑∑ &
OpenIdAuthorizationIndex
∑∑ 3
.
∑∑3 4
AuthorizationId
∑∑4 C
)
∑∑C D
,
∑∑D E
nameof
∏∏ 
(
∏∏ &
OpenIdAuthorizationIndex
∏∏ 3
.
∏∏3 4
Status
∏∏4 :
)
∏∏: ;
,
∏∏; <
nameof
ππ 
(
ππ &
OpenIdAuthorizationIndex
ππ 3
.
ππ3 4
Type
ππ4 8
)
ππ8 9
,
ππ9 :
nameof
∫∫ 
(
∫∫ &
OpenIdAuthorizationIndex
∫∫ 3
.
∫∫3 4
CreationDate
∫∫4 @
)
∫∫@ A
)
∫∫A B
)
ªª 
;
ªª 
SchemaBuilder
ΩΩ 
.
ΩΩ 
AlterIndexTable
ΩΩ )
<
ΩΩ) *
OpenIdScopeIndex
ΩΩ* :
>
ΩΩ: ;
(
ΩΩ; <
table
ΩΩ< A
=>
ΩΩB D
table
ΩΩE J
.
ææ 
CreateIndex
ææ 
(
ææ 
$str
ææ >
,
ææ> ?
$str
øø  
,
øø  !
nameof
¿¿ 
(
¿¿ 
OpenIdScopeIndex
¿¿ +
.
¿¿+ ,
Name
¿¿, 0
)
¿¿0 1
,
¿¿1 2
nameof
¡¡ 
(
¡¡ 
OpenIdScopeIndex
¡¡ +
.
¡¡+ ,
ScopeId
¡¡, 3
)
¡¡3 4
)
¡¡4 5
)
¬¬ 
;
¬¬ 
SchemaBuilder
ƒƒ 
.
ƒƒ 
AlterIndexTable
ƒƒ )
<
ƒƒ) *
OpenIdTokenIndex
ƒƒ* :
>
ƒƒ: ;
(
ƒƒ; <
table
ƒƒ< A
=>
ƒƒB D
table
ƒƒE J
.
≈≈ 
CreateIndex
≈≈ 
(
≈≈ 
$str
≈≈ L
,
≈≈L M
$str
∆∆  
,
∆∆  !
nameof
«« 
(
«« 
OpenIdTokenIndex
«« +
.
««+ ,
ApplicationId
««, 9
)
««9 :
,
««: ;
nameof
»» 
(
»» 
OpenIdTokenIndex
»» +
.
»»+ ,
Status
»», 2
)
»»2 3
,
»»3 4
nameof
…… 
(
…… 
OpenIdTokenIndex
…… +
.
……+ ,
Subject
……, 3
)
……3 4
)
……4 5
)
   
;
   
SchemaBuilder
ÃÃ 
.
ÃÃ 
AlterIndexTable
ÃÃ )
<
ÃÃ) *
OpenIdTokenIndex
ÃÃ* :
>
ÃÃ: ;
(
ÃÃ; <
table
ÃÃ< A
=>
ÃÃB D
table
ÃÃE J
.
ÕÕ 
CreateIndex
ÕÕ 
(
ÕÕ 
$str
ÕÕ N
,
ÕÕN O
$str
ŒŒ  
,
ŒŒ  !
nameof
œœ 
(
œœ 
OpenIdTokenIndex
œœ +
.
œœ+ ,
AuthorizationId
œœ, ;
)
œœ; <
,
œœ< =
nameof
–– 
(
–– 
OpenIdTokenIndex
–– +
.
––+ ,
Status
––, 2
)
––2 3
,
––3 4
nameof
—— 
(
—— 
OpenIdTokenIndex
—— +
.
——+ ,
Type
——, 0
)
——0 1
,
——1 2
nameof
““ 
(
““ 
OpenIdTokenIndex
““ +
.
““+ ,
CreationDate
““, 8
)
““8 9
,
““9 :
nameof
”” 
(
”” 
OpenIdTokenIndex
”” +
.
””+ ,
ExpirationDate
””, :
)
””: ;
)
””; <
)
‘‘ 
;
‘‘ 
SchemaBuilder
÷÷ 
.
÷÷ 
AlterIndexTable
÷÷ )
<
÷÷) *
OpenIdTokenIndex
÷÷* :
>
÷÷: ;
(
÷÷; <
table
÷÷< A
=>
÷÷B D
table
÷÷E J
.
◊◊ 
CreateIndex
◊◊ 
(
◊◊ 
$str
◊◊ F
,
◊◊F G
$str
ÿÿ  
,
ÿÿ  !
nameof
ŸŸ 
(
ŸŸ 
OpenIdTokenIndex
ŸŸ +
.
ŸŸ+ ,
TokenId
ŸŸ, 3
)
ŸŸ3 4
,
ŸŸ4 5
nameof
⁄⁄ 
(
⁄⁄ 
OpenIdTokenIndex
⁄⁄ +
.
⁄⁄+ ,
ReferenceId
⁄⁄, 7
)
⁄⁄7 8
)
⁄⁄8 9
)
€€ 
;
€€ 
return
›› 
$num
›› 
;
›› 
}
ﬁﬁ 	
}
ﬂﬂ 
}‡‡ ï 
íD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Models\OpenIdApplication.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Models$ *
{ 
public 

class 
OpenIdApplication "
{ 
public 
string 
ApplicationId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
ClientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ClientSecret "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
ConsentType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public"" 
string"" 
DisplayName"" !
{""" #
get""$ '
;""' (
set"") ,
;"", -
}"". /
public'' 
ImmutableDictionary'' "
<''" #
CultureInfo''# .
,''. /
string''0 6
>''6 7
DisplayNames''8 D
{''E F
get''G J
;''J K
set''L O
;''O P
}''Q R
=(( 
ImmutableDictionary(( !
.((! "
Create((" (
<((( )
CultureInfo(() 4
,((4 5
string((6 <
>((< =
(((= >
)((> ?
;((? @
public-- 
int-- 
Id-- 
{-- 
get-- 
;-- 
set--  
;--  !
}--" #
public22 
ImmutableArray22 
<22 
string22 $
>22$ %
Permissions22& 1
{222 3
get224 7
;227 8
set229 <
;22< =
}22> ?
=33 
ImmutableArray33 
.33 
Create33 #
<33# $
string33$ *
>33* +
(33+ ,
)33, -
;33- .
public88 
ImmutableArray88 
<88 
string88 $
>88$ %"
PostLogoutRedirectUris88& <
{88= >
get88? B
;88B C
set88D G
;88G H
}88I J
=99 
ImmutableArray99 
.99 
Create99 #
<99# $
string99$ *
>99* +
(99+ ,
)99, -
;99- .
public>> 
JObject>> 

Properties>> !
{>>" #
get>>$ '
;>>' (
set>>) ,
;>>, -
}>>. /
publicCC 
ImmutableArrayCC 
<CC 
stringCC $
>CC$ %
RedirectUrisCC& 2
{CC3 4
getCC5 8
;CC8 9
setCC: =
;CC= >
}CC? @
=DD 
ImmutableArrayDD 
.DD 
CreateDD #
<DD# $
stringDD$ *
>DD* +
(DD+ ,
)DD, -
;DD- .
publicII 
ImmutableArrayII 
<II 
stringII $
>II$ %
RequirementsII& 2
{II3 4
getII5 8
;II8 9
setII: =
;II= >
}II? @
=JJ 
ImmutableArrayJJ 
.JJ 
CreateJJ #
<JJ# $
stringJJ$ *
>JJ* +
(JJ+ ,
)JJ, -
;JJ- .
publicOO 
ImmutableArrayOO 
<OO 
stringOO $
>OO$ %
RolesOO& +
{OO, -
getOO. 1
;OO1 2
setOO3 6
;OO6 7
}OO8 9
=PP 
ImmutableArrayPP 
.PP 
CreatePP #
<PP# $
stringPP$ *
>PP* +
(PP+ ,
)PP, -
;PP- .
publicUU 
stringUU 
TypeUU 
{UU 
getUU  
;UU  !
setUU" %
;UU% &
}UU' (
}VV 
}WW £
îD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Models\OpenIdAuthorization.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Models$ *
{ 
public 

class 
OpenIdAuthorization $
{ 
public 
string 
AuthorizationId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
ApplicationId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
CreationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public!! 
JObject!! 

Properties!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
public&& 
ImmutableArray&& 
<&& 
string&& $
>&&$ %
Scopes&&& ,
{&&- .
get&&/ 2
;&&2 3
set&&4 7
;&&7 8
}&&9 :
='' 
ImmutableArray'' 
.'' 
Create'' #
<''# $
string''$ *
>''* +
(''+ ,
)'', -
;''- .
public,, 
string,, 
Status,, 
{,, 
get,, "
;,," #
set,,$ '
;,,' (
},,) *
public11 
string11 
Subject11 
{11 
get11  #
;11# $
set11% (
;11( )
}11* +
public66 
string66 
Type66 
{66 
get66  
;66  !
set66" %
;66% &
}66' (
}77 
}88 á
åD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Models\OpenIdScope.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Models$ *
{ 
public 

class 
OpenIdScope 
{ 
public 
string 
ScopeId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
ImmutableDictionary "
<" #
CultureInfo# .
,. /
string0 6
>6 7
Descriptions8 D
{E F
getG J
;J K
setL O
;O P
}Q R
= 
ImmutableDictionary !
.! "
Create" (
<( )
CultureInfo) 4
,4 5
string6 <
>< =
(= >
)> ?
;? @
public 
string 
DisplayName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public!! 
ImmutableDictionary!! "
<!!" #
CultureInfo!!# .
,!!. /
string!!0 6
>!!6 7
DisplayNames!!8 D
{!!E F
get!!G J
;!!J K
set!!L O
;!!O P
}!!Q R
="" 
ImmutableDictionary"" !
.""! "
Create""" (
<""( )
CultureInfo"") 4
,""4 5
string""6 <
>""< =
(""= >
)""> ?
;""? @
public'' 
int'' 
Id'' 
{'' 
get'' 
;'' 
set''  
;''  !
}''" #
public,, 
string,, 
Name,, 
{,, 
get,,  
;,,  !
set,," %
;,,% &
},,' (
public11 
JObject11 

Properties11 !
{11" #
get11$ '
;11' (
set11) ,
;11, -
}11. /
public66 
ImmutableArray66 
<66 
string66 $
>66$ %
	Resources66& /
{660 1
get662 5
;665 6
set667 :
;66: ;
}66< =
=77 
ImmutableArray77 
.77 
Create77 #
<77# $
string77$ *
>77* +
(77+ ,
)77, -
;77- .
}88 
}99 Õ
åD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Models\OpenIdToken.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Models$ *
{ 
public		 

class		 
OpenIdToken		 
{

 
public 
string 
TokenId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
ApplicationId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
AuthorizationId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 
CreationDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public"" 
DateTime"" 
?"" 
ExpirationDate"" '
{""( )
get""* -
;""- .
set""/ 2
;""2 3
}""4 5
public'' 
int'' 
Id'' 
{'' 
get'' 
;'' 
set''  
;''  !
}''" #
public.. 
string.. 
Payload.. 
{.. 
get..  #
;..# $
set..% (
;..( )
}..* +
public33 
JObject33 

Properties33 !
{33" #
get33$ '
;33' (
set33) ,
;33, -
}33. /
public88 
DateTime88 
?88 
RedemptionDate88 '
{88( )
get88* -
;88- .
set88/ 2
;882 3
}884 5
public@@ 
string@@ 
ReferenceId@@ !
{@@" #
get@@$ '
;@@' (
set@@) ,
;@@, -
}@@. /
publicEE 
stringEE 
StatusEE 
{EE 
getEE "
;EE" #
setEE$ '
;EE' (
}EE) *
publicJJ 
stringJJ 
SubjectJJ 
{JJ 
getJJ  #
;JJ# $
setJJ% (
;JJ( )
}JJ* +
publicOO 
stringOO 
TypeOO 
{OO 
getOO  
;OO  !
setOO" %
;OO% &
}OO' (
}PP 
}QQ â
¢D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Resolvers\OpenIdApplicationStoreResolver.cs
	namespace		 	
OrchardCore		
 
.		 
OpenId		 
.		 
YesSql		 #
.		# $
	Resolvers		$ -
{

 
public 

class *
OpenIdApplicationStoreResolver /
:0 1/
#IOpenIddictApplicationStoreResolver2 U
{ 
private 
readonly 
TypeResolutionCache ,
_cache- 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
public *
OpenIdApplicationStoreResolver -
(- .
TypeResolutionCache. A
cacheB G
,G H
IServiceProviderI Y
providerZ b
)b c
{ 	
_cache 
= 
cache 
; 
	_provider 
= 
provider  
;  !
} 	
public '
IOpenIddictApplicationStore *
<* +
TApplication+ 7
>7 8
Get9 <
<< =
TApplication= I
>I J
(J K
)K L
whereM R
TApplicationS _
:` a
classb g
{ 	
var 
store 
= 
	_provider !
.! "

GetService" ,
<, -'
IOpenIddictApplicationStore- H
<H I
TApplicationI U
>U V
>V W
(W X
)X Y
;Y Z
if 
( 
store 
!= 
null 
) 
{ 
return 
store 
; 
} 
var   
type   
=   
_cache   
.   
GetOrAdd   &
(  & '
typeof  ' -
(  - .
TApplication  . :
)  : ;
,  ; <
key  = @
=>  A C
{!! 
if"" 
("" 
!"" 
typeof"" 
("" 
OpenIdApplication"" -
)""- .
."". /
IsAssignableFrom""/ ?
(""? @
key""@ C
)""C D
)""D E
{## 
throw$$ 
new$$ %
InvalidOperationException$$ 7
($$7 8
new$$8 ;
StringBuilder$$< I
($$I J
)$$J K
.%% 

AppendLine%% #
(%%# $
$str%%$ n
)%%n o
.&& 
Append&& 
(&&  
$str&&  v
)&&v w
.'' 
Append'' 
(''  
$str''  i
)''i j
.(( 
Append(( 
(((  
$str((  T
)((T U
.)) 
ToString)) !
())! "
)))" #
)))# $
;))$ %
}** 
return,, 
typeof,, 
(,, "
OpenIdApplicationStore,, 4
<,,4 5
>,,5 6
),,6 7
.,,7 8
MakeGenericType,,8 G
(,,G H
key,,H K
),,K L
;,,L M
}-- 
)-- 
;-- 
return// 
(// '
IOpenIddictApplicationStore// /
</// 0
TApplication//0 <
>//< =
)//= >
	_provider//> G
.//G H
GetRequiredService//H Z
(//Z [
type//[ _
)//_ `
;//` a
}00 	
public66 
class66 
TypeResolutionCache66 (
:66) * 
ConcurrentDictionary66+ ?
<66? @
Type66@ D
,66D E
Type66F J
>66J K
{66L M
}66N O
}77 
}88 ß
§D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Resolvers\OpenIdAuthorizationStoreResolver.cs
	namespace		 	
OrchardCore		
 
.		 
OpenId		 
.		 
YesSql		 #
.		# $
	Resolvers		$ -
{

 
public 

class ,
 OpenIdAuthorizationStoreResolver 1
:2 31
%IOpenIddictAuthorizationStoreResolver4 Y
{ 
private 
readonly 
TypeResolutionCache ,
_cache- 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
public ,
 OpenIdAuthorizationStoreResolver /
(/ 0
TypeResolutionCache0 C
cacheD I
,I J
IServiceProviderK [
provider\ d
)d e
{ 	
_cache 
= 
cache 
; 
	_provider 
= 
provider  
;  !
} 	
public )
IOpenIddictAuthorizationStore ,
<, -
TAuthorization- ;
>; <
Get= @
<@ A
TAuthorizationA O
>O P
(P Q
)Q R
whereS X
TAuthorizationY g
:h i
classj o
{ 	
var 
store 
= 
	_provider !
.! "

GetService" ,
<, -)
IOpenIddictAuthorizationStore- J
<J K
TAuthorizationK Y
>Y Z
>Z [
([ \
)\ ]
;] ^
if 
( 
store 
!= 
null 
) 
{ 
return 
store 
; 
} 
var   
type   
=   
_cache   
.   
GetOrAdd   &
(  & '
typeof  ' -
(  - .
TAuthorization  . <
)  < =
,  = >
key  ? B
=>  C E
{!! 
if"" 
("" 
!"" 
typeof"" 
("" 
OpenIdAuthorization"" /
)""/ 0
.""0 1
IsAssignableFrom""1 A
(""A B
key""B E
)""E F
)""F G
{## 
throw$$ 
new$$ %
InvalidOperationException$$ 7
($$7 8
new$$8 ;
StringBuilder$$< I
($$I J
)$$J K
.%% 

AppendLine%% #
(%%# $
$str%%$ p
)%%p q
.&& 
Append&& 
(&&  
$str&&  x
)&&x y
.'' 
Append'' 
(''  
$str''  i
)''i j
.(( 
Append(( 
(((  
$str((  V
)((V W
.)) 
ToString)) !
())! "
)))" #
)))# $
;))$ %
}** 
return,, 
typeof,, 
(,, $
OpenIdAuthorizationStore,, 6
<,,6 7
>,,7 8
),,8 9
.,,9 :
MakeGenericType,,: I
(,,I J
key,,J M
),,M N
;,,N O
}-- 
)-- 
;-- 
return// 
(// )
IOpenIddictAuthorizationStore// 1
<//1 2
TAuthorization//2 @
>//@ A
)//A B
	_provider//B K
.//K L
GetRequiredService//L ^
(//^ _
type//_ c
)//c d
;//d e
}00 	
public66 
class66 
TypeResolutionCache66 (
:66) * 
ConcurrentDictionary66+ ?
<66? @
Type66@ D
,66D E
Type66F J
>66J K
{66L M
}66N O
}77 
}88 Ø
úD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Resolvers\OpenIdScopeStoreResolver.cs
	namespace		 	
OrchardCore		
 
.		 
OpenId		 
.		 
YesSql		 #
.		# $
	Resolvers		$ -
{

 
public 

class $
OpenIdScopeStoreResolver )
:* +)
IOpenIddictScopeStoreResolver, I
{ 
private 
readonly 
TypeResolutionCache ,
_cache- 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
public $
OpenIdScopeStoreResolver '
(' (
TypeResolutionCache( ;
cache< A
,A B
IServiceProviderC S
providerT \
)\ ]
{ 	
_cache 
= 
cache 
; 
	_provider 
= 
provider  
;  !
} 	
public !
IOpenIddictScopeStore $
<$ %
TScope% +
>+ ,
Get- 0
<0 1
TScope1 7
>7 8
(8 9
)9 :
where; @
TScopeA G
:H I
classJ O
{ 	
var 
store 
= 
	_provider !
.! "

GetService" ,
<, -!
IOpenIddictScopeStore- B
<B C
TScopeC I
>I J
>J K
(K L
)L M
;M N
if 
( 
store 
!= 
null 
) 
{ 
return 
store 
; 
} 
var   
type   
=   
_cache   
.   
GetOrAdd   &
(  & '
typeof  ' -
(  - .
TScope  . 4
)  4 5
,  5 6
key  7 :
=>  ; =
{!! 
if"" 
("" 
!"" 
typeof"" 
("" 
OpenIdScope"" '
)""' (
.""( )
IsAssignableFrom"") 9
(""9 :
key"": =
)""= >
)""> ?
{## 
throw$$ 
new$$ %
InvalidOperationException$$ 7
($$7 8
new$$8 ;
StringBuilder$$< I
($$I J
)$$J K
.%% 

AppendLine%% #
(%%# $
$str%%$ h
)%%h i
.&& 
Append&& 
(&&  
$str&&  p
)&&p q
.'' 
Append'' 
(''  
$str''  i
)''i j
.(( 
Append(( 
(((  
$str((  N
)((N O
.)) 
ToString)) !
())! "
)))" #
)))# $
;))$ %
}** 
return,, 
typeof,, 
(,, 
OpenIdScopeStore,, .
<,,. /
>,,/ 0
),,0 1
.,,1 2
MakeGenericType,,2 A
(,,A B
key,,B E
),,E F
;,,F G
}-- 
)-- 
;-- 
return// 
(// !
IOpenIddictScopeStore// )
<//) *
TScope//* 0
>//0 1
)//1 2
	_provider//2 ;
.//; <
GetRequiredService//< N
(//N O
type//O S
)//S T
;//T U
}00 	
public66 
class66 
TypeResolutionCache66 (
:66) * 
ConcurrentDictionary66+ ?
<66? @
Type66@ D
,66D E
Type66F J
>66J K
{66L M
}66N O
}77 
}88 Ø
úD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Resolvers\OpenIdTokenStoreResolver.cs
	namespace		 	
OrchardCore		
 
.		 
OpenId		 
.		 
YesSql		 #
.		# $
	Resolvers		$ -
{

 
public 

class $
OpenIdTokenStoreResolver )
:* +)
IOpenIddictTokenStoreResolver, I
{ 
private 
readonly 
TypeResolutionCache ,
_cache- 3
;3 4
private 
readonly 
IServiceProvider )
	_provider* 3
;3 4
public $
OpenIdTokenStoreResolver '
(' (
TypeResolutionCache( ;
cache< A
,A B
IServiceProviderC S
providerT \
)\ ]
{ 	
_cache 
= 
cache 
; 
	_provider 
= 
provider  
;  !
} 	
public !
IOpenIddictTokenStore $
<$ %
TToken% +
>+ ,
Get- 0
<0 1
TToken1 7
>7 8
(8 9
)9 :
where; @
TTokenA G
:H I
classJ O
{ 	
var 
store 
= 
	_provider !
.! "

GetService" ,
<, -!
IOpenIddictTokenStore- B
<B C
TTokenC I
>I J
>J K
(K L
)L M
;M N
if 
( 
store 
!= 
null 
) 
{ 
return 
store 
; 
} 
var   
type   
=   
_cache   
.   
GetOrAdd   &
(  & '
typeof  ' -
(  - .
TToken  . 4
)  4 5
,  5 6
key  7 :
=>  ; =
{!! 
if"" 
("" 
!"" 
typeof"" 
("" 
OpenIdToken"" '
)""' (
.""( )
IsAssignableFrom"") 9
(""9 :
key"": =
)""= >
)""> ?
{## 
throw$$ 
new$$ %
InvalidOperationException$$ 7
($$7 8
new$$8 ;
StringBuilder$$< I
($$I J
)$$J K
.%% 

AppendLine%% #
(%%# $
$str%%$ h
)%%h i
.&& 
Append&& 
(&&  
$str&&  p
)&&p q
.'' 
Append'' 
(''  
$str''  i
)''i j
.(( 
Append(( 
(((  
$str((  N
)((N O
.)) 
ToString)) !
())! "
)))" #
)))# $
;))$ %
}** 
return,, 
typeof,, 
(,, 
OpenIdTokenStore,, .
<,,. /
>,,/ 0
),,0 1
.,,1 2
MakeGenericType,,2 A
(,,A B
key,,B E
),,E F
;,,F G
}-- 
)-- 
;-- 
return// 
(// !
IOpenIddictTokenStore// )
<//) *
TToken//* 0
>//0 1
)//1 2
	_provider//2 ;
.//; <
GetRequiredService//< N
(//N O
type//O S
)//S T
;//T U
}00 	
public66 
class66 
TypeResolutionCache66 (
:66) * 
ConcurrentDictionary66+ ?
<66? @
Type66@ D
,66D E
Type66F J
>66J K
{66L M
}66N O
}77 
}88 ˘Ù
óD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Stores\OpenIdApplicationStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Stores$ *
{ 
public 

class "
OpenIdApplicationStore '
<' (
TApplication( 4
>4 5
:6 7#
IOpenIdApplicationStore8 O
<O P
TApplicationP \
>\ ]
where 
TApplication 
: 
OpenIdApplication .
,. /
new0 3
(3 4
)4 5
{ 
private 
readonly 
ISession !
_session" *
;* +
public "
OpenIdApplicationStore %
(% &
ISession& .
session/ 6
)6 7
{ 	
_session 
= 
session 
; 
} 	
public 
virtual 
async 
	ValueTask &
<& '
long' +
>+ ,

CountAsync- 7
(7 8
CancellationToken8 I
cancellationTokenJ [
)[ \
{   	
cancellationToken!! 
.!! (
ThrowIfCancellationRequested!! :
(!!: ;
)!!; <
;!!< =
return## 
await## 
_session## !
.##! "
Query##" '
<##' (
TApplication##( 4
>##4 5
(##5 6
)##6 7
.##7 8

CountAsync##8 B
(##B C
)##C D
;##D E
}$$ 	
public'' 
virtual'' 
	ValueTask''  
<''  !
long''! %
>''% &

CountAsync''' 1
<''1 2
TResult''2 9
>''9 :
('': ;
Func''; ?
<''? @

IQueryable''@ J
<''J K
TApplication''K W
>''W X
,''X Y

IQueryable''Z d
<''d e
TResult''e l
>''l m
>''m n
query''o t
,''t u
CancellationToken	''v á
cancellationToken
''à ô
)
''ô ö
=>(( 
throw(( 
new(( !
NotSupportedException(( .
(((. /
)((/ 0
;((0 1
public++ 
virtual++ 
async++ 
	ValueTask++ &
CreateAsync++' 2
(++2 3
TApplication++3 ?
application++@ K
,++K L
CancellationToken++M ^
cancellationToken++_ p
)++p q
{,, 	
if-- 
(-- 
application-- 
==-- 
null-- #
)--# $
{.. 
throw// 
new// !
ArgumentNullException// /
(/// 0
nameof//0 6
(//6 7
application//7 B
)//B C
)//C D
;//D E
}00 
cancellationToken22 
.22 (
ThrowIfCancellationRequested22 :
(22: ;
)22; <
;22< =
_session44 
.44 
Save44 
(44 
application44 %
)44% &
;44& '
await55 
_session55 
.55 
CommitAsync55 &
(55& '
)55' (
;55( )
}66 	
public99 
virtual99 
async99 
	ValueTask99 &
DeleteAsync99' 2
(992 3
TApplication993 ?
application99@ K
,99K L
CancellationToken99M ^
cancellationToken99_ p
)99p q
{:: 	
if;; 
(;; 
application;; 
==;; 
null;; #
);;# $
{<< 
throw== 
new== !
ArgumentNullException== /
(==/ 0
nameof==0 6
(==6 7
application==7 B
)==B C
)==C D
;==D E
}>> 
cancellationToken@@ 
.@@ (
ThrowIfCancellationRequested@@ :
(@@: ;
)@@; <
;@@< =
_sessionBB 
.BB 
DeleteBB 
(BB 
applicationBB '
)BB' (
;BB( )
awaitCC 
_sessionCC 
.CC 
CommitAsyncCC &
(CC& '
)CC' (
;CC( )
}DD 	
publicGG 
virtualGG 
asyncGG 
	ValueTaskGG &
<GG& '
TApplicationGG' 3
>GG3 4
FindByIdAsyncGG5 B
(GGB C
stringGGC I

identifierGGJ T
,GGT U
CancellationTokenGGV g
cancellationTokenGGh y
)GGy z
{HH 	
ifII 
(II 
stringII 
.II 
IsNullOrEmptyII $
(II$ %

identifierII% /
)II/ 0
)II0 1
{JJ 
throwKK 
newKK 
ArgumentExceptionKK +
(KK+ ,
$strKK, U
,KKU V
nameofKKW ]
(KK] ^

identifierKK^ h
)KKh i
)KKi j
;KKj k
}LL 
cancellationTokenNN 
.NN (
ThrowIfCancellationRequestedNN :
(NN: ;
)NN; <
;NN< =
returnPP 
awaitPP 
_sessionPP !
.PP! "
QueryPP" '
<PP' (
TApplicationPP( 4
,PP4 5"
OpenIdApplicationIndexPP6 L
>PPL M
(PPM N
indexPPN S
=>PPT V
indexPPW \
.PP\ ]
ApplicationIdPP] j
==PPk m

identifierPPn x
)PPx y
.PPy z 
FirstOrDefaultAsync	PPz ç
(
PPç é
)
PPé è
;
PPè ê
}QQ 	
publicTT 
virtualTT 
asyncTT 
	ValueTaskTT &
<TT& '
TApplicationTT' 3
>TT3 4
FindByClientIdAsyncTT5 H
(TTH I
stringTTI O

identifierTTP Z
,TTZ [
CancellationTokenTT\ m
cancellationTokenTTn 
)	TT Ä
{UU 	
ifVV 
(VV 
stringVV 
.VV 
IsNullOrEmptyVV $
(VV$ %

identifierVV% /
)VV/ 0
)VV0 1
{WW 
throwXX 
newXX 
ArgumentExceptionXX +
(XX+ ,
$strXX, U
,XXU V
nameofXXW ]
(XX] ^

identifierXX^ h
)XXh i
)XXi j
;XXj k
}YY 
cancellationToken[[ 
.[[ (
ThrowIfCancellationRequested[[ :
([[: ;
)[[; <
;[[< =
return]] 
await]] 
_session]] !
.]]! "
Query]]" '
<]]' (
TApplication]]( 4
,]]4 5"
OpenIdApplicationIndex]]6 L
>]]L M
(]]M N
index]]N S
=>]]T V
index]]W \
.]]\ ]
ClientId]]] e
==]]f h

identifier]]i s
)]]s t
.]]t u 
FirstOrDefaultAsync	]]u à
(
]]à â
)
]]â ä
;
]]ä ã
}^^ 	
publicaa 
virtualaa 
asyncaa 
	ValueTaskaa &
<aa& '
TApplicationaa' 3
>aa3 4!
FindByPhysicalIdAsyncaa5 J
(aaJ K
stringaaK Q

identifieraaR \
,aa\ ]
CancellationTokenaa^ o
cancellationToken	aap Å
)
aaÅ Ç
{bb 	
ifcc 
(cc 
stringcc 
.cc 
IsNullOrEmptycc $
(cc$ %

identifiercc% /
)cc/ 0
)cc0 1
{dd 
throwee 
newee 
ArgumentExceptionee +
(ee+ ,
$stree, U
,eeU V
nameofeeW ]
(ee] ^

identifieree^ h
)eeh i
)eei j
;eej k
}ff 
cancellationTokenhh 
.hh (
ThrowIfCancellationRequestedhh :
(hh: ;
)hh; <
;hh< =
returnjj 
awaitjj 
_sessionjj !
.jj! "
GetAsyncjj" *
<jj* +
TApplicationjj+ 7
>jj7 8
(jj8 9
intjj9 <
.jj< =
Parsejj= B
(jjB C

identifierjjC M
,jjM N
CultureInfojjO Z
.jjZ [
InvariantCulturejj[ k
)jjk l
)jjl m
;jjm n
}kk 	
publicnn 
virtualnn 
IAsyncEnumerablenn '
<nn' (
TApplicationnn( 4
>nn4 5,
 FindByPostLogoutRedirectUriAsyncnn6 V
(nnV W
stringnnW ]
addressnn^ e
,nne f
CancellationTokennng x
cancellationToken	nny ä
)
nnä ã
{oo 	
ifpp 
(pp 
stringpp 
.pp 
IsNullOrEmptypp $
(pp$ %
addresspp% ,
)pp, -
)pp- .
{qq 
throwrr 
newrr 
ArgumentExceptionrr +
(rr+ ,
$strrr, R
,rrR S
nameofrrT Z
(rrZ [
addressrr[ b
)rrb c
)rrc d
;rrd e
}ss 
cancellationTokenuu 
.uu (
ThrowIfCancellationRequesteduu :
(uu: ;
)uu; <
;uu< =
returnww 
_sessionww 
.ww 
Queryww !
<ww! "
TApplicationww" .
,ww. /%
OpenIdAppByLogoutUriIndexww0 I
>wwI J
(wwJ K
indexxx 
=>xx 
indexxx 
.xx 
LogoutRedirectUrixx 0
==xx1 3
addressxx4 ;
)xx; <
.xx< =
ToAsyncEnumerablexx= N
(xxN O
)xxO P
;xxP Q
}yy 	
public|| 
virtual|| 
IAsyncEnumerable|| '
<||' (
TApplication||( 4
>||4 5"
FindByRedirectUriAsync||6 L
(||L M
string||M S
address||T [
,||[ \
CancellationToken||] n
cancellationToken	||o Ä
)
||Ä Å
{}} 	
if~~ 
(~~ 
string~~ 
.~~ 
IsNullOrEmpty~~ $
(~~$ %
address~~% ,
)~~, -
)~~- .
{ 
throw
ÄÄ 
new
ÄÄ 
ArgumentException
ÄÄ +
(
ÄÄ+ ,
$str
ÄÄ, R
,
ÄÄR S
nameof
ÄÄT Z
(
ÄÄZ [
address
ÄÄ[ b
)
ÄÄb c
)
ÄÄc d
;
ÄÄd e
}
ÅÅ 
cancellationToken
ÉÉ 
.
ÉÉ *
ThrowIfCancellationRequested
ÉÉ :
(
ÉÉ: ;
)
ÉÉ; <
;
ÉÉ< =
return
ÖÖ 
_session
ÖÖ 
.
ÖÖ 
Query
ÖÖ !
<
ÖÖ! "
TApplication
ÖÖ" .
,
ÖÖ. /)
OpenIdAppByRedirectUriIndex
ÖÖ0 K
>
ÖÖK L
(
ÖÖL M
index
ÜÜ 
=>
ÜÜ 
index
ÜÜ 
.
ÜÜ 
RedirectUri
ÜÜ *
==
ÜÜ+ -
address
ÜÜ. 5
)
ÜÜ5 6
.
ÜÜ6 7
ToAsyncEnumerable
ÜÜ7 H
(
ÜÜH I
)
ÜÜI J
;
ÜÜJ K
}
áá 	
public
ää 
virtual
ää 
	ValueTask
ää  
<
ää  !
TResult
ää! (
>
ää( )
GetAsync
ää* 2
<
ää2 3
TState
ää3 9
,
ää9 :
TResult
ää; B
>
ääB C
(
ääC D
Func
ãã 
<
ãã 

IQueryable
ãã 
<
ãã 
TApplication
ãã (
>
ãã( )
,
ãã) *
TState
ãã+ 1
,
ãã1 2

IQueryable
ãã3 =
<
ãã= >
TResult
ãã> E
>
ããE F
>
ããF G
query
ããH M
,
ããM N
TState
åå 
state
åå 
,
åå 
CancellationToken
åå +
cancellationToken
åå, =
)
åå= >
=>
çç 
throw
çç 
new
çç #
NotSupportedException
çç .
(
çç. /
)
çç/ 0
;
çç0 1
public
êê 
virtual
êê 
	ValueTask
êê  
<
êê  !
string
êê! '
>
êê' (
GetClientIdAsync
êê) 9
(
êê9 :
TApplication
êê: F
application
êêG R
,
êêR S
CancellationToken
êêT e
cancellationToken
êêf w
)
êêw x
{
ëë 	
if
íí 
(
íí 
application
íí 
==
íí 
null
íí #
)
íí# $
{
ìì 
throw
îî 
new
îî #
ArgumentNullException
îî /
(
îî/ 0
nameof
îî0 6
(
îî6 7
application
îî7 B
)
îîB C
)
îîC D
;
îîD E
}
ïï 
return
óó 
new
óó 
	ValueTask
óó  
<
óó  !
string
óó! '
>
óó' (
(
óó( )
application
óó) 4
.
óó4 5
ClientId
óó5 =
)
óó= >
;
óó> ?
}
òò 	
public
õõ 
virtual
õõ 
	ValueTask
õõ  
<
õõ  !
string
õõ! '
>
õõ' ("
GetClientSecretAsync
õõ) =
(
õõ= >
TApplication
õõ> J
application
õõK V
,
õõV W
CancellationToken
õõX i
cancellationToken
õõj {
)
õõ{ |
{
úú 	
if
ùù 
(
ùù 
application
ùù 
==
ùù 
null
ùù #
)
ùù# $
{
ûû 
throw
üü 
new
üü #
ArgumentNullException
üü /
(
üü/ 0
nameof
üü0 6
(
üü6 7
application
üü7 B
)
üüB C
)
üüC D
;
üüD E
}
†† 
return
¢¢ 
new
¢¢ 
	ValueTask
¢¢  
<
¢¢  !
string
¢¢! '
>
¢¢' (
(
¢¢( )
application
¢¢) 4
.
¢¢4 5
ClientSecret
¢¢5 A
)
¢¢A B
;
¢¢B C
}
££ 	
public
¶¶ 
virtual
¶¶ 
	ValueTask
¶¶  
<
¶¶  !
string
¶¶! '
>
¶¶' ( 
GetClientTypeAsync
¶¶) ;
(
¶¶; <
TApplication
¶¶< H
application
¶¶I T
,
¶¶T U
CancellationToken
¶¶V g
cancellationToken
¶¶h y
)
¶¶y z
{
ßß 	
if
®® 
(
®® 
application
®® 
==
®® 
null
®® #
)
®®# $
{
©© 
throw
™™ 
new
™™ #
ArgumentNullException
™™ /
(
™™/ 0
nameof
™™0 6
(
™™6 7
application
™™7 B
)
™™B C
)
™™C D
;
™™D E
}
´´ 
return
≠≠ 
new
≠≠ 
	ValueTask
≠≠  
<
≠≠  !
string
≠≠! '
>
≠≠' (
(
≠≠( )
application
≠≠) 4
.
≠≠4 5
Type
≠≠5 9
)
≠≠9 :
;
≠≠: ;
}
ÆÆ 	
public
±± 
virtual
±± 
	ValueTask
±±  
<
±±  !
string
±±! '
>
±±' (!
GetConsentTypeAsync
±±) <
(
±±< =
TApplication
±±= I
application
±±J U
,
±±U V
CancellationToken
±±W h
cancellationToken
±±i z
)
±±z {
{
≤≤ 	
if
≥≥ 
(
≥≥ 
application
≥≥ 
==
≥≥ 
null
≥≥ #
)
≥≥# $
{
¥¥ 
throw
µµ 
new
µµ #
ArgumentNullException
µµ /
(
µµ/ 0
nameof
µµ0 6
(
µµ6 7
application
µµ7 B
)
µµB C
)
µµC D
;
µµD E
}
∂∂ 
return
∏∏ 
new
∏∏ 
	ValueTask
∏∏  
<
∏∏  !
string
∏∏! '
>
∏∏' (
(
∏∏( )
application
∏∏) 4
.
∏∏4 5
ConsentType
∏∏5 @
)
∏∏@ A
;
∏∏A B
}
ππ 	
public
ºº 
virtual
ºº 
	ValueTask
ºº  
<
ºº  !
string
ºº! '
>
ºº' (!
GetDisplayNameAsync
ºº) <
(
ºº< =
TApplication
ºº= I
application
ººJ U
,
ººU V
CancellationToken
ººW h
cancellationToken
ººi z
)
ººz {
{
ΩΩ 	
if
ææ 
(
ææ 
application
ææ 
==
ææ 
null
ææ #
)
ææ# $
{
øø 
throw
¿¿ 
new
¿¿ #
ArgumentNullException
¿¿ /
(
¿¿/ 0
nameof
¿¿0 6
(
¿¿6 7
application
¿¿7 B
)
¿¿B C
)
¿¿C D
;
¿¿D E
}
¡¡ 
return
√√ 
new
√√ 
	ValueTask
√√  
<
√√  !
string
√√! '
>
√√' (
(
√√( )
application
√√) 4
.
√√4 5
DisplayName
√√5 @
)
√√@ A
;
√√A B
}
ƒƒ 	
public
«« 
virtual
«« 
	ValueTask
««  
<
««  !!
ImmutableDictionary
««! 4
<
««4 5
CultureInfo
««5 @
,
««@ A
string
««B H
>
««H I
>
««I J"
GetDisplayNamesAsync
««K _
(
««_ `
TApplication
»» 
application
»» $
,
»»$ %
CancellationToken
»»& 7
cancellationToken
»»8 I
)
»»I J
{
…… 	
if
   
(
   
application
   
==
   
null
   #
)
  # $
{
ÀÀ 
throw
ÃÃ 
new
ÃÃ #
ArgumentNullException
ÃÃ /
(
ÃÃ/ 0
nameof
ÃÃ0 6
(
ÃÃ6 7
application
ÃÃ7 B
)
ÃÃB C
)
ÃÃC D
;
ÃÃD E
}
ÕÕ 
if
œœ 
(
œœ 
application
œœ 
.
œœ 
DisplayNames
œœ (
==
œœ) +
null
œœ, 0
)
œœ0 1
{
–– 
return
—— 
new
—— 
	ValueTask
—— $
<
——$ %!
ImmutableDictionary
——% 8
<
——8 9
CultureInfo
——9 D
,
——D E
string
——F L
>
——L M
>
——M N
(
——N O!
ImmutableDictionary
——O b
.
——b c
Create
——c i
<
——i j
CultureInfo
——j u
,
——u v
string
——w }
>
——} ~
(
——~ 
)—— Ä
)——Ä Å
;——Å Ç
}
““ 
return
‘‘ 
new
‘‘ 
	ValueTask
‘‘  
<
‘‘  !!
ImmutableDictionary
‘‘! 4
<
‘‘4 5
CultureInfo
‘‘5 @
,
‘‘@ A
string
‘‘B H
>
‘‘H I
>
‘‘I J
(
‘‘J K
application
‘‘K V
.
‘‘V W
DisplayNames
‘‘W c
)
‘‘c d
;
‘‘d e
}
’’ 	
public
ÿÿ 
virtual
ÿÿ 
	ValueTask
ÿÿ  
<
ÿÿ  !
string
ÿÿ! '
>
ÿÿ' (

GetIdAsync
ÿÿ) 3
(
ÿÿ3 4
TApplication
ÿÿ4 @
application
ÿÿA L
,
ÿÿL M
CancellationToken
ÿÿN _
cancellationToken
ÿÿ` q
)
ÿÿq r
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
application
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ #
)
⁄⁄# $
{
€€ 
throw
‹‹ 
new
‹‹ #
ArgumentNullException
‹‹ /
(
‹‹/ 0
nameof
‹‹0 6
(
‹‹6 7
application
‹‹7 B
)
‹‹B C
)
‹‹C D
;
‹‹D E
}
›› 
return
ﬂﬂ 
new
ﬂﬂ 
	ValueTask
ﬂﬂ  
<
ﬂﬂ  !
string
ﬂﬂ! '
>
ﬂﬂ' (
(
ﬂﬂ( )
application
ﬂﬂ) 4
.
ﬂﬂ4 5
ApplicationId
ﬂﬂ5 B
)
ﬂﬂB C
;
ﬂﬂC D
}
‡‡ 	
public
„„ 
virtual
„„ 
	ValueTask
„„  
<
„„  !
ImmutableArray
„„! /
<
„„/ 0
string
„„0 6
>
„„6 7
>
„„7 8!
GetPermissionsAsync
„„9 L
(
„„L M
TApplication
„„M Y
application
„„Z e
,
„„e f
CancellationToken
„„g x 
cancellationToken„„y ä
)„„ä ã
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
application
ÂÂ 
==
ÂÂ 
null
ÂÂ #
)
ÂÂ# $
{
ÊÊ 
throw
ÁÁ 
new
ÁÁ #
ArgumentNullException
ÁÁ /
(
ÁÁ/ 0
nameof
ÁÁ0 6
(
ÁÁ6 7
application
ÁÁ7 B
)
ÁÁB C
)
ÁÁC D
;
ÁÁD E
}
ËË 
return
ÍÍ 
new
ÍÍ 
	ValueTask
ÍÍ  
<
ÍÍ  !
ImmutableArray
ÍÍ! /
<
ÍÍ/ 0
string
ÍÍ0 6
>
ÍÍ6 7
>
ÍÍ7 8
(
ÍÍ8 9
application
ÍÍ9 D
.
ÍÍD E
Permissions
ÍÍE P
)
ÍÍP Q
;
ÍÍQ R
}
ÎÎ 	
public
ÓÓ 
virtual
ÓÓ 
	ValueTask
ÓÓ  
<
ÓÓ  !
string
ÓÓ! '
>
ÓÓ' ( 
GetPhysicalIdAsync
ÓÓ) ;
(
ÓÓ; <
TApplication
ÓÓ< H
application
ÓÓI T
,
ÓÓT U
CancellationToken
ÓÓV g
cancellationToken
ÓÓh y
)
ÓÓy z
{
ÔÔ 	
if
 
(
 
application
 
==
 
null
 #
)
# $
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ #
ArgumentNullException
ÚÚ /
(
ÚÚ/ 0
nameof
ÚÚ0 6
(
ÚÚ6 7
application
ÚÚ7 B
)
ÚÚB C
)
ÚÚC D
;
ÚÚD E
}
ÛÛ 
return
ıı 
new
ıı 
	ValueTask
ıı  
<
ıı  !
string
ıı! '
>
ıı' (
(
ıı( )
application
ıı) 4
.
ıı4 5
Id
ıı5 7
.
ıı7 8
ToString
ıı8 @
(
ıı@ A
CultureInfo
ııA L
.
ııL M
InvariantCulture
ııM ]
)
ıı] ^
)
ıı^ _
;
ıı_ `
}
ˆˆ 	
public
˘˘ 
virtual
˘˘ 
	ValueTask
˘˘  
<
˘˘  !
ImmutableArray
˘˘! /
<
˘˘/ 0
string
˘˘0 6
>
˘˘6 7
>
˘˘7 8,
GetPostLogoutRedirectUrisAsync
˘˘9 W
(
˘˘W X
TApplication
˘˘X d
application
˘˘e p
,
˘˘p q 
CancellationToken˘˘r É!
cancellationToken˘˘Ñ ï
)˘˘ï ñ
{
˙˙ 	
if
˚˚ 
(
˚˚ 
application
˚˚ 
==
˚˚ 
null
˚˚ #
)
˚˚# $
{
¸¸ 
throw
˝˝ 
new
˝˝ #
ArgumentNullException
˝˝ /
(
˝˝/ 0
nameof
˝˝0 6
(
˝˝6 7
application
˝˝7 B
)
˝˝B C
)
˝˝C D
;
˝˝D E
}
˛˛ 
return
ÄÄ 
new
ÄÄ 
	ValueTask
ÄÄ  
<
ÄÄ  !
ImmutableArray
ÄÄ! /
<
ÄÄ/ 0
string
ÄÄ0 6
>
ÄÄ6 7
>
ÄÄ7 8
(
ÄÄ8 9
application
ÄÄ9 D
.
ÄÄD E$
PostLogoutRedirectUris
ÄÄE [
)
ÄÄ[ \
;
ÄÄ\ ]
}
ÅÅ 	
public
ÑÑ 
virtual
ÑÑ 
	ValueTask
ÑÑ  
<
ÑÑ  !!
ImmutableDictionary
ÑÑ! 4
<
ÑÑ4 5
string
ÑÑ5 ;
,
ÑÑ; <
JsonElement
ÑÑ= H
>
ÑÑH I
>
ÑÑI J 
GetPropertiesAsync
ÑÑK ]
(
ÑÑ] ^
TApplication
ÑÑ^ j
application
ÑÑk v
,
ÑÑv w 
CancellationTokenÑÑx â!
cancellationTokenÑÑä õ
)ÑÑõ ú
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
application
ÜÜ 
==
ÜÜ 
null
ÜÜ #
)
ÜÜ# $
{
áá 
throw
àà 
new
àà #
ArgumentNullException
àà /
(
àà/ 0
nameof
àà0 6
(
àà6 7
application
àà7 B
)
ààB C
)
ààC D
;
ààD E
}
ââ 
if
ãã 
(
ãã 
application
ãã 
.
ãã 

Properties
ãã &
==
ãã' )
null
ãã* .
)
ãã. /
{
åå 
return
çç 
new
çç 
	ValueTask
çç $
<
çç$ %!
ImmutableDictionary
çç% 8
<
çç8 9
string
çç9 ?
,
çç? @
JsonElement
ççA L
>
ççL M
>
ççM N
(
ççN O!
ImmutableDictionary
ççO b
.
ççb c
Create
ççc i
<
ççi j
string
ççj p
,
ççp q
JsonElement
ççr }
>
çç} ~
(
çç~ 
)çç Ä
)ççÄ Å
;ççÅ Ç
}
éé 
return
êê 
new
êê 
	ValueTask
êê  
<
êê  !!
ImmutableDictionary
êê! 4
<
êê4 5
string
êê5 ;
,
êê; <
JsonElement
êê= H
>
êêH I
>
êêI J
(
êêJ K
JsonSerializer
ëë 
.
ëë 
Deserialize
ëë *
<
ëë* +!
ImmutableDictionary
ëë+ >
<
ëë> ?
string
ëë? E
,
ëëE F
JsonElement
ëëG R
>
ëëR S
>
ëëS T
(
ëëT U
application
ëëU `
.
ëë` a

Properties
ëëa k
.
ëëk l
ToString
ëël t
(
ëët u
)
ëëu v
)
ëëv w
)
ëëw x
;
ëëx y
}
íí 	
public
ïï 
virtual
ïï 
	ValueTask
ïï  
<
ïï  !
ImmutableArray
ïï! /
<
ïï/ 0
string
ïï0 6
>
ïï6 7
>
ïï7 8"
GetRedirectUrisAsync
ïï9 M
(
ïïM N
TApplication
ïïN Z
application
ïï[ f
,
ïïf g
CancellationToken
ïïh y 
cancellationTokenïïz ã
)ïïã å
{
ññ 	
if
óó 
(
óó 
application
óó 
==
óó 
null
óó #
)
óó# $
{
òò 
throw
ôô 
new
ôô #
ArgumentNullException
ôô /
(
ôô/ 0
nameof
ôô0 6
(
ôô6 7
application
ôô7 B
)
ôôB C
)
ôôC D
;
ôôD E
}
öö 
return
úú 
new
úú 
	ValueTask
úú  
<
úú  !
ImmutableArray
úú! /
<
úú/ 0
string
úú0 6
>
úú6 7
>
úú7 8
(
úú8 9
application
úú9 D
.
úúD E
RedirectUris
úúE Q
)
úúQ R
;
úúR S
}
ùù 	
public
†† 
virtual
†† 
	ValueTask
††  
<
††  !
ImmutableArray
††! /
<
††/ 0
string
††0 6
>
††6 7
>
††7 8"
GetRequirementsAsync
††9 M
(
††M N
TApplication
††N Z
application
††[ f
,
††f g
CancellationToken
††h y 
cancellationToken††z ã
)††ã å
{
°° 	
if
¢¢ 
(
¢¢ 
application
¢¢ 
==
¢¢ 
null
¢¢ #
)
¢¢# $
{
££ 
throw
§§ 
new
§§ #
ArgumentNullException
§§ /
(
§§/ 0
nameof
§§0 6
(
§§6 7
application
§§7 B
)
§§B C
)
§§C D
;
§§D E
}
•• 
return
ßß 
new
ßß 
	ValueTask
ßß  
<
ßß  !
ImmutableArray
ßß! /
<
ßß/ 0
string
ßß0 6
>
ßß6 7
>
ßß7 8
(
ßß8 9
application
ßß9 D
.
ßßD E
Requirements
ßßE Q
)
ßßQ R
;
ßßR S
}
®® 	
public
´´ 
virtual
´´ 
	ValueTask
´´  
<
´´  !
TApplication
´´! -
>
´´- .
InstantiateAsync
´´/ ?
(
´´? @
CancellationToken
´´@ Q
cancellationToken
´´R c
)
´´c d
=>
¨¨ 
new
¨¨ 
	ValueTask
¨¨ 
<
¨¨ 
TApplication
¨¨ )
>
¨¨) *
(
¨¨* +
new
¨¨+ .
TApplication
¨¨/ ;
{
¨¨< =
ApplicationId
¨¨> K
=
¨¨L M
Guid
¨¨N R
.
¨¨R S
NewGuid
¨¨S Z
(
¨¨Z [
)
¨¨[ \
.
¨¨\ ]
ToString
¨¨] e
(
¨¨e f
$str
¨¨f i
)
¨¨i j
}
¨¨k l
)
¨¨l m
;
¨¨m n
public
ØØ 
virtual
ØØ 
IAsyncEnumerable
ØØ '
<
ØØ' (
TApplication
ØØ( 4
>
ØØ4 5
	ListAsync
ØØ6 ?
(
ØØ? @
int
ØØ@ C
?
ØØC D
count
ØØE J
,
ØØJ K
int
ØØL O
?
ØØO P
offset
ØØQ W
,
ØØW X
CancellationToken
ØØY j
cancellationToken
ØØk |
)
ØØ| }
{
∞∞ 	
var
±± 
query
±± 
=
±± 
_session
±±  
.
±±  !
Query
±±! &
<
±±& '
TApplication
±±' 3
>
±±3 4
(
±±4 5
)
±±5 6
;
±±6 7
if
≥≥ 
(
≥≥ 
offset
≥≥ 
.
≥≥ 
HasValue
≥≥ 
)
≥≥  
{
¥¥ 
query
µµ 
=
µµ 
query
µµ 
.
µµ 
Skip
µµ "
(
µµ" #
offset
µµ# )
.
µµ) *
Value
µµ* /
)
µµ/ 0
;
µµ0 1
}
∂∂ 
if
∏∏ 
(
∏∏ 
count
∏∏ 
.
∏∏ 
HasValue
∏∏ 
)
∏∏ 
{
ππ 
query
∫∫ 
=
∫∫ 
query
∫∫ 
.
∫∫ 
Take
∫∫ "
(
∫∫" #
count
∫∫# (
.
∫∫( )
Value
∫∫) .
)
∫∫. /
;
∫∫/ 0
}
ªª 
return
ΩΩ 
query
ΩΩ 
.
ΩΩ 
ToAsyncEnumerable
ΩΩ *
(
ΩΩ* +
)
ΩΩ+ ,
;
ΩΩ, -
}
ææ 	
public
¡¡ 
virtual
¡¡ 
IAsyncEnumerable
¡¡ '
<
¡¡' (
TResult
¡¡( /
>
¡¡/ 0
	ListAsync
¡¡1 :
<
¡¡: ;
TState
¡¡; A
,
¡¡A B
TResult
¡¡C J
>
¡¡J K
(
¡¡K L
Func
¬¬ 
<
¬¬ 

IQueryable
¬¬ 
<
¬¬ 
TApplication
¬¬ (
>
¬¬( )
,
¬¬) *
TState
¬¬+ 1
,
¬¬1 2

IQueryable
¬¬3 =
<
¬¬= >
TResult
¬¬> E
>
¬¬E F
>
¬¬F G
query
¬¬H M
,
¬¬M N
TState
√√ 
state
√√ 
,
√√ 
CancellationToken
√√ +
cancellationToken
√√, =
)
√√= >
=>
ƒƒ 
throw
ƒƒ 
new
ƒƒ #
NotSupportedException
ƒƒ .
(
ƒƒ. /
)
ƒƒ/ 0
;
ƒƒ0 1
public
«« 
virtual
«« 
	ValueTask
««  
SetClientIdAsync
««! 1
(
««1 2
TApplication
««2 >
application
««? J
,
««J K
string
»» 

identifier
»» 
,
»» 
CancellationToken
»» 0
cancellationToken
»»1 B
)
»»B C
{
…… 	
if
   
(
   
application
   
==
   
null
   #
)
  # $
{
ÀÀ 
throw
ÃÃ 
new
ÃÃ #
ArgumentNullException
ÃÃ /
(
ÃÃ/ 0
nameof
ÃÃ0 6
(
ÃÃ6 7
application
ÃÃ7 B
)
ÃÃB C
)
ÃÃC D
;
ÃÃD E
}
ÕÕ 
application
œœ 
.
œœ 
ClientId
œœ  
=
œœ! "

identifier
œœ# -
;
œœ- .
return
—— 
default
—— 
;
—— 
}
““ 	
public
’’ 
virtual
’’ 
	ValueTask
’’  "
SetClientSecretAsync
’’! 5
(
’’5 6
TApplication
’’6 B
application
’’C N
,
’’N O
string
’’P V
secret
’’W ]
,
’’] ^
CancellationToken
’’_ p 
cancellationToken’’q Ç
)’’Ç É
{
÷÷ 	
if
◊◊ 
(
◊◊ 
application
◊◊ 
==
◊◊ 
null
◊◊ #
)
◊◊# $
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ #
ArgumentNullException
ŸŸ /
(
ŸŸ/ 0
nameof
ŸŸ0 6
(
ŸŸ6 7
application
ŸŸ7 B
)
ŸŸB C
)
ŸŸC D
;
ŸŸD E
}
⁄⁄ 
application
‹‹ 
.
‹‹ 
ClientSecret
‹‹ $
=
‹‹% &
secret
‹‹' -
;
‹‹- .
return
ﬁﬁ 
default
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
‚‚ 
virtual
‚‚ 
	ValueTask
‚‚   
SetClientTypeAsync
‚‚! 3
(
‚‚3 4
TApplication
‚‚4 @
application
‚‚A L
,
‚‚L M
string
‚‚N T
type
‚‚U Y
,
‚‚Y Z
CancellationToken
‚‚[ l
cancellationToken
‚‚m ~
)
‚‚~ 
{
„„ 	
if
‰‰ 
(
‰‰ 
application
‰‰ 
==
‰‰ 
null
‰‰ #
)
‰‰# $
{
ÂÂ 
throw
ÊÊ 
new
ÊÊ #
ArgumentNullException
ÊÊ /
(
ÊÊ/ 0
nameof
ÊÊ0 6
(
ÊÊ6 7
application
ÊÊ7 B
)
ÊÊB C
)
ÊÊC D
;
ÊÊD E
}
ÁÁ 
application
ÈÈ 
.
ÈÈ 
Type
ÈÈ 
=
ÈÈ 
type
ÈÈ #
;
ÈÈ# $
return
ÎÎ 
default
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
public
ÔÔ 
virtual
ÔÔ 
	ValueTask
ÔÔ  !
SetConsentTypeAsync
ÔÔ! 4
(
ÔÔ4 5
TApplication
ÔÔ5 A
application
ÔÔB M
,
ÔÔM N
string
ÔÔO U
type
ÔÔV Z
,
ÔÔZ [
CancellationToken
ÔÔ\ m
cancellationToken
ÔÔn 
)ÔÔ Ä
{
 	
if
ÒÒ 
(
ÒÒ 
application
ÒÒ 
==
ÒÒ 
null
ÒÒ #
)
ÒÒ# $
{
ÚÚ 
throw
ÛÛ 
new
ÛÛ #
ArgumentNullException
ÛÛ /
(
ÛÛ/ 0
nameof
ÛÛ0 6
(
ÛÛ6 7
application
ÛÛ7 B
)
ÛÛB C
)
ÛÛC D
;
ÛÛD E
}
ÙÙ 
application
ˆˆ 
.
ˆˆ 
ConsentType
ˆˆ #
=
ˆˆ$ %
type
ˆˆ& *
;
ˆˆ* +
return
¯¯ 
default
¯¯ 
;
¯¯ 
}
˘˘ 	
public
¸¸ 
virtual
¸¸ 
	ValueTask
¸¸  !
SetDisplayNameAsync
¸¸! 4
(
¸¸4 5
TApplication
¸¸5 A
application
¸¸B M
,
¸¸M N
string
¸¸O U
name
¸¸V Z
,
¸¸Z [
CancellationToken
¸¸\ m
cancellationToken
¸¸n 
)¸¸ Ä
{
˝˝ 	
if
˛˛ 
(
˛˛ 
application
˛˛ 
==
˛˛ 
null
˛˛ #
)
˛˛# $
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ #
ArgumentNullException
ÄÄ /
(
ÄÄ/ 0
nameof
ÄÄ0 6
(
ÄÄ6 7
application
ÄÄ7 B
)
ÄÄB C
)
ÄÄC D
;
ÄÄD E
}
ÅÅ 
application
ÉÉ 
.
ÉÉ 
DisplayName
ÉÉ #
=
ÉÉ$ %
name
ÉÉ& *
;
ÉÉ* +
return
ÖÖ 
default
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
ââ 
virtual
ââ 
	ValueTask
ââ  "
SetDisplayNamesAsync
ââ! 5
(
ââ5 6
TApplication
ââ6 B
application
ââC N
,
ââN O!
ImmutableDictionary
ââP c
<
ââc d
CultureInfo
ââd o
,
ââo p
string
ââq w
>
ââw x
names
âây ~
,
ââ~ !
CancellationTokenââÄ ë!
cancellationTokenââí £
)ââ£ §
{
ää 	
if
ãã 
(
ãã 
application
ãã 
==
ãã 
null
ãã #
)
ãã# $
{
åå 
throw
çç 
new
çç #
ArgumentNullException
çç /
(
çç/ 0
nameof
çç0 6
(
çç6 7
application
çç7 B
)
ççB C
)
ççC D
;
ççD E
}
éé 
application
êê 
.
êê 
DisplayNames
êê $
=
êê% &
names
êê' ,
;
êê, -
return
íí 
default
íí 
;
íí 
}
ìì 	
public
ññ 
virtual
ññ 
	ValueTask
ññ  !
SetPermissionsAsync
ññ! 4
(
ññ4 5
TApplication
ññ5 A
application
ññB M
,
ññM N
ImmutableArray
ññO ]
<
ññ] ^
string
ññ^ d
>
ññd e
permissions
ññf q
,
ññq r 
CancellationTokenññs Ñ!
cancellationTokenññÖ ñ
)ñññ ó
{
óó 	
if
òò 
(
òò 
application
òò 
==
òò 
null
òò #
)
òò# $
{
ôô 
throw
öö 
new
öö #
ArgumentNullException
öö /
(
öö/ 0
nameof
öö0 6
(
öö6 7
application
öö7 B
)
ööB C
)
ööC D
;
ööD E
}
õõ 
application
ùù 
.
ùù 
Permissions
ùù #
=
ùù$ %
permissions
ùù& 1
;
ùù1 2
return
üü 
default
üü 
;
üü 
}
†† 	
public
££ 
virtual
££ 
	ValueTask
££  ,
SetPostLogoutRedirectUrisAsync
££! ?
(
££? @
TApplication
££@ L
application
££M X
,
££X Y
ImmutableArray
§§ 
<
§§ 
string
§§ !
>
§§! "
	addresses
§§# ,
,
§§, -
CancellationToken
§§. ?
cancellationToken
§§@ Q
)
§§Q R
{
•• 	
if
¶¶ 
(
¶¶ 
application
¶¶ 
==
¶¶ 
null
¶¶ #
)
¶¶# $
{
ßß 
throw
®® 
new
®® #
ArgumentNullException
®® /
(
®®/ 0
nameof
®®0 6
(
®®6 7
application
®®7 B
)
®®B C
)
®®C D
;
®®D E
}
©© 
application
´´ 
.
´´ $
PostLogoutRedirectUris
´´ .
=
´´/ 0
	addresses
´´1 :
;
´´: ;
return
≠≠ 
default
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
±± 
virtual
±± 
	ValueTask
±±   
SetPropertiesAsync
±±! 3
(
±±3 4
TApplication
±±4 @
application
±±A L
,
±±L M!
ImmutableDictionary
±±N a
<
±±a b
string
±±b h
,
±±h i
JsonElement
±±j u
>
±±u v

properties±±w Å
,±±Å Ç!
CancellationToken±±É î!
cancellationToken±±ï ¶
)±±¶ ß
{
≤≤ 	
if
≥≥ 
(
≥≥ 
application
≥≥ 
==
≥≥ 
null
≥≥ #
)
≥≥# $
{
¥¥ 
throw
µµ 
new
µµ #
ArgumentNullException
µµ /
(
µµ/ 0
nameof
µµ0 6
(
µµ6 7
application
µµ7 B
)
µµB C
)
µµC D
;
µµD E
}
∂∂ 
if
∏∏ 
(
∏∏ 

properties
∏∏ 
==
∏∏ 
null
∏∏ "
||
∏∏# %

properties
∏∏& 0
.
∏∏0 1
IsEmpty
∏∏1 8
)
∏∏8 9
{
ππ 
application
∫∫ 
.
∫∫ 

Properties
∫∫ &
=
∫∫' (
null
∫∫) -
;
∫∫- .
return
ºº 
default
ºº 
;
ºº 
}
ΩΩ 
application
øø 
.
øø 

Properties
øø "
=
øø# $
JObject
øø% ,
.
øø, -
Parse
øø- 2
(
øø2 3
JsonSerializer
øø3 A
.
øøA B
	Serialize
øøB K
(
øøK L

properties
øøL V
,
øøV W
new
øøX [#
JsonSerializerOptions
øø\ q
{
¿¿ 
Encoder
¡¡ 
=
¡¡ 
JavaScriptEncoder
¡¡ +
.
¡¡+ ,'
UnsafeRelaxedJsonEscaping
¡¡, E
,
¡¡E F
WriteIndented
¬¬ 
=
¬¬ 
false
¬¬  %
}
√√ 
)
√√ 
)
√√ 
;
√√ 
return
≈≈ 
default
≈≈ 
;
≈≈ 
}
∆∆ 	
public
…… 
virtual
…… 
	ValueTask
……  "
SetRedirectUrisAsync
……! 5
(
……5 6
TApplication
……6 B
application
……C N
,
……N O
ImmutableArray
   
<
   
string
   !
>
  ! "
	addresses
  # ,
,
  , -
CancellationToken
  . ?
cancellationToken
  @ Q
)
  Q R
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
application
ÃÃ 
==
ÃÃ 
null
ÃÃ #
)
ÃÃ# $
{
ÕÕ 
throw
ŒŒ 
new
ŒŒ #
ArgumentNullException
ŒŒ /
(
ŒŒ/ 0
nameof
ŒŒ0 6
(
ŒŒ6 7
application
ŒŒ7 B
)
ŒŒB C
)
ŒŒC D
;
ŒŒD E
}
œœ 
application
—— 
.
—— 
RedirectUris
—— $
=
——% &
	addresses
——' 0
;
——0 1
return
”” 
default
”” 
;
”” 
}
‘‘ 	
public
◊◊ 
virtual
◊◊ 
	ValueTask
◊◊  "
SetRequirementsAsync
◊◊! 5
(
◊◊5 6
TApplication
◊◊6 B
application
◊◊C N
,
◊◊N O
ImmutableArray
ÿÿ 
<
ÿÿ 
string
ÿÿ !
>
ÿÿ! "
requirements
ÿÿ# /
,
ÿÿ/ 0
CancellationToken
ÿÿ1 B
cancellationToken
ÿÿC T
)
ÿÿT U
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
application
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ #
)
⁄⁄# $
{
€€ 
throw
‹‹ 
new
‹‹ #
ArgumentNullException
‹‹ /
(
‹‹/ 0
nameof
‹‹0 6
(
‹‹6 7
application
‹‹7 B
)
‹‹B C
)
‹‹C D
;
‹‹D E
}
›› 
application
ﬂﬂ 
.
ﬂﬂ 
Requirements
ﬂﬂ $
=
ﬂﬂ% &
requirements
ﬂﬂ' 3
;
ﬂﬂ3 4
return
·· 
default
·· 
;
·· 
}
‚‚ 	
public
ÂÂ 
virtual
ÂÂ 
async
ÂÂ 
	ValueTask
ÂÂ &
UpdateAsync
ÂÂ' 2
(
ÂÂ2 3
TApplication
ÂÂ3 ?
application
ÂÂ@ K
,
ÂÂK L
CancellationToken
ÂÂM ^
cancellationToken
ÂÂ_ p
)
ÂÂp q
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
application
ÁÁ 
==
ÁÁ 
null
ÁÁ #
)
ÁÁ# $
{
ËË 
throw
ÈÈ 
new
ÈÈ #
ArgumentNullException
ÈÈ /
(
ÈÈ/ 0
nameof
ÈÈ0 6
(
ÈÈ6 7
application
ÈÈ7 B
)
ÈÈB C
)
ÈÈC D
;
ÈÈD E
}
ÍÍ 
cancellationToken
ÏÏ 
.
ÏÏ *
ThrowIfCancellationRequested
ÏÏ :
(
ÏÏ: ;
)
ÏÏ; <
;
ÏÏ< =
_session
ÓÓ 
.
ÓÓ 
Save
ÓÓ 
(
ÓÓ 
application
ÓÓ %
,
ÓÓ% &
checkConcurrency
ÓÓ' 7
:
ÓÓ7 8
true
ÓÓ9 =
)
ÓÓ= >
;
ÓÓ> ?
try
 
{
ÒÒ 
await
ÚÚ 
_session
ÚÚ 
.
ÚÚ 
CommitAsync
ÚÚ *
(
ÚÚ* +
)
ÚÚ+ ,
;
ÚÚ, -
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ "
ConcurrencyException
ÙÙ '
	exception
ÙÙ( 1
)
ÙÙ1 2
{
ıı 
throw
ˆˆ 
new
ˆˆ "
OpenIddictExceptions
ˆˆ .
.
ˆˆ. /"
ConcurrencyException
ˆˆ/ C
(
ˆˆC D
new
ˆˆD G
StringBuilder
ˆˆH U
(
ˆˆU V
)
ˆˆV W
.
˜˜ 

AppendLine
˜˜ 
(
˜˜  
$str
˜˜  x
)
˜˜x y
.
¯¯ 
Append
¯¯ 
(
¯¯ 
$str
¯¯ _
)
¯¯_ `
.
˘˘ 
ToString
˘˘ 
(
˘˘ 
)
˘˘ 
,
˘˘  
	exception
˘˘! *
)
˘˘* +
;
˘˘+ ,
}
˙˙ 
}
˚˚ 	
public
˛˛ 
virtual
˛˛ 
	ValueTask
˛˛  
<
˛˛  !
ImmutableArray
˛˛! /
<
˛˛/ 0
string
˛˛0 6
>
˛˛6 7
>
˛˛7 8
GetRolesAsync
˛˛9 F
(
˛˛F G
TApplication
˛˛G S
application
˛˛T _
,
˛˛_ `
CancellationToken
˛˛a r 
cancellationToken˛˛s Ñ
)˛˛Ñ Ö
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
application
ÄÄ 
==
ÄÄ 
null
ÄÄ #
)
ÄÄ# $
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
nameof
ÇÇ0 6
(
ÇÇ6 7
application
ÇÇ7 B
)
ÇÇB C
)
ÇÇC D
;
ÇÇD E
}
ÉÉ 
return
ÖÖ 
new
ÖÖ 
	ValueTask
ÖÖ  
<
ÖÖ  !
ImmutableArray
ÖÖ! /
<
ÖÖ/ 0
string
ÖÖ0 6
>
ÖÖ6 7
>
ÖÖ7 8
(
ÖÖ8 9
application
ÖÖ9 D
.
ÖÖD E
Roles
ÖÖE J
)
ÖÖJ K
;
ÖÖK L
}
ÜÜ 	
public
ââ 
virtual
ââ 
IAsyncEnumerable
ââ '
<
ââ' (
TApplication
ââ( 4
>
ââ4 5
ListInRoleAsync
ââ6 E
(
ââE F
string
ââF L
role
ââM Q
,
ââQ R
CancellationToken
ââS d
cancellationToken
ââe v
)
ââv w
{
ää 	
if
ãã 
(
ãã 
string
ãã 
.
ãã 
IsNullOrEmpty
ãã $
(
ãã$ %
role
ãã% )
)
ãã) *
)
ãã* +
{
åå 
throw
çç 
new
çç 
ArgumentException
çç +
(
çç+ ,
$str
çç, T
,
ççT U
nameof
ççV \
(
çç\ ]
role
çç] a
)
çça b
)
ççb c
;
ççc d
}
éé 
return
êê 
_session
êê 
.
êê 
Query
êê !
<
êê! "
TApplication
êê" .
,
êê. /&
OpenIdAppByRoleNameIndex
êê0 H
>
êêH I
(
êêI J
index
êêJ O
=>
êêP R
index
êêS X
.
êêX Y
RoleName
êêY a
==
êêb d
role
êêe i
)
êêi j
.
êêj k
ToAsyncEnumerable
êêk |
(
êê| }
)
êê} ~
;
êê~ 
}
ëë 	
public
îî 
virtual
îî 
	ValueTask
îî  
SetRolesAsync
îî! .
(
îî. /
TApplication
îî/ ;
application
îî< G
,
îîG H
ImmutableArray
îîI W
<
îîW X
string
îîX ^
>
îî^ _
roles
îî` e
,
îîe f
CancellationToken
îîg x 
cancellationTokenîîy ä
)îîä ã
{
ïï 	
if
ññ 
(
ññ 
application
ññ 
==
ññ 
null
ññ #
)
ññ# $
{
óó 
throw
òò 
new
òò #
ArgumentNullException
òò /
(
òò/ 0
nameof
òò0 6
(
òò6 7
application
òò7 B
)
òòB C
)
òòC D
;
òòD E
}
ôô 
application
õõ 
.
õõ 
Roles
õõ 
=
õõ 
roles
õõ  %
;
õõ% &
return
ùù 
default
ùù 
;
ùù 
}
ûû 	
}
üü 
}†† øÄ
ôD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Stores\OpenIdAuthorizationStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Stores$ *
{ 
public 

class $
OpenIdAuthorizationStore )
<) *
TAuthorization* 8
>8 9
:: ;%
IOpenIdAuthorizationStore< U
<U V
TAuthorizationV d
>d e
where 
TAuthorization 
: 
OpenIdAuthorization 2
,2 3
new4 7
(7 8
)8 9
{ 
private 
readonly 
ISession !
_session" *
;* +
public $
OpenIdAuthorizationStore '
(' (
ISession( 0
session1 8
)8 9
{ 	
_session 
= 
session 
; 
} 	
public!! 
virtual!! 
async!! 
	ValueTask!! &
<!!& '
long!!' +
>!!+ ,

CountAsync!!- 7
(!!7 8
CancellationToken!!8 I
cancellationToken!!J [
)!![ \
{"" 	
cancellationToken## 
.## (
ThrowIfCancellationRequested## :
(##: ;
)##; <
;##< =
return%% 
await%% 
_session%% !
.%%! "
Query%%" '
<%%' (
TAuthorization%%( 6
>%%6 7
(%%7 8
)%%8 9
.%%9 :

CountAsync%%: D
(%%D E
)%%E F
;%%F G
}&& 	
public)) 
virtual)) 
	ValueTask))  
<))  !
long))! %
>))% &

CountAsync))' 1
<))1 2
TResult))2 9
>))9 :
()): ;
Func)); ?
<))? @

IQueryable))@ J
<))J K
TAuthorization))K Y
>))Y Z
,))Z [

IQueryable))\ f
<))f g
TResult))g n
>))n o
>))o p
query))q v
,))v w
CancellationToken	))x â
cancellationToken
))ä õ
)
))õ ú
=>** 
throw** 
new** !
NotSupportedException** .
(**. /
)**/ 0
;**0 1
public-- 
virtual-- 
async-- 
	ValueTask-- &
CreateAsync--' 2
(--2 3
TAuthorization--3 A
authorization--B O
,--O P
CancellationToken--Q b
cancellationToken--c t
)--t u
{.. 	
if// 
(// 
authorization// 
==//  
null//! %
)//% &
{00 
throw11 
new11 !
ArgumentNullException11 /
(11/ 0
nameof110 6
(116 7
authorization117 D
)11D E
)11E F
;11F G
}22 
cancellationToken44 
.44 (
ThrowIfCancellationRequested44 :
(44: ;
)44; <
;44< =
_session66 
.66 
Save66 
(66 
authorization66 '
)66' (
;66( )
await77 
_session77 
.77 
CommitAsync77 &
(77& '
)77' (
;77( )
}88 	
public;; 
virtual;; 
async;; 
	ValueTask;; &
DeleteAsync;;' 2
(;;2 3
TAuthorization;;3 A
authorization;;B O
,;;O P
CancellationToken;;Q b
cancellationToken;;c t
);;t u
{<< 	
if== 
(== 
authorization== 
====  
null==! %
)==% &
{>> 
throw?? 
new?? !
ArgumentNullException?? /
(??/ 0
nameof??0 6
(??6 7
authorization??7 D
)??D E
)??E F
;??F G
}@@ 
cancellationTokenBB 
.BB (
ThrowIfCancellationRequestedBB :
(BB: ;
)BB; <
;BB< =
_sessionDD 
.DD 
DeleteDD 
(DD 
authorizationDD )
)DD) *
;DD* +
awaitEE 
_sessionEE 
.EE 
CommitAsyncEE &
(EE& '
)EE' (
;EE( )
}FF 	
publicII 
virtualII 
IAsyncEnumerableII '
<II' (
TAuthorizationII( 6
>II6 7
	FindAsyncII8 A
(IIA B
stringJJ 
subjectJJ 
,JJ 
stringJJ "
clientJJ# )
,JJ) *
CancellationTokenJJ+ <
cancellationTokenJJ= N
)JJN O
{KK 	
ifLL 
(LL 
stringLL 
.LL 
IsNullOrEmptyLL $
(LL$ %
subjectLL% ,
)LL, -
)LL- .
{MM 
throwNN 
newNN 
ArgumentExceptionNN +
(NN+ ,
$strNN, R
,NNR S
nameofNNT Z
(NNZ [
subjectNN[ b
)NNb c
)NNc d
;NNd e
}OO 
ifQQ 
(QQ 
stringQQ 
.QQ 
IsNullOrEmptyQQ $
(QQ$ %
clientQQ% +
)QQ+ ,
)QQ, -
{RR 
throwSS 
newSS 
ArgumentExceptionSS +
(SS+ ,
$strSS, Q
,SSQ R
nameofSSS Y
(SSY Z
clientSSZ `
)SS` a
)SSa b
;SSb c
}TT 
cancellationTokenVV 
.VV (
ThrowIfCancellationRequestedVV :
(VV: ;
)VV; <
;VV< =
returnXX 
_sessionXX 
.XX 
QueryXX !
<XX! "
TAuthorizationXX" 0
,XX0 1$
OpenIdAuthorizationIndexXX2 J
>XXJ K
(XXK L
indexYY 
=>YY 
indexYY 
.YY 
ApplicationIdYY ,
==YY- /
clientYY0 6
&&YY7 9
indexYY: ?
.YY? @
SubjectYY@ G
==YYH J
subjectYYK R
)YYR S
.YYS T
ToAsyncEnumerableYYT e
(YYe f
)YYf g
;YYg h
}ZZ 	
public]] 
virtual]] 
IAsyncEnumerable]] '
<]]' (
TAuthorization]]( 6
>]]6 7
	FindAsync]]8 A
(]]A B
string^^ 
subject^^ 
,^^ 
string^^ "
client^^# )
,^^) *
string^^+ 1
status^^2 8
,^^8 9
CancellationToken^^: K
cancellationToken^^L ]
)^^] ^
{__ 	
if`` 
(`` 
string`` 
.`` 
IsNullOrEmpty`` $
(``$ %
subject``% ,
)``, -
)``- .
{aa 
throwbb 
newbb 
ArgumentExceptionbb +
(bb+ ,
$strbb, R
,bbR S
nameofbbT Z
(bbZ [
subjectbb[ b
)bbb c
)bbc d
;bbd e
}cc 
ifee 
(ee 
stringee 
.ee 
IsNullOrEmptyee $
(ee$ %
clientee% +
)ee+ ,
)ee, -
{ff 
throwgg 
newgg 
ArgumentExceptiongg +
(gg+ ,
$strgg, \
,gg\ ]
nameofgg^ d
(ggd e
clientgge k
)ggk l
)ggl m
;ggm n
}hh 
ifjj 
(jj 
stringjj 
.jj 
IsNullOrEmptyjj $
(jj$ %
statusjj% +
)jj+ ,
)jj, -
{kk 
throwll 
newll 
ArgumentExceptionll +
(ll+ ,
$strll, Q
,llQ R
nameofllS Y
(llY Z
clientllZ `
)ll` a
)lla b
;llb c
}mm 
cancellationTokenoo 
.oo (
ThrowIfCancellationRequestedoo :
(oo: ;
)oo; <
;oo< =
returnqq 
_sessionqq 
.qq 
Queryqq !
<qq! "
TAuthorizationqq" 0
,qq0 1$
OpenIdAuthorizationIndexqq2 J
>qqJ K
(qqK L
indexrr 
=>rr 
indexrr 
.rr 
ApplicationIdrr ,
==rr- /
clientrr0 6
&&rr7 9
indexrr: ?
.rr? @
Subjectrr@ G
==rrH J
subjectrrK R
&&rrS U
indexrrV [
.rr[ \
Statusrr\ b
==rrc e
statusrrf l
)rrl m
.rrm n
ToAsyncEnumerablerrn 
(	rr Ä
)
rrÄ Å
;
rrÅ Ç
}ss 	
publicvv 
virtualvv 
IAsyncEnumerablevv '
<vv' (
TAuthorizationvv( 6
>vv6 7
	FindAsyncvv8 A
(vvA B
stringww 
subjectww 
,ww 
stringww "
clientww# )
,ww) *
stringxx 
statusxx 
,xx 
stringxx !
typexx" &
,xx& '
CancellationTokenxx( 9
cancellationTokenxx: K
)xxK L
{yy 	
ifzz 
(zz 
stringzz 
.zz 
IsNullOrEmptyzz $
(zz$ %
subjectzz% ,
)zz, -
)zz- .
{{{ 
throw|| 
new|| 
ArgumentException|| +
(||+ ,
$str||, R
,||R S
nameof||T Z
(||Z [
subject||[ b
)||b c
)||c d
;||d e
}}} 
if 
( 
string 
. 
IsNullOrEmpty $
($ %
client% +
)+ ,
), -
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
ArgumentException
ÅÅ +
(
ÅÅ+ ,
$str
ÅÅ, \
,
ÅÅ\ ]
nameof
ÅÅ^ d
(
ÅÅd e
client
ÅÅe k
)
ÅÅk l
)
ÅÅl m
;
ÅÅm n
}
ÇÇ 
if
ÑÑ 
(
ÑÑ 
string
ÑÑ 
.
ÑÑ 
IsNullOrEmpty
ÑÑ $
(
ÑÑ$ %
status
ÑÑ% +
)
ÑÑ+ ,
)
ÑÑ, -
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
ArgumentException
ÜÜ +
(
ÜÜ+ ,
$str
ÜÜ, Q
,
ÜÜQ R
nameof
ÜÜS Y
(
ÜÜY Z
client
ÜÜZ `
)
ÜÜ` a
)
ÜÜa b
;
ÜÜb c
}
áá 
if
ââ 
(
ââ 
string
ââ 
.
ââ 
IsNullOrEmpty
ââ $
(
ââ$ %
type
ââ% )
)
ââ) *
)
ââ* +
{
ää 
throw
ãã 
new
ãã 
ArgumentException
ãã +
(
ãã+ ,
$str
ãã, O
,
ããO P
nameof
ããQ W
(
ããW X
client
ããX ^
)
ãã^ _
)
ãã_ `
;
ãã` a
}
åå 
cancellationToken
éé 
.
éé *
ThrowIfCancellationRequested
éé :
(
éé: ;
)
éé; <
;
éé< =
return
êê 
_session
êê 
.
êê 
Query
êê !
<
êê! "
TAuthorization
êê" 0
,
êê0 1&
OpenIdAuthorizationIndex
êê2 J
>
êêJ K
(
êêK L
index
ëë 
=>
ëë 
index
ëë 
.
ëë 
ApplicationId
ëë ,
==
ëë- /
client
ëë0 6
&&
ëë7 9
index
ëë: ?
.
ëë? @
Subject
ëë@ G
==
ëëH J
subject
ëëK R
&&
ëëS U
index
íí 
.
íí 
Status
íí %
==
íí& (
status
íí) /
&&
íí0 2
index
íí3 8
.
íí8 9
Type
íí9 =
==
íí> @
type
ííA E
)
ííE F
.
ííF G
ToAsyncEnumerable
ííG X
(
ííX Y
)
ííY Z
;
ííZ [
}
ìì 	
public
ññ 
virtual
ññ 
async
ññ 
IAsyncEnumerable
ññ -
<
ññ- .
TAuthorization
ññ. <
>
ññ< =
	FindAsync
ññ> G
(
ññG H
string
óó 
subject
óó 
,
óó 
string
óó "
client
óó# )
,
óó) *
string
óó+ 1
status
óó2 8
,
óó8 9
string
óó: @
type
óóA E
,
óóE F
ImmutableArray
òò 
<
òò 
string
òò !
>
òò! "
scopes
òò# )
,
òò) *
[
òò+ ,$
EnumeratorCancellation
òò, B
]
òòB C
CancellationToken
òòD U
cancellationToken
òòV g
)
òòg h
{
ôô 	
await
öö 
foreach
öö 
(
öö 
var
öö 
authorization
öö ,
in
öö- /
	FindAsync
öö0 9
(
öö9 :
subject
öö: A
,
ööA B
client
ööC I
,
ööI J
status
ööK Q
,
ööQ R
type
ööS W
,
ööW X
cancellationToken
ööY j
)
ööj k
)
öök l
{
õõ 
if
úú 
(
úú 
new
úú 
HashSet
úú 
<
úú  
string
úú  &
>
úú& '
(
úú' (
await
úú( -
GetScopesAsync
úú. <
(
úú< =
authorization
úú= J
,
úúJ K
cancellationToken
úúL ]
)
úú] ^
,
úú^ _
StringComparer
úú` n
.
úún o
Ordinal
úúo v
)
úúv w
.
úúw x
IsSupersetOfúúx Ñ
(úúÑ Ö
scopesúúÖ ã
)úúã å
)úúå ç
{
ùù 
yield
ûû 
return
ûû  
authorization
ûû! .
;
ûû. /
}
üü 
}
†† 
}
°° 	
public
§§ 
virtual
§§ 
IAsyncEnumerable
§§ '
<
§§' (
TAuthorization
§§( 6
>
§§6 7&
FindByApplicationIdAsync
§§8 P
(
§§P Q
string
•• 

identifier
•• 
,
•• 
CancellationToken
•• 0
cancellationToken
••1 B
)
••B C
{
¶¶ 	
if
ßß 
(
ßß 
string
ßß 
.
ßß 
IsNullOrEmpty
ßß $
(
ßß$ %

identifier
ßß% /
)
ßß/ 0
)
ßß0 1
{
®® 
throw
©© 
new
©© 
ArgumentException
©© +
(
©©+ ,
$str
©©, U
,
©©U V
nameof
©©W ]
(
©©] ^

identifier
©©^ h
)
©©h i
)
©©i j
;
©©j k
}
™™ 
cancellationToken
¨¨ 
.
¨¨ *
ThrowIfCancellationRequested
¨¨ :
(
¨¨: ;
)
¨¨; <
;
¨¨< =
return
ÆÆ 
_session
ÆÆ 
.
ÆÆ 
Query
ÆÆ !
<
ÆÆ! "
TAuthorization
ÆÆ" 0
,
ÆÆ0 1&
OpenIdAuthorizationIndex
ÆÆ2 J
>
ÆÆJ K
(
ÆÆK L
index
ØØ 
=>
ØØ 
index
ØØ 
.
ØØ 
ApplicationId
ØØ ,
==
ØØ- /

identifier
ØØ0 :
)
ØØ: ;
.
ØØ; <
ToAsyncEnumerable
ØØ< M
(
ØØM N
)
ØØN O
;
ØØO P
}
∞∞ 	
public
≥≥ 
virtual
≥≥ 
async
≥≥ 
	ValueTask
≥≥ &
<
≥≥& '
TAuthorization
≥≥' 5
>
≥≥5 6
FindByIdAsync
≥≥7 D
(
≥≥D E
string
≥≥E K

identifier
≥≥L V
,
≥≥V W
CancellationToken
≥≥X i
cancellationToken
≥≥j {
)
≥≥{ |
{
¥¥ 	
if
µµ 
(
µµ 
string
µµ 
.
µµ 
IsNullOrEmpty
µµ $
(
µµ$ %

identifier
µµ% /
)
µµ/ 0
)
µµ0 1
{
∂∂ 
throw
∑∑ 
new
∑∑ 
ArgumentException
∑∑ +
(
∑∑+ ,
$str
∑∑, U
,
∑∑U V
nameof
∑∑W ]
(
∑∑] ^

identifier
∑∑^ h
)
∑∑h i
)
∑∑i j
;
∑∑j k
}
∏∏ 
cancellationToken
∫∫ 
.
∫∫ *
ThrowIfCancellationRequested
∫∫ :
(
∫∫: ;
)
∫∫; <
;
∫∫< =
return
ºº 
await
ºº 
_session
ºº !
.
ºº! "
Query
ºº" '
<
ºº' (
TAuthorization
ºº( 6
,
ºº6 7&
OpenIdAuthorizationIndex
ºº8 P
>
ººP Q
(
ººQ R
index
ΩΩ 
=>
ΩΩ 
index
ΩΩ 
.
ΩΩ 
AuthorizationId
ΩΩ .
==
ΩΩ/ 1

identifier
ΩΩ2 <
)
ΩΩ< =
.
ΩΩ= >!
FirstOrDefaultAsync
ΩΩ> Q
(
ΩΩQ R
)
ΩΩR S
;
ΩΩS T
}
ææ 	
public
¡¡ 
virtual
¡¡ 
async
¡¡ 
	ValueTask
¡¡ &
<
¡¡& '
TAuthorization
¡¡' 5
>
¡¡5 6#
FindByPhysicalIdAsync
¡¡7 L
(
¡¡L M
string
¡¡M S

identifier
¡¡T ^
,
¡¡^ _
CancellationToken
¡¡` q 
cancellationToken¡¡r É
)¡¡É Ñ
{
¬¬ 	
if
√√ 
(
√√ 
string
√√ 
.
√√ 
IsNullOrEmpty
√√ $
(
√√$ %

identifier
√√% /
)
√√/ 0
)
√√0 1
{
ƒƒ 
throw
≈≈ 
new
≈≈ 
ArgumentException
≈≈ +
(
≈≈+ ,
$str
≈≈, U
,
≈≈U V
nameof
≈≈W ]
(
≈≈] ^

identifier
≈≈^ h
)
≈≈h i
)
≈≈i j
;
≈≈j k
}
∆∆ 
cancellationToken
»» 
.
»» *
ThrowIfCancellationRequested
»» :
(
»»: ;
)
»»; <
;
»»< =
return
   
await
   
_session
   !
.
  ! "
GetAsync
  " *
<
  * +
TAuthorization
  + 9
>
  9 :
(
  : ;
int
  ; >
.
  > ?
Parse
  ? D
(
  D E

identifier
  E O
,
  O P
CultureInfo
  Q \
.
  \ ]
InvariantCulture
  ] m
)
  m n
)
  n o
;
  o p
}
ÀÀ 	
public
ŒŒ 
virtual
ŒŒ 
IAsyncEnumerable
ŒŒ '
<
ŒŒ' (
TAuthorization
ŒŒ( 6
>
ŒŒ6 7 
FindBySubjectAsync
ŒŒ8 J
(
ŒŒJ K
string
œœ 
subject
œœ 
,
œœ 
CancellationToken
œœ -
cancellationToken
œœ. ?
)
œœ? @
{
–– 	
if
—— 
(
—— 
string
—— 
.
—— 
IsNullOrEmpty
—— $
(
——$ %
subject
——% ,
)
——, -
)
——- .
{
““ 
throw
”” 
new
”” 
ArgumentException
”” +
(
””+ ,
$str
””, R
,
””R S
nameof
””T Z
(
””Z [
subject
””[ b
)
””b c
)
””c d
;
””d e
}
‘‘ 
cancellationToken
÷÷ 
.
÷÷ *
ThrowIfCancellationRequested
÷÷ :
(
÷÷: ;
)
÷÷; <
;
÷÷< =
return
ÿÿ 
_session
ÿÿ 
.
ÿÿ 
Query
ÿÿ !
<
ÿÿ! "
TAuthorization
ÿÿ" 0
,
ÿÿ0 1&
OpenIdAuthorizationIndex
ÿÿ2 J
>
ÿÿJ K
(
ÿÿK L
index
ŸŸ 
=>
ŸŸ 
index
ŸŸ 
.
ŸŸ 
Subject
ŸŸ &
==
ŸŸ' )
subject
ŸŸ* 1
)
ŸŸ1 2
.
ŸŸ2 3
ToAsyncEnumerable
ŸŸ3 D
(
ŸŸD E
)
ŸŸE F
;
ŸŸF G
}
⁄⁄ 	
public
›› 
virtual
›› 
	ValueTask
››  
<
››  !
string
››! '
>
››' (#
GetApplicationIdAsync
››) >
(
››> ?
TAuthorization
››? M
authorization
››N [
,
››[ \
CancellationToken
››] n 
cancellationToken››o Ä
)››Ä Å
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
authorization
ﬂﬂ 
==
ﬂﬂ  
null
ﬂﬂ! %
)
ﬂﬂ% &
{
‡‡ 
throw
·· 
new
·· #
ArgumentNullException
·· /
(
··/ 0
nameof
··0 6
(
··6 7
authorization
··7 D
)
··D E
)
··E F
;
··F G
}
‚‚ 
return
‰‰ 
new
‰‰ 
	ValueTask
‰‰  
<
‰‰  !
string
‰‰! '
>
‰‰' (
(
‰‰( )
authorization
‰‰) 6
.
‰‰6 7
ApplicationId
‰‰7 D
)
‰‰D E
;
‰‰E F
}
ÂÂ 	
public
ËË 
virtual
ËË 
	ValueTask
ËË  
<
ËË  !
TResult
ËË! (
>
ËË( )
GetAsync
ËË* 2
<
ËË2 3
TState
ËË3 9
,
ËË9 :
TResult
ËË; B
>
ËËB C
(
ËËC D
Func
ÈÈ 
<
ÈÈ 

IQueryable
ÈÈ 
<
ÈÈ 
TAuthorization
ÈÈ *
>
ÈÈ* +
,
ÈÈ+ ,
TState
ÈÈ- 3
,
ÈÈ3 4

IQueryable
ÈÈ5 ?
<
ÈÈ? @
TResult
ÈÈ@ G
>
ÈÈG H
>
ÈÈH I
query
ÈÈJ O
,
ÈÈO P
TState
ÍÍ 
state
ÍÍ 
,
ÍÍ 
CancellationToken
ÍÍ +
cancellationToken
ÍÍ, =
)
ÍÍ= >
=>
ÎÎ 
throw
ÎÎ 
new
ÎÎ #
NotSupportedException
ÎÎ .
(
ÎÎ. /
)
ÎÎ/ 0
;
ÎÎ0 1
public
ÓÓ 
virtual
ÓÓ 
	ValueTask
ÓÓ  
<
ÓÓ  !
DateTimeOffset
ÓÓ! /
?
ÓÓ/ 0
>
ÓÓ0 1"
GetCreationDateAsync
ÓÓ2 F
(
ÓÓF G
TAuthorization
ÓÓG U
authorization
ÓÓV c
,
ÓÓc d
CancellationToken
ÓÓe v 
cancellationTokenÓÓw à
)ÓÓà â
{
ÔÔ 	
if
 
(
 
authorization
 
==
  
null
! %
)
% &
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ #
ArgumentNullException
ÚÚ /
(
ÚÚ/ 0
nameof
ÚÚ0 6
(
ÚÚ6 7
authorization
ÚÚ7 D
)
ÚÚD E
)
ÚÚE F
;
ÚÚF G
}
ÛÛ 
if
ıı 
(
ıı 
authorization
ıı 
.
ıı 
CreationDate
ıı *
is
ıı+ -
null
ıı. 2
)
ıı2 3
{
ˆˆ 
return
˜˜ 
new
˜˜ 
	ValueTask
˜˜ $
<
˜˜$ %
DateTimeOffset
˜˜% 3
?
˜˜3 4
>
˜˜4 5
(
˜˜5 6
result
˜˜6 <
:
˜˜< =
null
˜˜> B
)
˜˜B C
;
˜˜C D
}
¯¯ 
return
˙˙ 
new
˙˙ 
	ValueTask
˙˙  
<
˙˙  !
DateTimeOffset
˙˙! /
?
˙˙/ 0
>
˙˙0 1
(
˙˙1 2
DateTime
˙˙2 :
.
˙˙: ;
SpecifyKind
˙˙; F
(
˙˙F G
authorization
˙˙G T
.
˙˙T U
CreationDate
˙˙U a
.
˙˙a b
Value
˙˙b g
,
˙˙g h
DateTimeKind
˙˙i u
.
˙˙u v
Utc
˙˙v y
)
˙˙y z
)
˙˙z {
;
˙˙{ |
}
˚˚ 	
public
˛˛ 
virtual
˛˛ 
	ValueTask
˛˛  
<
˛˛  !
string
˛˛! '
>
˛˛' (

GetIdAsync
˛˛) 3
(
˛˛3 4
TAuthorization
˛˛4 B
authorization
˛˛C P
,
˛˛P Q
CancellationToken
˛˛R c
cancellationToken
˛˛d u
)
˛˛u v
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
authorization
ÄÄ 
==
ÄÄ  
null
ÄÄ! %
)
ÄÄ% &
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
nameof
ÇÇ0 6
(
ÇÇ6 7
authorization
ÇÇ7 D
)
ÇÇD E
)
ÇÇE F
;
ÇÇF G
}
ÉÉ 
return
ÖÖ 
new
ÖÖ 
	ValueTask
ÖÖ  
<
ÖÖ  !
string
ÖÖ! '
>
ÖÖ' (
(
ÖÖ( )
authorization
ÖÖ) 6
.
ÖÖ6 7
AuthorizationId
ÖÖ7 F
)
ÖÖF G
;
ÖÖG H
}
ÜÜ 	
public
ââ 
virtual
ââ 
	ValueTask
ââ  
<
ââ  !
string
ââ! '
>
ââ' ( 
GetPhysicalIdAsync
ââ) ;
(
ââ; <
TAuthorization
ââ< J
authorization
ââK X
,
ââX Y
CancellationToken
ââZ k
cancellationToken
ââl }
)
ââ} ~
{
ää 	
if
ãã 
(
ãã 
authorization
ãã 
==
ãã  
null
ãã! %
)
ãã% &
{
åå 
throw
çç 
new
çç #
ArgumentNullException
çç /
(
çç/ 0
nameof
çç0 6
(
çç6 7
authorization
çç7 D
)
ççD E
)
ççE F
;
ççF G
}
éé 
return
êê 
new
êê 
	ValueTask
êê  
<
êê  !
string
êê! '
>
êê' (
(
êê( )
authorization
êê) 6
.
êê6 7
Id
êê7 9
.
êê9 :
ToString
êê: B
(
êêB C
CultureInfo
êêC N
.
êêN O
InvariantCulture
êêO _
)
êê_ `
)
êê` a
;
êêa b
}
ëë 	
public
îî 
virtual
îî 
	ValueTask
îî  
<
îî  !!
ImmutableDictionary
îî! 4
<
îî4 5
string
îî5 ;
,
îî; <
JsonElement
îî= H
>
îîH I
>
îîI J 
GetPropertiesAsync
îîK ]
(
îî] ^
TAuthorization
îî^ l
authorization
îîm z
,
îîz { 
CancellationTokenîî| ç!
cancellationTokenîîé ü
)îîü †
{
ïï 	
if
ññ 
(
ññ 
authorization
ññ 
==
ññ  
null
ññ! %
)
ññ% &
{
óó 
throw
òò 
new
òò #
ArgumentNullException
òò /
(
òò/ 0
nameof
òò0 6
(
òò6 7
authorization
òò7 D
)
òòD E
)
òòE F
;
òòF G
}
ôô 
if
õõ 
(
õõ 
authorization
õõ 
.
õõ 

Properties
õõ (
==
õõ) +
null
õõ, 0
)
õõ0 1
{
úú 
return
ùù 
new
ùù 
	ValueTask
ùù $
<
ùù$ %!
ImmutableDictionary
ùù% 8
<
ùù8 9
string
ùù9 ?
,
ùù? @
JsonElement
ùùA L
>
ùùL M
>
ùùM N
(
ùùN O!
ImmutableDictionary
ùùO b
.
ùùb c
Create
ùùc i
<
ùùi j
string
ùùj p
,
ùùp q
JsonElement
ùùr }
>
ùù} ~
(
ùù~ 
)ùù Ä
)ùùÄ Å
;ùùÅ Ç
}
ûû 
return
†† 
new
†† 
	ValueTask
††  
<
††  !!
ImmutableDictionary
††! 4
<
††4 5
string
††5 ;
,
††; <
JsonElement
††= H
>
††H I
>
††I J
(
††J K
JsonSerializer
°° 
.
°° 
Deserialize
°° *
<
°°* +!
ImmutableDictionary
°°+ >
<
°°> ?
string
°°? E
,
°°E F
JsonElement
°°G R
>
°°R S
>
°°S T
(
°°T U
authorization
°°U b
.
°°b c

Properties
°°c m
.
°°m n
ToString
°°n v
(
°°v w
)
°°w x
)
°°x y
)
°°y z
;
°°z {
}
¢¢ 	
public
•• 
virtual
•• 
	ValueTask
••  
<
••  !
ImmutableArray
••! /
<
••/ 0
string
••0 6
>
••6 7
>
••7 8
GetScopesAsync
••9 G
(
••G H
TAuthorization
••H V
authorization
••W d
,
••d e
CancellationToken
••f w 
cancellationToken••x â
)••â ä
{
¶¶ 	
if
ßß 
(
ßß 
authorization
ßß 
==
ßß  
null
ßß! %
)
ßß% &
{
®® 
throw
©© 
new
©© #
ArgumentNullException
©© /
(
©©/ 0
nameof
©©0 6
(
©©6 7
authorization
©©7 D
)
©©D E
)
©©E F
;
©©F G
}
™™ 
return
¨¨ 
new
¨¨ 
	ValueTask
¨¨  
<
¨¨  !
ImmutableArray
¨¨! /
<
¨¨/ 0
string
¨¨0 6
>
¨¨6 7
>
¨¨7 8
(
¨¨8 9
authorization
¨¨9 F
.
¨¨F G
Scopes
¨¨G M
)
¨¨M N
;
¨¨N O
}
≠≠ 	
public
∞∞ 
virtual
∞∞ 
	ValueTask
∞∞  
<
∞∞  !
string
∞∞! '
>
∞∞' (
GetStatusAsync
∞∞) 7
(
∞∞7 8
TAuthorization
∞∞8 F
authorization
∞∞G T
,
∞∞T U
CancellationToken
∞∞V g
cancellationToken
∞∞h y
)
∞∞y z
{
±± 	
if
≤≤ 
(
≤≤ 
authorization
≤≤ 
==
≤≤  
null
≤≤! %
)
≤≤% &
{
≥≥ 
throw
¥¥ 
new
¥¥ #
ArgumentNullException
¥¥ /
(
¥¥/ 0
nameof
¥¥0 6
(
¥¥6 7
authorization
¥¥7 D
)
¥¥D E
)
¥¥E F
;
¥¥F G
}
µµ 
return
∑∑ 
new
∑∑ 
	ValueTask
∑∑  
<
∑∑  !
string
∑∑! '
>
∑∑' (
(
∑∑( )
authorization
∑∑) 6
.
∑∑6 7
Status
∑∑7 =
)
∑∑= >
;
∑∑> ?
}
∏∏ 	
public
ªª 
virtual
ªª 
	ValueTask
ªª  
<
ªª  !
string
ªª! '
>
ªª' (
GetSubjectAsync
ªª) 8
(
ªª8 9
TAuthorization
ªª9 G
authorization
ªªH U
,
ªªU V
CancellationToken
ªªW h
cancellationToken
ªªi z
)
ªªz {
{
ºº 	
if
ΩΩ 
(
ΩΩ 
authorization
ΩΩ 
==
ΩΩ  
null
ΩΩ! %
)
ΩΩ% &
{
ææ 
throw
øø 
new
øø #
ArgumentNullException
øø /
(
øø/ 0
nameof
øø0 6
(
øø6 7
authorization
øø7 D
)
øøD E
)
øøE F
;
øøF G
}
¿¿ 
return
¬¬ 
new
¬¬ 
	ValueTask
¬¬  
<
¬¬  !
string
¬¬! '
>
¬¬' (
(
¬¬( )
authorization
¬¬) 6
.
¬¬6 7
Subject
¬¬7 >
)
¬¬> ?
;
¬¬? @
}
√√ 	
public
∆∆ 
virtual
∆∆ 
	ValueTask
∆∆  
<
∆∆  !
string
∆∆! '
>
∆∆' (
GetTypeAsync
∆∆) 5
(
∆∆5 6
TAuthorization
∆∆6 D
authorization
∆∆E R
,
∆∆R S
CancellationToken
∆∆T e
cancellationToken
∆∆f w
)
∆∆w x
{
«« 	
if
»» 
(
»» 
authorization
»» 
==
»»  
null
»»! %
)
»»% &
{
…… 
throw
   
new
   #
ArgumentNullException
   /
(
  / 0
nameof
  0 6
(
  6 7
authorization
  7 D
)
  D E
)
  E F
;
  F G
}
ÀÀ 
return
ÕÕ 
new
ÕÕ 
	ValueTask
ÕÕ  
<
ÕÕ  !
string
ÕÕ! '
>
ÕÕ' (
(
ÕÕ( )
authorization
ÕÕ) 6
.
ÕÕ6 7
Type
ÕÕ7 ;
)
ÕÕ; <
;
ÕÕ< =
}
ŒŒ 	
public
—— 
virtual
—— 
	ValueTask
——  
<
——  !
TAuthorization
——! /
>
——/ 0
InstantiateAsync
——1 A
(
——A B
CancellationToken
——B S
cancellationToken
——T e
)
——e f
=>
““ 
new
““ 
	ValueTask
““ 
<
““ 
TAuthorization
““ +
>
““+ ,
(
““, -
new
““- 0
TAuthorization
““1 ?
{
““@ A
AuthorizationId
““B Q
=
““R S
Guid
““T X
.
““X Y
NewGuid
““Y `
(
““` a
)
““a b
.
““b c
ToString
““c k
(
““k l
$str
““l o
)
““o p
}
““q r
)
““r s
;
““s t
public
’’ 
virtual
’’ 
IAsyncEnumerable
’’ '
<
’’' (
TAuthorization
’’( 6
>
’’6 7
	ListAsync
’’8 A
(
’’A B
int
’’B E
?
’’E F
count
’’G L
,
’’L M
int
’’N Q
?
’’Q R
offset
’’S Y
,
’’Y Z
CancellationToken
’’[ l
cancellationToken
’’m ~
)
’’~ 
{
÷÷ 	
var
◊◊ 
query
◊◊ 
=
◊◊ 
_session
◊◊  
.
◊◊  !
Query
◊◊! &
<
◊◊& '
TAuthorization
◊◊' 5
>
◊◊5 6
(
◊◊6 7
)
◊◊7 8
;
◊◊8 9
if
ŸŸ 
(
ŸŸ 
offset
ŸŸ 
.
ŸŸ 
HasValue
ŸŸ 
)
ŸŸ  
{
⁄⁄ 
query
€€ 
=
€€ 
query
€€ 
.
€€ 
Skip
€€ "
(
€€" #
offset
€€# )
.
€€) *
Value
€€* /
)
€€/ 0
;
€€0 1
}
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
count
ﬁﬁ 
.
ﬁﬁ 
HasValue
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
query
‡‡ 
=
‡‡ 
query
‡‡ 
.
‡‡ 
Take
‡‡ "
(
‡‡" #
count
‡‡# (
.
‡‡( )
Value
‡‡) .
)
‡‡. /
;
‡‡/ 0
}
·· 
return
„„ 
query
„„ 
.
„„ 
ToAsyncEnumerable
„„ *
(
„„* +
)
„„+ ,
;
„„, -
}
‰‰ 	
public
ÁÁ 
virtual
ÁÁ 
IAsyncEnumerable
ÁÁ '
<
ÁÁ' (
TResult
ÁÁ( /
>
ÁÁ/ 0
	ListAsync
ÁÁ1 :
<
ÁÁ: ;
TState
ÁÁ; A
,
ÁÁA B
TResult
ÁÁC J
>
ÁÁJ K
(
ÁÁK L
Func
ËË 
<
ËË 

IQueryable
ËË 
<
ËË 
TAuthorization
ËË *
>
ËË* +
,
ËË+ ,
TState
ËË- 3
,
ËË3 4

IQueryable
ËË5 ?
<
ËË? @
TResult
ËË@ G
>
ËËG H
>
ËËH I
query
ËËJ O
,
ËËO P
TState
ÈÈ 
state
ÈÈ 
,
ÈÈ 
CancellationToken
ÈÈ +
cancellationToken
ÈÈ, =
)
ÈÈ= >
=>
ÍÍ 
throw
ÍÍ 
new
ÍÍ #
NotSupportedException
ÍÍ .
(
ÍÍ. /
)
ÍÍ/ 0
;
ÍÍ0 1
public
ÌÌ 
virtual
ÌÌ 
async
ÌÌ 
	ValueTask
ÌÌ &

PruneAsync
ÌÌ' 1
(
ÌÌ1 2
DateTimeOffset
ÌÌ2 @
	threshold
ÌÌA J
,
ÌÌJ K
CancellationToken
ÌÌL ]
cancellationToken
ÌÌ^ o
)
ÌÌo p
{
ÓÓ 	
IList
ÛÛ 
<
ÛÛ 
	Exception
ÛÛ 
>
ÛÛ 

exceptions
ÛÛ '
=
ÛÛ( )
null
ÛÛ* .
;
ÛÛ. /
for
ıı 
(
ıı 
var
ıı 
offset
ıı 
=
ıı 
$num
ıı 
;
ıı  
offset
ıı! '
<
ıı( )
$num
ıı* 1
;
ıı1 2
offset
ıı3 9
+=
ıı: <
$num
ıı= B
)
ııB C
{
ˆˆ 
cancellationToken
˜˜ !
.
˜˜! "*
ThrowIfCancellationRequested
˜˜" >
(
˜˜> ?
)
˜˜? @
;
˜˜@ A
var
˘˘ 
authorizations
˘˘ "
=
˘˘# $
await
˘˘% *
_session
˘˘+ 3
.
˘˘3 4
Query
˘˘4 9
<
˘˘9 :
TAuthorization
˘˘: H
,
˘˘H I&
OpenIdAuthorizationIndex
˘˘J b
>
˘˘b c
(
˘˘c d
authorization
˙˙ !
=>
˙˙" $
authorization
˙˙% 2
.
˙˙2 3
CreationDate
˙˙3 ?
<
˙˙@ A
	threshold
˙˙B K
.
˙˙K L
UtcDateTime
˙˙L W
&&
˙˙X Z
(
˚˚$ %
authorization
˚˚% 2
.
˚˚2 3
Status
˚˚3 9
!=
˚˚: <!
OpenIddictConstants
˚˚= P
.
˚˚P Q
Statuses
˚˚Q Y
.
˚˚Y Z
Valid
˚˚Z _
||
˚˚` b
(
¸¸$ %
authorization
¸¸% 2
.
¸¸2 3
Type
¸¸3 7
==
¸¸8 :!
OpenIddictConstants
¸¸; N
.
¸¸N O 
AuthorizationTypes
¸¸O a
.
¸¸a b
AdHoc
¸¸b g
&&
¸¸h j
authorization
˝˝% 2
.
˝˝2 3
AuthorizationId
˝˝3 B
.
˝˝B C
IsNotIn
˝˝C J
<
˝˝J K
OpenIdTokenIndex
˝˝K [
>
˝˝[ \
(
˝˝\ ]
token
˛˛) .
=>
˛˛/ 1
token
˛˛2 7
.
˛˛7 8
AuthorizationId
˛˛8 G
,
˛˛G H
token
ˇˇ) .
=>
ˇˇ/ 1
token
ˇˇ2 7
.
ˇˇ7 8
Id
ˇˇ8 :
!=
ˇˇ; =
$num
ˇˇ> ?
)
ˇˇ? @
)
ˇˇ@ A
)
ˇˇA B
)
ˇˇB C
.
ˇˇC D
Skip
ˇˇD H
(
ˇˇH I
offset
ˇˇI O
)
ˇˇO P
.
ˇˇP Q
Take
ˇˇQ U
(
ˇˇU V
$num
ˇˇV [
)
ˇˇ[ \
.
ˇˇ\ ]
	ListAsync
ˇˇ] f
(
ˇˇf g
)
ˇˇg h
;
ˇˇh i
foreach
ÅÅ 
(
ÅÅ 
var
ÅÅ 
authorization
ÅÅ *
in
ÅÅ+ -
authorizations
ÅÅ. <
)
ÅÅ< =
{
ÇÇ 
_session
ÉÉ 
.
ÉÉ 
Delete
ÉÉ #
(
ÉÉ# $
authorization
ÉÉ$ 1
)
ÉÉ1 2
;
ÉÉ2 3
}
ÑÑ 
try
ÜÜ 
{
áá 
await
àà 
_session
àà "
.
àà" #
CommitAsync
àà# .
(
àà. /
)
àà/ 0
;
àà0 1
}
ââ 
catch
ää 
(
ää 
	Exception
ää  
	exception
ää! *
)
ää* +
{
ãã 
if
åå 
(
åå 

exceptions
åå "
==
åå# %
null
åå& *
)
åå* +
{
çç 

exceptions
éé "
=
éé# $
new
éé% (
List
éé) -
<
éé- .
	Exception
éé. 7
>
éé7 8
(
éé8 9
capacity
éé9 A
:
ééA B
$num
ééC D
)
ééD E
;
ééE F
}
èè 

exceptions
ëë 
.
ëë 
Add
ëë "
(
ëë" #
	exception
ëë# ,
)
ëë, -
;
ëë- .
}
íí 
}
ìì 
if
ïï 
(
ïï 

exceptions
ïï 
!=
ïï 
null
ïï "
)
ïï" #
{
ññ 
throw
óó 
new
óó  
AggregateException
óó ,
(
óó, -
$str
óó- ^
,
óó^ _

exceptions
óó` j
)
óój k
;
óók l
}
òò 
}
ôô 	
public
úú 
virtual
úú 
	ValueTask
úú  #
SetApplicationIdAsync
úú! 6
(
úú6 7
TAuthorization
úú7 E
authorization
úúF S
,
úúS T
string
ùù 

identifier
ùù 
,
ùù 
CancellationToken
ùù 0
cancellationToken
ùù1 B
)
ùùB C
{
ûû 	
if
üü 
(
üü 
authorization
üü 
==
üü  
null
üü! %
)
üü% &
{
†† 
throw
°° 
new
°° #
ArgumentNullException
°° /
(
°°/ 0
nameof
°°0 6
(
°°6 7
authorization
°°7 D
)
°°D E
)
°°E F
;
°°F G
}
¢¢ 
if
§§ 
(
§§ 
string
§§ 
.
§§ 
IsNullOrEmpty
§§ $
(
§§$ %

identifier
§§% /
)
§§/ 0
)
§§0 1
{
•• 
authorization
¶¶ 
.
¶¶ 
ApplicationId
¶¶ +
=
¶¶, -
null
¶¶. 2
;
¶¶2 3
}
ßß 
else
®® 
{
©© 
authorization
™™ 
.
™™ 
ApplicationId
™™ +
=
™™, -

identifier
™™. 8
;
™™8 9
}
´´ 
return
≠≠ 
default
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ 
	ValueTask
∞∞ "
SetCreationDateAsync
∞∞ -
(
∞∞- .
TAuthorization
∞∞. <
authorization
∞∞= J
,
∞∞J K
DateTimeOffset
∞∞L Z
?
∞∞Z [
date
∞∞\ `
,
∞∞` a
CancellationToken
∞∞b s 
cancellationToken∞∞t Ö
)∞∞Ö Ü
{
±± 	
if
≤≤ 
(
≤≤ 
authorization
≤≤ 
==
≤≤  
null
≤≤! %
)
≤≤% &
{
≥≥ 
throw
¥¥ 
new
¥¥ #
ArgumentNullException
¥¥ /
(
¥¥/ 0
nameof
¥¥0 6
(
¥¥6 7
authorization
¥¥7 D
)
¥¥D E
)
¥¥E F
;
¥¥F G
}
µµ 
authorization
∑∑ 
.
∑∑ 
CreationDate
∑∑ &
=
∑∑' (
date
∑∑) -
?
∑∑- .
.
∑∑. /
UtcDateTime
∑∑/ :
;
∑∑: ;
return
ππ 
default
ππ 
;
ππ 
}
∫∫ 	
public
ΩΩ 
virtual
ΩΩ 
	ValueTask
ΩΩ   
SetPropertiesAsync
ΩΩ! 3
(
ΩΩ3 4
TAuthorization
ΩΩ4 B
authorization
ΩΩC P
,
ΩΩP Q!
ImmutableDictionary
ΩΩR e
<
ΩΩe f
string
ΩΩf l
,
ΩΩl m
JsonElement
ΩΩn y
>
ΩΩy z

propertiesΩΩ{ Ö
,ΩΩÖ Ü!
CancellationTokenΩΩá ò!
cancellationTokenΩΩô ™
)ΩΩ™ ´
{
ææ 	
if
øø 
(
øø 
authorization
øø 
==
øø  
null
øø! %
)
øø% &
{
¿¿ 
throw
¡¡ 
new
¡¡ #
ArgumentNullException
¡¡ /
(
¡¡/ 0
nameof
¡¡0 6
(
¡¡6 7
authorization
¡¡7 D
)
¡¡D E
)
¡¡E F
;
¡¡F G
}
¬¬ 
if
ƒƒ 
(
ƒƒ 

properties
ƒƒ 
==
ƒƒ 
null
ƒƒ "
||
ƒƒ# %

properties
ƒƒ& 0
.
ƒƒ0 1
IsEmpty
ƒƒ1 8
)
ƒƒ8 9
{
≈≈ 
authorization
∆∆ 
.
∆∆ 

Properties
∆∆ (
=
∆∆) *
null
∆∆+ /
;
∆∆/ 0
return
»» 
default
»» 
;
»» 
}
…… 
authorization
ÀÀ 
.
ÀÀ 

Properties
ÀÀ $
=
ÀÀ% &
JObject
ÀÀ' .
.
ÀÀ. /
Parse
ÀÀ/ 4
(
ÀÀ4 5
JsonSerializer
ÀÀ5 C
.
ÀÀC D
	Serialize
ÀÀD M
(
ÀÀM N

properties
ÀÀN X
,
ÀÀX Y
new
ÀÀZ ]#
JsonSerializerOptions
ÀÀ^ s
{
ÃÃ 
Encoder
ÕÕ 
=
ÕÕ 
JavaScriptEncoder
ÕÕ +
.
ÕÕ+ ,'
UnsafeRelaxedJsonEscaping
ÕÕ, E
,
ÕÕE F
WriteIndented
ŒŒ 
=
ŒŒ 
false
ŒŒ  %
}
œœ 
)
œœ 
)
œœ 
;
œœ 
return
—— 
default
—— 
;
—— 
}
““ 	
public
’’ 
virtual
’’ 
	ValueTask
’’  
SetScopesAsync
’’! /
(
’’/ 0
TAuthorization
’’0 >
authorization
’’? L
,
’’L M
ImmutableArray
÷÷ 
<
÷÷ 
string
÷÷ !
>
÷÷! "
scopes
÷÷# )
,
÷÷) *
CancellationToken
÷÷+ <
cancellationToken
÷÷= N
)
÷÷N O
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
authorization
ÿÿ 
==
ÿÿ  
null
ÿÿ! %
)
ÿÿ% &
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ #
ArgumentNullException
⁄⁄ /
(
⁄⁄/ 0
nameof
⁄⁄0 6
(
⁄⁄6 7
authorization
⁄⁄7 D
)
⁄⁄D E
)
⁄⁄E F
;
⁄⁄F G
}
€€ 
authorization
›› 
.
›› 
Scopes
››  
=
››! "
scopes
››# )
;
››) *
return
ﬂﬂ 
default
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
„„ 
virtual
„„ 
	ValueTask
„„  
SetStatusAsync
„„! /
(
„„/ 0
TAuthorization
„„0 >
authorization
„„? L
,
„„L M
string
‰‰ 
status
‰‰ 
,
‰‰ 
CancellationToken
‰‰ ,
cancellationToken
‰‰- >
)
‰‰> ?
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
authorization
ÊÊ 
==
ÊÊ  
null
ÊÊ! %
)
ÊÊ% &
{
ÁÁ 
throw
ËË 
new
ËË #
ArgumentNullException
ËË /
(
ËË/ 0
nameof
ËË0 6
(
ËË6 7
authorization
ËË7 D
)
ËËD E
)
ËËE F
;
ËËF G
}
ÈÈ 
authorization
ÎÎ 
.
ÎÎ 
Status
ÎÎ  
=
ÎÎ! "
status
ÎÎ# )
;
ÎÎ) *
return
ÌÌ 
default
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
public
ÒÒ 
virtual
ÒÒ 
	ValueTask
ÒÒ  
SetSubjectAsync
ÒÒ! 0
(
ÒÒ0 1
TAuthorization
ÒÒ1 ?
authorization
ÒÒ@ M
,
ÒÒM N
string
ÚÚ 
subject
ÚÚ 
,
ÚÚ 
CancellationToken
ÚÚ -
cancellationToken
ÚÚ. ?
)
ÚÚ? @
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
authorization
ÙÙ 
==
ÙÙ  
null
ÙÙ! %
)
ÙÙ% &
{
ıı 
throw
ˆˆ 
new
ˆˆ #
ArgumentNullException
ˆˆ /
(
ˆˆ/ 0
nameof
ˆˆ0 6
(
ˆˆ6 7
authorization
ˆˆ7 D
)
ˆˆD E
)
ˆˆE F
;
ˆˆF G
}
˜˜ 
authorization
˘˘ 
.
˘˘ 
Subject
˘˘ !
=
˘˘" #
subject
˘˘$ +
;
˘˘+ ,
return
˚˚ 
default
˚˚ 
;
˚˚ 
}
¸¸ 	
public
ˇˇ 
virtual
ˇˇ 
	ValueTask
ˇˇ  
SetTypeAsync
ˇˇ! -
(
ˇˇ- .
TAuthorization
ˇˇ. <
authorization
ˇˇ= J
,
ˇˇJ K
string
ÄÄ 
type
ÄÄ 
,
ÄÄ 
CancellationToken
ÄÄ *
cancellationToken
ÄÄ+ <
)
ÄÄ< =
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
authorization
ÇÇ 
==
ÇÇ  
null
ÇÇ! %
)
ÇÇ% &
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ #
ArgumentNullException
ÑÑ /
(
ÑÑ/ 0
nameof
ÑÑ0 6
(
ÑÑ6 7
authorization
ÑÑ7 D
)
ÑÑD E
)
ÑÑE F
;
ÑÑF G
}
ÖÖ 
authorization
áá 
.
áá 
Type
áá 
=
áá  
type
áá! %
;
áá% &
return
ââ 
default
ââ 
;
ââ 
}
ää 	
public
çç 
virtual
çç 
async
çç 
	ValueTask
çç &
UpdateAsync
çç' 2
(
çç2 3
TAuthorization
çç3 A
authorization
ççB O
,
ççO P
CancellationToken
ççQ b
cancellationToken
ççc t
)
ççt u
{
éé 	
if
èè 
(
èè 
authorization
èè 
==
èè  
null
èè! %
)
èè% &
{
êê 
throw
ëë 
new
ëë #
ArgumentNullException
ëë /
(
ëë/ 0
nameof
ëë0 6
(
ëë6 7
authorization
ëë7 D
)
ëëD E
)
ëëE F
;
ëëF G
}
íí 
cancellationToken
îî 
.
îî *
ThrowIfCancellationRequested
îî :
(
îî: ;
)
îî; <
;
îî< =
_session
ññ 
.
ññ 
Save
ññ 
(
ññ 
authorization
ññ '
,
ññ' (
checkConcurrency
ññ) 9
:
ññ9 :
true
ññ; ?
)
ññ? @
;
ññ@ A
try
òò 
{
ôô 
await
öö 
_session
öö 
.
öö 
CommitAsync
öö *
(
öö* +
)
öö+ ,
;
öö, -
}
õõ 
catch
úú 
(
úú "
ConcurrencyException
úú '
	exception
úú( 1
)
úú1 2
{
ùù 
throw
ûû 
new
ûû "
OpenIddictExceptions
ûû .
.
ûû. /"
ConcurrencyException
ûû/ C
(
ûûC D
new
ûûD G
StringBuilder
ûûH U
(
ûûU V
)
ûûV W
.
üü 

AppendLine
üü 
(
üü  
$str
üü  z
)
üüz {
.
†† 
Append
†† 
(
†† 
$str
†† a
)
††a b
.
°° 
ToString
°° 
(
°° 
)
°° 
,
°°  
	exception
°°! *
)
°°* +
;
°°+ ,
}
¢¢ 
}
££ 	
}
§§ 
}•• Öù
ëD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Stores\OpenIdScopeStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Stores$ *
{ 
public 

class 
OpenIdScopeStore !
<! "
TScope" (
>( )
:* +
IOpenIdScopeStore, =
<= >
TScope> D
>D E
where 
TScope 
: 
OpenIdScope "
," #
new$ '
(' (
)( )
{ 
private 
readonly 
ISession !
_session" *
;* +
public 
OpenIdScopeStore 
(  
ISession  (
session) 0
)0 1
{ 	
_session 
= 
session 
; 
} 	
public   
virtual   
async   
	ValueTask   &
<  & '
long  ' +
>  + ,

CountAsync  - 7
(  7 8
CancellationToken  8 I
cancellationToken  J [
)  [ \
{!! 	
cancellationToken"" 
."" (
ThrowIfCancellationRequested"" :
("": ;
)""; <
;""< =
return$$ 
await$$ 
_session$$ !
.$$! "
Query$$" '
<$$' (
TScope$$( .
>$$. /
($$/ 0
)$$0 1
.$$1 2

CountAsync$$2 <
($$< =
)$$= >
;$$> ?
}%% 	
public(( 
virtual(( 
	ValueTask((  
<((  !
long((! %
>((% &

CountAsync((' 1
<((1 2
TResult((2 9
>((9 :
(((: ;
Func((; ?
<((? @

IQueryable((@ J
<((J K
TScope((K Q
>((Q R
,((R S

IQueryable((T ^
<((^ _
TResult((_ f
>((f g
>((g h
query((i n
,((n o
CancellationToken	((p Å
cancellationToken
((Ç ì
)
((ì î
=>)) 
throw)) 
new)) !
NotSupportedException)) .
()). /
)))/ 0
;))0 1
public,, 
virtual,, 
async,, 
	ValueTask,, &
CreateAsync,,' 2
(,,2 3
TScope,,3 9
scope,,: ?
,,,? @
CancellationToken,,A R
cancellationToken,,S d
),,d e
{-- 	
if.. 
(.. 
scope.. 
==.. 
null.. 
).. 
{// 
throw00 
new00 !
ArgumentNullException00 /
(00/ 0
nameof000 6
(006 7
scope007 <
)00< =
)00= >
;00> ?
}11 
cancellationToken33 
.33 (
ThrowIfCancellationRequested33 :
(33: ;
)33; <
;33< =
_session55 
.55 
Save55 
(55 
scope55 
)55  
;55  !
await66 
_session66 
.66 
CommitAsync66 &
(66& '
)66' (
;66( )
}77 	
public:: 
virtual:: 
async:: 
	ValueTask:: &
DeleteAsync::' 2
(::2 3
TScope::3 9
scope::: ?
,::? @
CancellationToken::A R
cancellationToken::S d
)::d e
{;; 	
if<< 
(<< 
scope<< 
==<< 
null<< 
)<< 
{== 
throw>> 
new>> !
ArgumentNullException>> /
(>>/ 0
nameof>>0 6
(>>6 7
scope>>7 <
)>>< =
)>>= >
;>>> ?
}?? 
cancellationTokenAA 
.AA (
ThrowIfCancellationRequestedAA :
(AA: ;
)AA; <
;AA< =
_sessionCC 
.CC 
DeleteCC 
(CC 
scopeCC !
)CC! "
;CC" #
awaitDD 
_sessionDD 
.DD 
CommitAsyncDD &
(DD& '
)DD' (
;DD( )
}EE 	
publicHH 
virtualHH 
asyncHH 
	ValueTaskHH &
<HH& '
TScopeHH' -
>HH- .
FindByIdAsyncHH/ <
(HH< =
stringHH= C

identifierHHD N
,HHN O
CancellationTokenHHP a
cancellationTokenHHb s
)HHs t
{II 	
ifJJ 
(JJ 
stringJJ 
.JJ 
IsNullOrEmptyJJ $
(JJ$ %

identifierJJ% /
)JJ/ 0
)JJ0 1
{KK 
throwLL 
newLL 
ArgumentExceptionLL +
(LL+ ,
$strLL, U
,LLU V
nameofLLW ]
(LL] ^

identifierLL^ h
)LLh i
)LLi j
;LLj k
}MM 
cancellationTokenOO 
.OO (
ThrowIfCancellationRequestedOO :
(OO: ;
)OO; <
;OO< =
returnQQ 
awaitQQ 
_sessionQQ !
.QQ! "
QueryQQ" '
<QQ' (
TScopeQQ( .
,QQ. /
OpenIdScopeIndexQQ0 @
>QQ@ A
(QQA B
indexQQB G
=>QQH J
indexQQK P
.QQP Q
ScopeIdQQQ X
==QQY [

identifierQQ\ f
)QQf g
.QQg h
FirstOrDefaultAsyncQQh {
(QQ{ |
)QQ| }
;QQ} ~
}RR 	
publicUU 
virtualUU 
asyncUU 
	ValueTaskUU &
<UU& '
TScopeUU' -
>UU- .
FindByNameAsyncUU/ >
(UU> ?
stringUU? E
nameUUF J
,UUJ K
CancellationTokenUUL ]
cancellationTokenUU^ o
)UUo p
{VV 	
ifWW 
(WW 
stringWW 
.WW 
IsNullOrEmptyWW $
(WW$ %
nameWW% )
)WW) *
)WW* +
{XX 
throwYY 
newYY 
ArgumentExceptionYY +
(YY+ ,
$strYY, U
,YYU V
nameofYYW ]
(YY] ^
nameYY^ b
)YYb c
)YYc d
;YYd e
}ZZ 
cancellationToken\\ 
.\\ (
ThrowIfCancellationRequested\\ :
(\\: ;
)\\; <
;\\< =
return^^ 
await^^ 
_session^^ !
.^^! "
Query^^" '
<^^' (
TScope^^( .
,^^. /
OpenIdScopeIndex^^0 @
>^^@ A
(^^A B
index^^B G
=>^^H J
index^^K P
.^^P Q
Name^^Q U
==^^V X
name^^Y ]
)^^] ^
.^^^ _
FirstOrDefaultAsync^^_ r
(^^r s
)^^s t
;^^t u
}__ 	
publicbb 
virtualbb 
IAsyncEnumerablebb '
<bb' (
TScopebb( .
>bb. /
FindByNamesAsyncbb0 @
(bb@ A
ImmutableArraycc 
<cc 
stringcc !
>cc! "
namescc# (
,cc( )
CancellationTokencc* ;
cancellationTokencc< M
)ccM N
{dd 	
ifee 
(ee 
namesee 
.ee 
Anyee 
(ee 
nameee 
=>ee !
stringee" (
.ee( )
IsNullOrEmptyee) 6
(ee6 7
nameee7 ;
)ee; <
)ee< =
)ee= >
{ff 
throwgg 
newgg 
ArgumentExceptiongg +
(gg+ ,
$strgg, R
,ggR S
nameofggT Z
(ggZ [
namesgg[ `
)gg` a
)gga b
;ggb c
}hh 
cancellationTokenjj 
.jj (
ThrowIfCancellationRequestedjj :
(jj: ;
)jj; <
;jj< =
returnll 
_sessionll 
.ll 
Queryll !
<ll! "
TScopell" (
,ll( )
OpenIdScopeIndexll* :
>ll: ;
(ll; <
indexll< A
=>llB D
indexllE J
.llJ K
NamellK O
.llO P
IsInllP T
(llT U
namesllU Z
)llZ [
)ll[ \
.ll\ ]
ToAsyncEnumerablell] n
(lln o
)llo p
;llp q
}mm 	
publicpp 
virtualpp 
asyncpp 
	ValueTaskpp &
<pp& '
TScopepp' -
>pp- .!
FindByPhysicalIdAsyncpp/ D
(ppD E
stringppE K

identifierppL V
,ppV W
CancellationTokenppX i
cancellationTokenppj {
)pp{ |
{qq 	
ifrr 
(rr 
stringrr 
.rr 
IsNullOrEmptyrr $
(rr$ %

identifierrr% /
)rr/ 0
)rr0 1
{ss 
throwtt 
newtt 
ArgumentExceptiontt +
(tt+ ,
$strtt, U
,ttU V
nameofttW ]
(tt] ^

identifiertt^ h
)tth i
)tti j
;ttj k
}uu 
cancellationTokenww 
.ww (
ThrowIfCancellationRequestedww :
(ww: ;
)ww; <
;ww< =
returnyy 
awaityy 
_sessionyy !
.yy! "
GetAsyncyy" *
<yy* +
TScopeyy+ 1
>yy1 2
(yy2 3
intyy3 6
.yy6 7
Parseyy7 <
(yy< =

identifieryy= G
,yyG H
CultureInfoyyI T
.yyT U
InvariantCultureyyU e
)yye f
)yyf g
;yyg h
}zz 	
public}} 
virtual}} 
IAsyncEnumerable}} '
<}}' (
TScope}}( .
>}}. /
FindByResourceAsync}}0 C
(}}C D
string}}D J
resource}}K S
,}}S T
CancellationToken}}U f
cancellationToken}}g x
)}}x y
{~~ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
resource% -
)- .
). /
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
ArgumentException
ÅÅ +
(
ÅÅ+ ,
$str
ÅÅ, S
,
ÅÅS T
nameof
ÅÅU [
(
ÅÅ[ \
resource
ÅÅ\ d
)
ÅÅd e
)
ÅÅe f
;
ÅÅf g
}
ÇÇ 
cancellationToken
ÑÑ 
.
ÑÑ *
ThrowIfCancellationRequested
ÑÑ :
(
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
return
ÜÜ 
_session
ÜÜ 
.
ÜÜ 
Query
ÜÜ !
<
ÜÜ! "
TScope
ÜÜ" (
,
ÜÜ( )(
OpenIdScopeByResourceIndex
ÜÜ* D
>
ÜÜD E
(
ÜÜE F
index
áá 
=>
áá 
index
áá 
.
áá 
Resource
áá '
==
áá( *
resource
áá+ 3
)
áá3 4
.
áá4 5
ToAsyncEnumerable
áá5 F
(
ááF G
)
ááG H
;
ááH I
}
àà 	
public
ãã 
virtual
ãã 
	ValueTask
ãã  
<
ãã  !
TResult
ãã! (
>
ãã( )
GetAsync
ãã* 2
<
ãã2 3
TState
ãã3 9
,
ãã9 :
TResult
ãã; B
>
ããB C
(
ããC D
Func
åå 
<
åå 

IQueryable
åå 
<
åå 
TScope
åå "
>
åå" #
,
åå# $
TState
åå% +
,
åå+ ,

IQueryable
åå- 7
<
åå7 8
TResult
åå8 ?
>
åå? @
>
åå@ A
query
ååB G
,
ååG H
TState
çç 
state
çç 
,
çç 
CancellationToken
çç +
cancellationToken
çç, =
)
çç= >
=>
éé 
throw
éé 
new
éé #
NotSupportedException
éé .
(
éé. /
)
éé/ 0
;
éé0 1
public
ëë 
virtual
ëë 
	ValueTask
ëë  
<
ëë  !
string
ëë! '
>
ëë' (!
GetDescriptionAsync
ëë) <
(
ëë< =
TScope
ëë= C
scope
ëëD I
,
ëëI J
CancellationToken
ëëK \
cancellationToken
ëë] n
)
ëën o
{
íí 	
if
ìì 
(
ìì 
scope
ìì 
==
ìì 
null
ìì 
)
ìì 
{
îî 
throw
ïï 
new
ïï #
ArgumentNullException
ïï /
(
ïï/ 0
nameof
ïï0 6
(
ïï6 7
scope
ïï7 <
)
ïï< =
)
ïï= >
;
ïï> ?
}
ññ 
return
òò 
new
òò 
	ValueTask
òò  
<
òò  !
string
òò! '
>
òò' (
(
òò( )
scope
òò) .
.
òò. /
Description
òò/ :
)
òò: ;
;
òò; <
}
ôô 	
public
úú 
virtual
úú 
	ValueTask
úú  
<
úú  !!
ImmutableDictionary
úú! 4
<
úú4 5
CultureInfo
úú5 @
,
úú@ A
string
úúB H
>
úúH I
>
úúI J"
GetDescriptionsAsync
úúK _
(
úú_ `
TScope
ùù 
scope
ùù 
,
ùù 
CancellationToken
ùù +
cancellationToken
ùù, =
)
ùù= >
{
ûû 	
if
üü 
(
üü 
scope
üü 
==
üü 
null
üü 
)
üü 
{
†† 
throw
°° 
new
°° #
ArgumentNullException
°° /
(
°°/ 0
nameof
°°0 6
(
°°6 7
scope
°°7 <
)
°°< =
)
°°= >
;
°°> ?
}
¢¢ 
if
§§ 
(
§§ 
scope
§§ 
.
§§ 
Descriptions
§§ "
==
§§# %
null
§§& *
)
§§* +
{
•• 
return
¶¶ 
new
¶¶ 
	ValueTask
¶¶ $
<
¶¶$ %!
ImmutableDictionary
¶¶% 8
<
¶¶8 9
CultureInfo
¶¶9 D
,
¶¶D E
string
¶¶F L
>
¶¶L M
>
¶¶M N
(
¶¶N O!
ImmutableDictionary
¶¶O b
.
¶¶b c
Create
¶¶c i
<
¶¶i j
CultureInfo
¶¶j u
,
¶¶u v
string
¶¶w }
>
¶¶} ~
(
¶¶~ 
)¶¶ Ä
)¶¶Ä Å
;¶¶Å Ç
}
ßß 
return
©© 
new
©© 
	ValueTask
©©  
<
©©  !!
ImmutableDictionary
©©! 4
<
©©4 5
CultureInfo
©©5 @
,
©©@ A
string
©©B H
>
©©H I
>
©©I J
(
©©J K
scope
©©K P
.
©©P Q
Descriptions
©©Q ]
)
©©] ^
;
©©^ _
}
™™ 	
public
≠≠ 
virtual
≠≠ 
	ValueTask
≠≠  
<
≠≠  !
string
≠≠! '
>
≠≠' (!
GetDisplayNameAsync
≠≠) <
(
≠≠< =
TScope
≠≠= C
scope
≠≠D I
,
≠≠I J
CancellationToken
≠≠K \
cancellationToken
≠≠] n
)
≠≠n o
{
ÆÆ 	
if
ØØ 
(
ØØ 
scope
ØØ 
==
ØØ 
null
ØØ 
)
ØØ 
{
∞∞ 
throw
±± 
new
±± #
ArgumentNullException
±± /
(
±±/ 0
nameof
±±0 6
(
±±6 7
scope
±±7 <
)
±±< =
)
±±= >
;
±±> ?
}
≤≤ 
return
¥¥ 
new
¥¥ 
	ValueTask
¥¥  
<
¥¥  !
string
¥¥! '
>
¥¥' (
(
¥¥( )
scope
¥¥) .
.
¥¥. /
DisplayName
¥¥/ :
)
¥¥: ;
;
¥¥; <
}
µµ 	
public
∏∏ 
virtual
∏∏ 
	ValueTask
∏∏  
<
∏∏  !!
ImmutableDictionary
∏∏! 4
<
∏∏4 5
CultureInfo
∏∏5 @
,
∏∏@ A
string
∏∏B H
>
∏∏H I
>
∏∏I J"
GetDisplayNamesAsync
∏∏K _
(
∏∏_ `
TScope
ππ 
scope
ππ 
,
ππ 
CancellationToken
ππ +
cancellationToken
ππ, =
)
ππ= >
{
∫∫ 	
if
ªª 
(
ªª 
scope
ªª 
==
ªª 
null
ªª 
)
ªª 
{
ºº 
throw
ΩΩ 
new
ΩΩ #
ArgumentNullException
ΩΩ /
(
ΩΩ/ 0
nameof
ΩΩ0 6
(
ΩΩ6 7
scope
ΩΩ7 <
)
ΩΩ< =
)
ΩΩ= >
;
ΩΩ> ?
}
ææ 
if
¿¿ 
(
¿¿ 
scope
¿¿ 
.
¿¿ 
DisplayNames
¿¿ "
==
¿¿# %
null
¿¿& *
)
¿¿* +
{
¡¡ 
return
¬¬ 
new
¬¬ 
	ValueTask
¬¬ $
<
¬¬$ %!
ImmutableDictionary
¬¬% 8
<
¬¬8 9
CultureInfo
¬¬9 D
,
¬¬D E
string
¬¬F L
>
¬¬L M
>
¬¬M N
(
¬¬N O!
ImmutableDictionary
¬¬O b
.
¬¬b c
Create
¬¬c i
<
¬¬i j
CultureInfo
¬¬j u
,
¬¬u v
string
¬¬w }
>
¬¬} ~
(
¬¬~ 
)¬¬ Ä
)¬¬Ä Å
;¬¬Å Ç
}
√√ 
return
≈≈ 
new
≈≈ 
	ValueTask
≈≈  
<
≈≈  !!
ImmutableDictionary
≈≈! 4
<
≈≈4 5
CultureInfo
≈≈5 @
,
≈≈@ A
string
≈≈B H
>
≈≈H I
>
≈≈I J
(
≈≈J K
scope
≈≈K P
.
≈≈P Q
DisplayNames
≈≈Q ]
)
≈≈] ^
;
≈≈^ _
}
∆∆ 	
public
…… 
virtual
…… 
	ValueTask
……  
<
……  !
string
……! '
>
……' (

GetIdAsync
……) 3
(
……3 4
TScope
……4 :
scope
……; @
,
……@ A
CancellationToken
……B S
cancellationToken
……T e
)
……e f
{
   	
if
ÀÀ 
(
ÀÀ 
scope
ÀÀ 
==
ÀÀ 
null
ÀÀ 
)
ÀÀ 
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ #
ArgumentNullException
ÕÕ /
(
ÕÕ/ 0
nameof
ÕÕ0 6
(
ÕÕ6 7
scope
ÕÕ7 <
)
ÕÕ< =
)
ÕÕ= >
;
ÕÕ> ?
}
ŒŒ 
return
–– 
new
–– 
	ValueTask
––  
<
––  !
string
––! '
>
––' (
(
––( )
scope
––) .
.
––. /
ScopeId
––/ 6
)
––6 7
;
––7 8
}
—— 	
public
‘‘ 
virtual
‘‘ 
	ValueTask
‘‘  
<
‘‘  !
string
‘‘! '
>
‘‘' (
GetNameAsync
‘‘) 5
(
‘‘5 6
TScope
‘‘6 <
scope
‘‘= B
,
‘‘B C
CancellationToken
‘‘D U
cancellationToken
‘‘V g
)
‘‘g h
{
’’ 	
if
÷÷ 
(
÷÷ 
scope
÷÷ 
==
÷÷ 
null
÷÷ 
)
÷÷ 
{
◊◊ 
throw
ÿÿ 
new
ÿÿ #
ArgumentNullException
ÿÿ /
(
ÿÿ/ 0
nameof
ÿÿ0 6
(
ÿÿ6 7
scope
ÿÿ7 <
)
ÿÿ< =
)
ÿÿ= >
;
ÿÿ> ?
}
ŸŸ 
return
€€ 
new
€€ 
	ValueTask
€€  
<
€€  !
string
€€! '
>
€€' (
(
€€( )
scope
€€) .
.
€€. /
Name
€€/ 3
)
€€3 4
;
€€4 5
}
‹‹ 	
public
ﬂﬂ 
virtual
ﬂﬂ 
	ValueTask
ﬂﬂ  
<
ﬂﬂ  !
string
ﬂﬂ! '
>
ﬂﬂ' ( 
GetPhysicalIdAsync
ﬂﬂ) ;
(
ﬂﬂ; <
TScope
ﬂﬂ< B
scope
ﬂﬂC H
,
ﬂﬂH I
CancellationToken
ﬂﬂJ [
cancellationToken
ﬂﬂ\ m
)
ﬂﬂm n
{
‡‡ 	
if
·· 
(
·· 
scope
·· 
==
·· 
null
·· 
)
·· 
{
‚‚ 
throw
„„ 
new
„„ #
ArgumentNullException
„„ /
(
„„/ 0
nameof
„„0 6
(
„„6 7
scope
„„7 <
)
„„< =
)
„„= >
;
„„> ?
}
‰‰ 
return
ÊÊ 
new
ÊÊ 
	ValueTask
ÊÊ  
<
ÊÊ  !
string
ÊÊ! '
>
ÊÊ' (
(
ÊÊ( )
scope
ÊÊ) .
.
ÊÊ. /
Id
ÊÊ/ 1
.
ÊÊ1 2
ToString
ÊÊ2 :
(
ÊÊ: ;
CultureInfo
ÊÊ; F
.
ÊÊF G
InvariantCulture
ÊÊG W
)
ÊÊW X
)
ÊÊX Y
;
ÊÊY Z
}
ÁÁ 	
public
ÍÍ 
virtual
ÍÍ 
	ValueTask
ÍÍ  
<
ÍÍ  !!
ImmutableDictionary
ÍÍ! 4
<
ÍÍ4 5
string
ÍÍ5 ;
,
ÍÍ; <
JsonElement
ÍÍ= H
>
ÍÍH I
>
ÍÍI J 
GetPropertiesAsync
ÍÍK ]
(
ÍÍ] ^
TScope
ÍÍ^ d
scope
ÍÍe j
,
ÍÍj k
CancellationToken
ÍÍl } 
cancellationTokenÍÍ~ è
)ÍÍè ê
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
scope
ÏÏ 
==
ÏÏ 
null
ÏÏ 
)
ÏÏ 
{
ÌÌ 
throw
ÓÓ 
new
ÓÓ #
ArgumentNullException
ÓÓ /
(
ÓÓ/ 0
nameof
ÓÓ0 6
(
ÓÓ6 7
scope
ÓÓ7 <
)
ÓÓ< =
)
ÓÓ= >
;
ÓÓ> ?
}
ÔÔ 
if
ÒÒ 
(
ÒÒ 
scope
ÒÒ 
.
ÒÒ 

Properties
ÒÒ  
==
ÒÒ! #
null
ÒÒ$ (
)
ÒÒ( )
{
ÚÚ 
return
ÛÛ 
new
ÛÛ 
	ValueTask
ÛÛ $
<
ÛÛ$ %!
ImmutableDictionary
ÛÛ% 8
<
ÛÛ8 9
string
ÛÛ9 ?
,
ÛÛ? @
JsonElement
ÛÛA L
>
ÛÛL M
>
ÛÛM N
(
ÛÛN O!
ImmutableDictionary
ÛÛO b
.
ÛÛb c
Create
ÛÛc i
<
ÛÛi j
string
ÛÛj p
,
ÛÛp q
JsonElement
ÛÛr }
>
ÛÛ} ~
(
ÛÛ~ 
)ÛÛ Ä
)ÛÛÄ Å
;ÛÛÅ Ç
}
ÙÙ 
return
ˆˆ 
new
ˆˆ 
	ValueTask
ˆˆ  
<
ˆˆ  !!
ImmutableDictionary
ˆˆ! 4
<
ˆˆ4 5
string
ˆˆ5 ;
,
ˆˆ; <
JsonElement
ˆˆ= H
>
ˆˆH I
>
ˆˆI J
(
ˆˆJ K
JsonSerializer
˜˜ 
.
˜˜ 
Deserialize
˜˜ *
<
˜˜* +!
ImmutableDictionary
˜˜+ >
<
˜˜> ?
string
˜˜? E
,
˜˜E F
JsonElement
˜˜G R
>
˜˜R S
>
˜˜S T
(
˜˜T U
scope
˜˜U Z
.
˜˜Z [

Properties
˜˜[ e
.
˜˜e f
ToString
˜˜f n
(
˜˜n o
)
˜˜o p
)
˜˜p q
)
˜˜q r
;
˜˜r s
}
¯¯ 	
public
˚˚ 
virtual
˚˚ 
	ValueTask
˚˚  
<
˚˚  !
ImmutableArray
˚˚! /
<
˚˚/ 0
string
˚˚0 6
>
˚˚6 7
>
˚˚7 8
GetResourcesAsync
˚˚9 J
(
˚˚J K
TScope
˚˚K Q
scope
˚˚R W
,
˚˚W X
CancellationToken
˚˚Y j
cancellationToken
˚˚k |
)
˚˚| }
{
¸¸ 	
if
˝˝ 
(
˝˝ 
scope
˝˝ 
==
˝˝ 
null
˝˝ 
)
˝˝ 
{
˛˛ 
throw
ˇˇ 
new
ˇˇ #
ArgumentNullException
ˇˇ /
(
ˇˇ/ 0
nameof
ˇˇ0 6
(
ˇˇ6 7
scope
ˇˇ7 <
)
ˇˇ< =
)
ˇˇ= >
;
ˇˇ> ?
}
ÄÄ 
return
ÇÇ 
new
ÇÇ 
	ValueTask
ÇÇ  
<
ÇÇ  !
ImmutableArray
ÇÇ! /
<
ÇÇ/ 0
string
ÇÇ0 6
>
ÇÇ6 7
>
ÇÇ7 8
(
ÇÇ8 9
scope
ÇÇ9 >
.
ÇÇ> ?
	Resources
ÇÇ? H
)
ÇÇH I
;
ÇÇI J
}
ÉÉ 	
public
ÜÜ 
virtual
ÜÜ 
	ValueTask
ÜÜ  
<
ÜÜ  !
TScope
ÜÜ! '
>
ÜÜ' (
InstantiateAsync
ÜÜ) 9
(
ÜÜ9 :
CancellationToken
ÜÜ: K
cancellationToken
ÜÜL ]
)
ÜÜ] ^
=>
áá 
new
áá 
	ValueTask
áá 
<
áá 
TScope
áá #
>
áá# $
(
áá$ %
new
áá% (
TScope
áá) /
{
áá0 1
ScopeId
áá2 9
=
áá: ;
Guid
áá< @
.
áá@ A
NewGuid
ááA H
(
ááH I
)
ááI J
.
ááJ K
ToString
ááK S
(
ááS T
$str
ááT W
)
ááW X
}
ááY Z
)
ááZ [
;
áá[ \
public
ää 
virtual
ää 
IAsyncEnumerable
ää '
<
ää' (
TScope
ää( .
>
ää. /
	ListAsync
ää0 9
(
ää9 :
int
ää: =
?
ää= >
count
ää? D
,
ääD E
int
ääF I
?
ääI J
offset
ääK Q
,
ääQ R
CancellationToken
ääS d
cancellationToken
ääe v
)
ääv w
{
ãã 	
var
åå 
query
åå 
=
åå 
_session
åå  
.
åå  !
Query
åå! &
<
åå& '
TScope
åå' -
>
åå- .
(
åå. /
)
åå/ 0
;
åå0 1
if
éé 
(
éé 
offset
éé 
.
éé 
HasValue
éé 
)
éé  
{
èè 
query
êê 
=
êê 
query
êê 
.
êê 
Skip
êê "
(
êê" #
offset
êê# )
.
êê) *
Value
êê* /
)
êê/ 0
;
êê0 1
}
ëë 
if
ìì 
(
ìì 
count
ìì 
.
ìì 
HasValue
ìì 
)
ìì 
{
îî 
query
ïï 
=
ïï 
query
ïï 
.
ïï 
Take
ïï "
(
ïï" #
count
ïï# (
.
ïï( )
Value
ïï) .
)
ïï. /
;
ïï/ 0
}
ññ 
return
òò 
query
òò 
.
òò 
ToAsyncEnumerable
òò *
(
òò* +
)
òò+ ,
;
òò, -
}
ôô 	
public
úú 
virtual
úú 
IAsyncEnumerable
úú '
<
úú' (
TResult
úú( /
>
úú/ 0
	ListAsync
úú1 :
<
úú: ;
TState
úú; A
,
úúA B
TResult
úúC J
>
úúJ K
(
úúK L
Func
ùù 
<
ùù 

IQueryable
ùù 
<
ùù 
TScope
ùù "
>
ùù" #
,
ùù# $
TState
ùù% +
,
ùù+ ,

IQueryable
ùù- 7
<
ùù7 8
TResult
ùù8 ?
>
ùù? @
>
ùù@ A
query
ùùB G
,
ùùG H
TState
ûû 
state
ûû 
,
ûû 
CancellationToken
ûû +
cancellationToken
ûû, =
)
ûû= >
=>
üü 
throw
üü 
new
üü #
NotSupportedException
üü .
(
üü. /
)
üü/ 0
;
üü0 1
public
¢¢ 
virtual
¢¢ 
	ValueTask
¢¢  !
SetDescriptionAsync
¢¢! 4
(
¢¢4 5
TScope
¢¢5 ;
scope
¢¢< A
,
¢¢A B
string
¢¢C I
description
¢¢J U
,
¢¢U V
CancellationToken
¢¢W h
cancellationToken
¢¢i z
)
¢¢z {
{
££ 	
if
§§ 
(
§§ 
scope
§§ 
==
§§ 
null
§§ 
)
§§ 
{
•• 
throw
¶¶ 
new
¶¶ #
ArgumentNullException
¶¶ /
(
¶¶/ 0
nameof
¶¶0 6
(
¶¶6 7
scope
¶¶7 <
)
¶¶< =
)
¶¶= >
;
¶¶> ?
}
ßß 
scope
©© 
.
©© 
Description
©© 
=
©© 
description
©©  +
;
©©+ ,
return
´´ 
default
´´ 
;
´´ 
}
¨¨ 	
public
ØØ 
virtual
ØØ 
	ValueTask
ØØ  "
SetDescriptionsAsync
ØØ! 5
(
ØØ5 6
TScope
ØØ6 <
scope
ØØ= B
,
ØØB C!
ImmutableDictionary
∞∞ 
<
∞∞  
CultureInfo
∞∞  +
,
∞∞+ ,
string
∞∞- 3
>
∞∞3 4
descriptions
∞∞5 A
,
∞∞A B
CancellationToken
∞∞C T
cancellationToken
∞∞U f
)
∞∞f g
{
±± 	
if
≤≤ 
(
≤≤ 
scope
≤≤ 
==
≤≤ 
null
≤≤ 
)
≤≤ 
{
≥≥ 
throw
¥¥ 
new
¥¥ #
ArgumentNullException
¥¥ /
(
¥¥/ 0
nameof
¥¥0 6
(
¥¥6 7
scope
¥¥7 <
)
¥¥< =
)
¥¥= >
;
¥¥> ?
}
µµ 
scope
∑∑ 
.
∑∑ 
Descriptions
∑∑ 
=
∑∑  
descriptions
∑∑! -
;
∑∑- .
return
ππ 
default
ππ 
;
ππ 
}
∫∫ 	
public
ΩΩ 
virtual
ΩΩ 
	ValueTask
ΩΩ  !
SetDisplayNameAsync
ΩΩ! 4
(
ΩΩ4 5
TScope
ΩΩ5 ;
scope
ΩΩ< A
,
ΩΩA B
string
ΩΩC I
name
ΩΩJ N
,
ΩΩN O
CancellationToken
ΩΩP a
cancellationToken
ΩΩb s
)
ΩΩs t
{
ææ 	
if
øø 
(
øø 
scope
øø 
==
øø 
null
øø 
)
øø 
{
¿¿ 
throw
¡¡ 
new
¡¡ #
ArgumentNullException
¡¡ /
(
¡¡/ 0
nameof
¡¡0 6
(
¡¡6 7
scope
¡¡7 <
)
¡¡< =
)
¡¡= >
;
¡¡> ?
}
¬¬ 
scope
ƒƒ 
.
ƒƒ 
DisplayName
ƒƒ 
=
ƒƒ 
name
ƒƒ  $
;
ƒƒ$ %
return
∆∆ 
default
∆∆ 
;
∆∆ 
}
«« 	
public
   
virtual
   
	ValueTask
    "
SetDisplayNamesAsync
  ! 5
(
  5 6
TScope
  6 <
scope
  = B
,
  B C!
ImmutableDictionary
ÀÀ 
<
ÀÀ  
CultureInfo
ÀÀ  +
,
ÀÀ+ ,
string
ÀÀ- 3
>
ÀÀ3 4
names
ÀÀ5 :
,
ÀÀ: ;
CancellationToken
ÀÀ< M
cancellationToken
ÀÀN _
)
ÀÀ_ `
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
scope
ÕÕ 
==
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ŒŒ 
throw
œœ 
new
œœ #
ArgumentNullException
œœ /
(
œœ/ 0
nameof
œœ0 6
(
œœ6 7
scope
œœ7 <
)
œœ< =
)
œœ= >
;
œœ> ?
}
–– 
scope
““ 
.
““ 
DisplayNames
““ 
=
““  
names
““! &
;
““& '
return
‘‘ 
default
‘‘ 
;
‘‘ 
}
’’ 	
public
ÿÿ 
virtual
ÿÿ 
	ValueTask
ÿÿ  
SetNameAsync
ÿÿ! -
(
ÿÿ- .
TScope
ÿÿ. 4
scope
ÿÿ5 :
,
ÿÿ: ;
string
ÿÿ< B
name
ÿÿC G
,
ÿÿG H
CancellationToken
ÿÿI Z
cancellationToken
ÿÿ[ l
)
ÿÿl m
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
scope
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
new
‹‹ #
ArgumentNullException
‹‹ /
(
‹‹/ 0
nameof
‹‹0 6
(
‹‹6 7
scope
‹‹7 <
)
‹‹< =
)
‹‹= >
;
‹‹> ?
}
›› 
scope
ﬂﬂ 
.
ﬂﬂ 
Name
ﬂﬂ 
=
ﬂﬂ 
name
ﬂﬂ 
;
ﬂﬂ 
return
·· 
default
·· 
;
·· 
}
‚‚ 	
public
ÂÂ 
virtual
ÂÂ 
	ValueTask
ÂÂ   
SetPropertiesAsync
ÂÂ! 3
(
ÂÂ3 4
TScope
ÂÂ4 :
scope
ÂÂ; @
,
ÂÂ@ A!
ImmutableDictionary
ÂÂB U
<
ÂÂU V
string
ÂÂV \
,
ÂÂ\ ]
JsonElement
ÂÂ^ i
>
ÂÂi j

properties
ÂÂk u
,
ÂÂu v 
CancellationTokenÂÂw à!
cancellationTokenÂÂâ ö
)ÂÂö õ
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
scope
ÁÁ 
==
ÁÁ 
null
ÁÁ 
)
ÁÁ 
{
ËË 
throw
ÈÈ 
new
ÈÈ #
ArgumentNullException
ÈÈ /
(
ÈÈ/ 0
nameof
ÈÈ0 6
(
ÈÈ6 7
scope
ÈÈ7 <
)
ÈÈ< =
)
ÈÈ= >
;
ÈÈ> ?
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 

properties
ÏÏ 
==
ÏÏ 
null
ÏÏ "
||
ÏÏ# %

properties
ÏÏ& 0
.
ÏÏ0 1
IsEmpty
ÏÏ1 8
)
ÏÏ8 9
{
ÌÌ 
scope
ÓÓ 
.
ÓÓ 

Properties
ÓÓ  
=
ÓÓ! "
null
ÓÓ# '
;
ÓÓ' (
return
 
default
 
;
 
}
ÒÒ 
scope
ÛÛ 
.
ÛÛ 

Properties
ÛÛ 
=
ÛÛ 
JObject
ÛÛ &
.
ÛÛ& '
Parse
ÛÛ' ,
(
ÛÛ, -
JsonSerializer
ÛÛ- ;
.
ÛÛ; <
	Serialize
ÛÛ< E
(
ÛÛE F

properties
ÛÛF P
,
ÛÛP Q
new
ÛÛR U#
JsonSerializerOptions
ÛÛV k
{
ÙÙ 
Encoder
ıı 
=
ıı 
JavaScriptEncoder
ıı +
.
ıı+ ,'
UnsafeRelaxedJsonEscaping
ıı, E
,
ııE F
WriteIndented
ˆˆ 
=
ˆˆ 
false
ˆˆ  %
}
˜˜ 
)
˜˜ 
)
˜˜ 
;
˜˜ 
return
˘˘ 
default
˘˘ 
;
˘˘ 
}
˙˙ 	
public
˝˝ 
virtual
˝˝ 
	ValueTask
˝˝  
SetResourcesAsync
˝˝! 2
(
˝˝2 3
TScope
˝˝3 9
scope
˝˝: ?
,
˝˝? @
ImmutableArray
˝˝A O
<
˝˝O P
string
˝˝P V
>
˝˝V W
	resources
˝˝X a
,
˝˝a b
CancellationToken
˝˝c t 
cancellationToken˝˝u Ü
)˝˝Ü á
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
scope
ˇˇ 
==
ˇˇ 
null
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ #
ArgumentNullException
ÅÅ /
(
ÅÅ/ 0
nameof
ÅÅ0 6
(
ÅÅ6 7
scope
ÅÅ7 <
)
ÅÅ< =
)
ÅÅ= >
;
ÅÅ> ?
}
ÇÇ 
scope
ÑÑ 
.
ÑÑ 
	Resources
ÑÑ 
=
ÑÑ 
	resources
ÑÑ '
;
ÑÑ' (
return
ÜÜ 
default
ÜÜ 
;
ÜÜ 
}
áá 	
public
ää 
virtual
ää 
async
ää 
	ValueTask
ää &
UpdateAsync
ää' 2
(
ää2 3
TScope
ää3 9
scope
ää: ?
,
ää? @
CancellationToken
ääA R
cancellationToken
ääS d
)
ääd e
{
ãã 	
if
åå 
(
åå 
scope
åå 
==
åå 
null
åå 
)
åå 
{
çç 
throw
éé 
new
éé #
ArgumentNullException
éé /
(
éé/ 0
nameof
éé0 6
(
éé6 7
scope
éé7 <
)
éé< =
)
éé= >
;
éé> ?
}
èè 
cancellationToken
ëë 
.
ëë *
ThrowIfCancellationRequested
ëë :
(
ëë: ;
)
ëë; <
;
ëë< =
_session
ìì 
.
ìì 
Save
ìì 
(
ìì 
scope
ìì 
,
ìì  
checkConcurrency
ìì! 1
:
ìì1 2
true
ìì3 7
)
ìì7 8
;
ìì8 9
try
ïï 
{
ññ 
await
óó 
_session
óó 
.
óó 
CommitAsync
óó *
(
óó* +
)
óó+ ,
;
óó, -
}
òò 
catch
ôô 
(
ôô "
ConcurrencyException
ôô '
	exception
ôô( 1
)
ôô1 2
{
öö 
throw
õõ 
new
õõ "
OpenIddictExceptions
õõ .
.
õõ. /"
ConcurrencyException
õõ/ C
(
õõC D
new
õõD G
StringBuilder
õõH U
(
õõU V
)
õõV W
.
úú 

AppendLine
úú 
(
úú  
$str
úú  r
)
úúr s
.
ùù 
Append
ùù 
(
ùù 
$str
ùù Y
)
ùùY Z
.
ûû 
ToString
ûû 
(
ûû 
)
ûû 
,
ûû  
	exception
ûû! *
)
ûû* +
;
ûû+ ,
}
üü 
}
†† 	
}
°° 
}¢¢ Ë‘
ëD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\OrchardCore\src\OrchardCore\OrchardCore.OpenId.Core\YesSql\Stores\OpenIdTokenStore.cs
	namespace 	
OrchardCore
 
. 
OpenId 
. 
YesSql #
.# $
Stores$ *
{ 
public 

class 
OpenIdTokenStore !
<! "
TToken" (
>( )
:* +
IOpenIdTokenStore, =
<= >
TToken> D
>D E
where 
TToken 
: 
OpenIdToken "
," #
new$ '
(' (
)( )
{ 
private 
readonly 
ISession !
_session" *
;* +
public 
OpenIdTokenStore 
(  
ISession  (
session) 0
)0 1
{ 	
_session 
= 
session 
; 
} 	
public!! 
virtual!! 
async!! 
	ValueTask!! &
<!!& '
long!!' +
>!!+ ,

CountAsync!!- 7
(!!7 8
CancellationToken!!8 I
cancellationToken!!J [
)!![ \
{"" 	
cancellationToken## 
.## (
ThrowIfCancellationRequested## :
(##: ;
)##; <
;##< =
return%% 
await%% 
_session%% !
.%%! "
Query%%" '
<%%' (
TToken%%( .
>%%. /
(%%/ 0
)%%0 1
.%%1 2

CountAsync%%2 <
(%%< =
)%%= >
;%%> ?
}&& 	
public)) 
virtual)) 
	ValueTask))  
<))  !
long))! %
>))% &

CountAsync))' 1
<))1 2
TResult))2 9
>))9 :
()): ;
Func)); ?
<))? @

IQueryable))@ J
<))J K
TToken))K Q
>))Q R
,))R S

IQueryable))T ^
<))^ _
TResult))_ f
>))f g
>))g h
query))i n
,))n o
CancellationToken	))p Å
cancellationToken
))Ç ì
)
))ì î
=>** 
throw** 
new** !
NotSupportedException** .
(**. /
)**/ 0
;**0 1
public-- 
virtual-- 
async-- 
	ValueTask-- &
CreateAsync--' 2
(--2 3
TToken--3 9
token--: ?
,--? @
CancellationToken--A R
cancellationToken--S d
)--d e
{.. 	
if// 
(// 
token// 
==// 
null// 
)// 
{00 
throw11 
new11 !
ArgumentNullException11 /
(11/ 0
nameof110 6
(116 7
token117 <
)11< =
)11= >
;11> ?
}22 
cancellationToken44 
.44 (
ThrowIfCancellationRequested44 :
(44: ;
)44; <
;44< =
_session66 
.66 
Save66 
(66 
token66 
)66  
;66  !
await77 
_session77 
.77 
CommitAsync77 &
(77& '
)77' (
;77( )
}88 	
public;; 
virtual;; 
async;; 
	ValueTask;; &
DeleteAsync;;' 2
(;;2 3
TToken;;3 9
token;;: ?
,;;? @
CancellationToken;;A R
cancellationToken;;S d
);;d e
{<< 	
if== 
(== 
token== 
==== 
null== 
)== 
{>> 
throw?? 
new?? !
ArgumentNullException?? /
(??/ 0
nameof??0 6
(??6 7
token??7 <
)??< =
)??= >
;??> ?
}@@ 
cancellationTokenBB 
.BB (
ThrowIfCancellationRequestedBB :
(BB: ;
)BB; <
;BB< =
_sessionDD 
.DD 
DeleteDD 
(DD 
tokenDD !
)DD! "
;DD" #
awaitEE 
_sessionEE 
.EE 
CommitAsyncEE &
(EE& '
)EE' (
;EE( )
}FF 	
publicII 
virtualII 
IAsyncEnumerableII '
<II' (
TTokenII( .
>II. /
	FindAsyncII0 9
(II9 :
stringJJ 
subjectJJ 
,JJ 
stringJJ "
clientJJ# )
,JJ) *
CancellationTokenJJ+ <
cancellationTokenJJ= N
)JJN O
{KK 	
ifLL 
(LL 
stringLL 
.LL 
IsNullOrEmptyLL $
(LL$ %
subjectLL% ,
)LL, -
)LL- .
{MM 
throwNN 
newNN 
ArgumentExceptionNN +
(NN+ ,
$strNN, R
,NNR S
nameofNNT Z
(NNZ [
subjectNN[ b
)NNb c
)NNc d
;NNd e
}OO 
ifQQ 
(QQ 
stringQQ 
.QQ 
IsNullOrEmptyQQ $
(QQ$ %
clientQQ% +
)QQ+ ,
)QQ, -
{RR 
throwSS 
newSS 
ArgumentExceptionSS +
(SS+ ,
$strSS, Q
,SSQ R
nameofSSS Y
(SSY Z
clientSSZ `
)SS` a
)SSa b
;SSb c
}TT 
cancellationTokenVV 
.VV (
ThrowIfCancellationRequestedVV :
(VV: ;
)VV; <
;VV< =
returnXX 
_sessionXX 
.XX 
QueryXX !
<XX! "
TTokenXX" (
,XX( )
OpenIdTokenIndexXX* :
>XX: ;
(XX; <
indexYY 
=>YY 
indexYY 
.YY 
ApplicationIdYY ,
==YY- /
clientYY0 6
&&YY7 9
indexYY: ?
.YY? @
SubjectYY@ G
==YYH J
subjectYYK R
)YYR S
.YYS T
ToAsyncEnumerableYYT e
(YYe f
)YYf g
;YYg h
}ZZ 	
public]] 
virtual]] 
IAsyncEnumerable]] '
<]]' (
TToken]]( .
>]]. /
	FindAsync]]0 9
(]]9 :
string^^ 
subject^^ 
,^^ 
string^^ "
client^^# )
,^^) *
string^^+ 1
status^^2 8
,^^8 9
CancellationToken^^: K
cancellationToken^^L ]
)^^] ^
{__ 	
if`` 
(`` 
string`` 
.`` 
IsNullOrEmpty`` $
(``$ %
subject``% ,
)``, -
)``- .
{aa 
throwbb 
newbb 
ArgumentExceptionbb +
(bb+ ,
$strbb, R
,bbR S
nameofbbT Z
(bbZ [
subjectbb[ b
)bbb c
)bbc d
;bbd e
}cc 
ifee 
(ee 
stringee 
.ee 
IsNullOrEmptyee $
(ee$ %
clientee% +
)ee+ ,
)ee, -
{ff 
throwgg 
newgg 
ArgumentExceptiongg +
(gg+ ,
$strgg, \
,gg\ ]
nameofgg^ d
(ggd e
clientgge k
)ggk l
)ggl m
;ggm n
}hh 
ifjj 
(jj 
stringjj 
.jj 
IsNullOrEmptyjj $
(jj$ %
statusjj% +
)jj+ ,
)jj, -
{kk 
throwll 
newll 
ArgumentExceptionll +
(ll+ ,
$strll, Q
,llQ R
nameofllS Y
(llY Z
statusllZ `
)ll` a
)lla b
;llb c
}mm 
cancellationTokenoo 
.oo (
ThrowIfCancellationRequestedoo :
(oo: ;
)oo; <
;oo< =
returnqq 
_sessionqq 
.qq 
Queryqq !
<qq! "
TTokenqq" (
,qq( )
OpenIdTokenIndexqq* :
>qq: ;
(qq; <
indexrr 
=>rr 
indexrr 
.rr 
ApplicationIdrr ,
==rr- /
clientrr0 6
&&rr7 9
indexrr: ?
.rr? @
Subjectrr@ G
==rrH J
subjectrrK R
&&rrS U
indexrrV [
.rr[ \
Statusrr\ b
==rrc e
statusrrf l
)rrl m
.rrm n
ToAsyncEnumerablerrn 
(	rr Ä
)
rrÄ Å
;
rrÅ Ç
}ss 	
publicvv 
virtualvv 
IAsyncEnumerablevv '
<vv' (
TTokenvv( .
>vv. /
	FindAsyncvv0 9
(vv9 :
stringww 
subjectww 
,ww 
stringww "
clientww# )
,ww) *
stringww+ 1
statusww2 8
,ww8 9
stringww: @
typewwA E
,wwE F
CancellationTokenwwG X
cancellationTokenwwY j
)wwj k
{xx 	
ifyy 
(yy 
stringyy 
.yy 
IsNullOrEmptyyy $
(yy$ %
subjectyy% ,
)yy, -
)yy- .
{zz 
throw{{ 
new{{ 
ArgumentException{{ +
({{+ ,
$str{{, R
,{{R S
nameof{{T Z
({{Z [
subject{{[ b
){{b c
){{c d
;{{d e
}|| 
if~~ 
(~~ 
string~~ 
.~~ 
IsNullOrEmpty~~ $
(~~$ %
client~~% +
)~~+ ,
)~~, -
{ 
throw
ÄÄ 
new
ÄÄ 
ArgumentException
ÄÄ +
(
ÄÄ+ ,
$str
ÄÄ, \
,
ÄÄ\ ]
nameof
ÄÄ^ d
(
ÄÄd e
client
ÄÄe k
)
ÄÄk l
)
ÄÄl m
;
ÄÄm n
}
ÅÅ 
if
ÉÉ 
(
ÉÉ 
string
ÉÉ 
.
ÉÉ 
IsNullOrEmpty
ÉÉ $
(
ÉÉ$ %
status
ÉÉ% +
)
ÉÉ+ ,
)
ÉÉ, -
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
ArgumentException
ÖÖ +
(
ÖÖ+ ,
$str
ÖÖ, Q
,
ÖÖQ R
nameof
ÖÖS Y
(
ÖÖY Z
status
ÖÖZ `
)
ÖÖ` a
)
ÖÖa b
;
ÖÖb c
}
ÜÜ 
if
àà 
(
àà 
string
àà 
.
àà 
IsNullOrEmpty
àà $
(
àà$ %
type
àà% )
)
àà) *
)
àà* +
{
ââ 
throw
ää 
new
ää 
ArgumentException
ää +
(
ää+ ,
$str
ää, O
,
ääO P
nameof
ääQ W
(
ääW X
type
ääX \
)
ää\ ]
)
ää] ^
;
ää^ _
}
ãã 
cancellationToken
çç 
.
çç *
ThrowIfCancellationRequested
çç :
(
çç: ;
)
çç; <
;
çç< =
return
èè 
_session
èè 
.
èè 
Query
èè !
<
èè! "
TToken
èè" (
,
èè( )
OpenIdTokenIndex
èè* :
>
èè: ;
(
èè; <
index
êê 
=>
êê 
index
êê 
.
êê 
ApplicationId
êê ,
==
êê- /
client
êê0 6
&&
êê7 9
index
êê: ?
.
êê? @
Subject
êê@ G
==
êêH J
subject
êêK R
&&
êêS U
index
ëë 
.
ëë 
Status
ëë %
==
ëë& (
status
ëë) /
&&
ëë0 2
index
ëë3 8
.
ëë8 9
Type
ëë9 =
==
ëë> @
type
ëëA E
)
ëëE F
.
ëëF G
ToAsyncEnumerable
ëëG X
(
ëëX Y
)
ëëY Z
;
ëëZ [
}
íí 	
public
ïï 
virtual
ïï 
IAsyncEnumerable
ïï '
<
ïï' (
TToken
ïï( .
>
ïï. /&
FindByApplicationIdAsync
ïï0 H
(
ïïH I
string
ïïI O

identifier
ïïP Z
,
ïïZ [
CancellationToken
ïï\ m
cancellationToken
ïïn 
)ïï Ä
{
ññ 	
if
óó 
(
óó 
string
óó 
.
óó 
IsNullOrEmpty
óó $
(
óó$ %

identifier
óó% /
)
óó/ 0
)
óó0 1
{
òò 
throw
ôô 
new
ôô 
ArgumentException
ôô +
(
ôô+ ,
$str
ôô, U
,
ôôU V
nameof
ôôW ]
(
ôô] ^

identifier
ôô^ h
)
ôôh i
)
ôôi j
;
ôôj k
}
öö 
cancellationToken
úú 
.
úú *
ThrowIfCancellationRequested
úú :
(
úú: ;
)
úú; <
;
úú< =
return
ûû 
_session
ûû 
.
ûû 
Query
ûû !
<
ûû! "
TToken
ûû" (
,
ûû( )
OpenIdTokenIndex
ûû* :
>
ûû: ;
(
ûû; <
index
ûû< A
=>
ûûB D
index
ûûE J
.
ûûJ K
ApplicationId
ûûK X
==
ûûY [

identifier
ûû\ f
)
ûûf g
.
ûûg h
ToAsyncEnumerable
ûûh y
(
ûûy z
)
ûûz {
;
ûû{ |
}
üü 	
public
¢¢ 
virtual
¢¢ 
IAsyncEnumerable
¢¢ '
<
¢¢' (
TToken
¢¢( .
>
¢¢. /(
FindByAuthorizationIdAsync
¢¢0 J
(
¢¢J K
string
¢¢K Q

identifier
¢¢R \
,
¢¢\ ]
CancellationToken
¢¢^ o 
cancellationToken¢¢p Å
)¢¢Å Ç
{
££ 	
if
§§ 
(
§§ 
string
§§ 
.
§§ 
IsNullOrEmpty
§§ $
(
§§$ %

identifier
§§% /
)
§§/ 0
)
§§0 1
{
•• 
throw
¶¶ 
new
¶¶ 
ArgumentException
¶¶ +
(
¶¶+ ,
$str
¶¶, U
,
¶¶U V
nameof
¶¶W ]
(
¶¶] ^

identifier
¶¶^ h
)
¶¶h i
)
¶¶i j
;
¶¶j k
}
ßß 
cancellationToken
©© 
.
©© *
ThrowIfCancellationRequested
©© :
(
©©: ;
)
©©; <
;
©©< =
return
´´ 
_session
´´ 
.
´´ 
Query
´´ !
<
´´! "
TToken
´´" (
,
´´( )
OpenIdTokenIndex
´´* :
>
´´: ;
(
´´; <
index
´´< A
=>
´´B D
index
´´E J
.
´´J K
AuthorizationId
´´K Z
==
´´[ ]

identifier
´´^ h
)
´´h i
.
´´i j
ToAsyncEnumerable
´´j {
(
´´{ |
)
´´| }
;
´´} ~
}
¨¨ 	
public
ØØ 
virtual
ØØ 
async
ØØ 
	ValueTask
ØØ &
<
ØØ& '
TToken
ØØ' -
>
ØØ- .$
FindByReferenceIdAsync
ØØ/ E
(
ØØE F
string
ØØF L

identifier
ØØM W
,
ØØW X
CancellationToken
ØØY j
cancellationToken
ØØk |
)
ØØ| }
{
∞∞ 	
if
±± 
(
±± 
string
±± 
.
±± 
IsNullOrEmpty
±± $
(
±±$ %

identifier
±±% /
)
±±/ 0
)
±±0 1
{
≤≤ 
throw
≥≥ 
new
≥≥ 
ArgumentException
≥≥ +
(
≥≥+ ,
$str
≥≥, U
,
≥≥U V
nameof
≥≥W ]
(
≥≥] ^

identifier
≥≥^ h
)
≥≥h i
)
≥≥i j
;
≥≥j k
}
¥¥ 
cancellationToken
∂∂ 
.
∂∂ *
ThrowIfCancellationRequested
∂∂ :
(
∂∂: ;
)
∂∂; <
;
∂∂< =
return
∏∏ 
await
∏∏ 
_session
∏∏ !
.
∏∏! "
Query
∏∏" '
<
∏∏' (
TToken
∏∏( .
,
∏∏. /
OpenIdTokenIndex
∏∏0 @
>
∏∏@ A
(
∏∏A B
index
∏∏B G
=>
∏∏H J
index
∏∏K P
.
∏∏P Q
ReferenceId
∏∏Q \
==
∏∏] _

identifier
∏∏` j
)
∏∏j k
.
∏∏k l!
FirstOrDefaultAsync
∏∏l 
(∏∏ Ä
)∏∏Ä Å
;∏∏Å Ç
}
ππ 	
public
ºº 
virtual
ºº 
async
ºº 
	ValueTask
ºº &
<
ºº& '
TToken
ºº' -
>
ºº- .
FindByIdAsync
ºº/ <
(
ºº< =
string
ºº= C

identifier
ººD N
,
ººN O
CancellationToken
ººP a
cancellationToken
ººb s
)
ººs t
{
ΩΩ 	
if
ææ 
(
ææ 
string
ææ 
.
ææ 
IsNullOrEmpty
ææ $
(
ææ$ %

identifier
ææ% /
)
ææ/ 0
)
ææ0 1
{
øø 
throw
¿¿ 
new
¿¿ 
ArgumentException
¿¿ +
(
¿¿+ ,
$str
¿¿, U
,
¿¿U V
nameof
¿¿W ]
(
¿¿] ^

identifier
¿¿^ h
)
¿¿h i
)
¿¿i j
;
¿¿j k
}
¡¡ 
cancellationToken
√√ 
.
√√ *
ThrowIfCancellationRequested
√√ :
(
√√: ;
)
√√; <
;
√√< =
return
≈≈ 
await
≈≈ 
_session
≈≈ !
.
≈≈! "
Query
≈≈" '
<
≈≈' (
TToken
≈≈( .
,
≈≈. /
OpenIdTokenIndex
≈≈0 @
>
≈≈@ A
(
≈≈A B
index
≈≈B G
=>
≈≈H J
index
≈≈K P
.
≈≈P Q
TokenId
≈≈Q X
==
≈≈Y [

identifier
≈≈\ f
)
≈≈f g
.
≈≈g h!
FirstOrDefaultAsync
≈≈h {
(
≈≈{ |
)
≈≈| }
;
≈≈} ~
}
∆∆ 	
public
…… 
virtual
…… 
async
…… 
	ValueTask
…… &
<
……& '
TToken
……' -
>
……- .#
FindByPhysicalIdAsync
……/ D
(
……D E
string
……E K

identifier
……L V
,
……V W
CancellationToken
……X i
cancellationToken
……j {
)
……{ |
{
   	
if
ÀÀ 
(
ÀÀ 
string
ÀÀ 
.
ÀÀ 
IsNullOrEmpty
ÀÀ $
(
ÀÀ$ %

identifier
ÀÀ% /
)
ÀÀ/ 0
)
ÀÀ0 1
{
ÃÃ 
throw
ÕÕ 
new
ÕÕ 
ArgumentException
ÕÕ +
(
ÕÕ+ ,
$str
ÕÕ, U
,
ÕÕU V
nameof
ÕÕW ]
(
ÕÕ] ^

identifier
ÕÕ^ h
)
ÕÕh i
)
ÕÕi j
;
ÕÕj k
}
ŒŒ 
cancellationToken
–– 
.
–– *
ThrowIfCancellationRequested
–– :
(
––: ;
)
––; <
;
––< =
return
““ 
await
““ 
_session
““ !
.
““! "
GetAsync
““" *
<
““* +
TToken
““+ 1
>
““1 2
(
““2 3
int
““3 6
.
““6 7
Parse
““7 <
(
““< =

identifier
““= G
,
““G H
CultureInfo
““I T
.
““T U
InvariantCulture
““U e
)
““e f
)
““f g
;
““g h
}
”” 	
public
÷÷ 
virtual
÷÷ 
IAsyncEnumerable
÷÷ '
<
÷÷' (
TToken
÷÷( .
>
÷÷. / 
FindBySubjectAsync
÷÷0 B
(
÷÷B C
string
÷÷C I
subject
÷÷J Q
,
÷÷Q R
CancellationToken
÷÷S d
cancellationToken
÷÷e v
)
÷÷v w
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
string
ÿÿ 
.
ÿÿ 
IsNullOrEmpty
ÿÿ $
(
ÿÿ$ %
subject
ÿÿ% ,
)
ÿÿ, -
)
ÿÿ- .
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ 
ArgumentException
⁄⁄ +
(
⁄⁄+ ,
$str
⁄⁄, R
,
⁄⁄R S
nameof
⁄⁄T Z
(
⁄⁄Z [
subject
⁄⁄[ b
)
⁄⁄b c
)
⁄⁄c d
;
⁄⁄d e
}
€€ 
cancellationToken
›› 
.
›› *
ThrowIfCancellationRequested
›› :
(
››: ;
)
››; <
;
››< =
return
ﬂﬂ 
_session
ﬂﬂ 
.
ﬂﬂ 
Query
ﬂﬂ !
<
ﬂﬂ! "
TToken
ﬂﬂ" (
,
ﬂﬂ( )
OpenIdTokenIndex
ﬂﬂ* :
>
ﬂﬂ: ;
(
ﬂﬂ; <
index
ﬂﬂ< A
=>
ﬂﬂB D
index
ﬂﬂE J
.
ﬂﬂJ K
Subject
ﬂﬂK R
==
ﬂﬂS U
subject
ﬂﬂV ]
)
ﬂﬂ] ^
.
ﬂﬂ^ _
ToAsyncEnumerable
ﬂﬂ_ p
(
ﬂﬂp q
)
ﬂﬂq r
;
ﬂﬂr s
}
‡‡ 	
public
„„ 
virtual
„„ 
	ValueTask
„„  
<
„„  !
TResult
„„! (
>
„„( )
GetAsync
„„* 2
<
„„2 3
TState
„„3 9
,
„„9 :
TResult
„„; B
>
„„B C
(
„„C D
Func
‰‰ 
<
‰‰ 

IQueryable
‰‰ 
<
‰‰ 
TToken
‰‰ "
>
‰‰" #
,
‰‰# $
TState
‰‰% +
,
‰‰+ ,

IQueryable
‰‰- 7
<
‰‰7 8
TResult
‰‰8 ?
>
‰‰? @
>
‰‰@ A
query
‰‰B G
,
‰‰G H
TState
ÂÂ 
state
ÂÂ 
,
ÂÂ 
CancellationToken
ÂÂ +
cancellationToken
ÂÂ, =
)
ÂÂ= >
=>
ÊÊ 
throw
ÊÊ 
new
ÊÊ #
NotSupportedException
ÊÊ .
(
ÊÊ. /
)
ÊÊ/ 0
;
ÊÊ0 1
public
ÈÈ 
virtual
ÈÈ 
	ValueTask
ÈÈ  
<
ÈÈ  !
string
ÈÈ! '
>
ÈÈ' (#
GetApplicationIdAsync
ÈÈ) >
(
ÈÈ> ?
TToken
ÈÈ? E
token
ÈÈF K
,
ÈÈK L
CancellationToken
ÈÈM ^
cancellationToken
ÈÈ_ p
)
ÈÈp q
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
token
ÎÎ 
==
ÎÎ 
null
ÎÎ 
)
ÎÎ 
{
ÏÏ 
throw
ÌÌ 
new
ÌÌ #
ArgumentNullException
ÌÌ /
(
ÌÌ/ 0
nameof
ÌÌ0 6
(
ÌÌ6 7
token
ÌÌ7 <
)
ÌÌ< =
)
ÌÌ= >
;
ÌÌ> ?
}
ÓÓ 
return
 
new
 
	ValueTask
  
<
  !
string
! '
>
' (
(
( )
token
) .
.
. /
ApplicationId
/ <
?
< =
.
= >
ToString
> F
(
F G
CultureInfo
G R
.
R S
InvariantCulture
S c
)
c d
)
d e
;
e f
}
ÒÒ 	
public
ÙÙ 
virtual
ÙÙ 
	ValueTask
ÙÙ  
<
ÙÙ  !
string
ÙÙ! '
>
ÙÙ' (%
GetAuthorizationIdAsync
ÙÙ) @
(
ÙÙ@ A
TToken
ÙÙA G
token
ÙÙH M
,
ÙÙM N
CancellationToken
ÙÙO `
cancellationToken
ÙÙa r
)
ÙÙr s
{
ıı 	
if
ˆˆ 
(
ˆˆ 
token
ˆˆ 
==
ˆˆ 
null
ˆˆ 
)
ˆˆ 
{
˜˜ 
throw
¯¯ 
new
¯¯ #
ArgumentNullException
¯¯ /
(
¯¯/ 0
nameof
¯¯0 6
(
¯¯6 7
token
¯¯7 <
)
¯¯< =
)
¯¯= >
;
¯¯> ?
}
˘˘ 
return
˚˚ 
new
˚˚ 
	ValueTask
˚˚  
<
˚˚  !
string
˚˚! '
>
˚˚' (
(
˚˚( )
token
˚˚) .
.
˚˚. /
AuthorizationId
˚˚/ >
)
˚˚> ?
;
˚˚? @
}
¸¸ 	
public
ˇˇ 
virtual
ˇˇ 
	ValueTask
ˇˇ  
<
ˇˇ  !
DateTimeOffset
ˇˇ! /
?
ˇˇ/ 0
>
ˇˇ0 1"
GetCreationDateAsync
ˇˇ2 F
(
ˇˇF G
TToken
ˇˇG M
token
ˇˇN S
,
ˇˇS T
CancellationToken
ˇˇU f
cancellationToken
ˇˇg x
)
ˇˇx y
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
token
ÅÅ 
==
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ #
ArgumentNullException
ÉÉ /
(
ÉÉ/ 0
nameof
ÉÉ0 6
(
ÉÉ6 7
token
ÉÉ7 <
)
ÉÉ< =
)
ÉÉ= >
;
ÉÉ> ?
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
token
ÜÜ 
.
ÜÜ 
CreationDate
ÜÜ "
is
ÜÜ# %
null
ÜÜ& *
)
ÜÜ* +
{
áá 
return
àà 
new
àà 
	ValueTask
àà $
<
àà$ %
DateTimeOffset
àà% 3
?
àà3 4
>
àà4 5
(
àà5 6
result
àà6 <
:
àà< =
null
àà> B
)
ààB C
;
ààC D
}
ââ 
return
ãã 
new
ãã 
	ValueTask
ãã  
<
ãã  !
DateTimeOffset
ãã! /
?
ãã/ 0
>
ãã0 1
(
ãã1 2
DateTime
ãã2 :
.
ãã: ;
SpecifyKind
ãã; F
(
ããF G
token
ããG L
.
ããL M
CreationDate
ããM Y
.
ããY Z
Value
ããZ _
,
ãã_ `
DateTimeKind
ããa m
.
ããm n
Utc
ããn q
)
ããq r
)
ããr s
;
ããs t
}
åå 	
public
èè 
virtual
èè 
	ValueTask
èè  
<
èè  !
DateTimeOffset
èè! /
?
èè/ 0
>
èè0 1$
GetExpirationDateAsync
èè2 H
(
èèH I
TToken
èèI O
token
èèP U
,
èèU V
CancellationToken
èèW h
cancellationToken
èèi z
)
èèz {
{
êê 	
if
ëë 
(
ëë 
token
ëë 
==
ëë 
null
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì #
ArgumentNullException
ìì /
(
ìì/ 0
nameof
ìì0 6
(
ìì6 7
token
ìì7 <
)
ìì< =
)
ìì= >
;
ìì> ?
}
îî 
if
ññ 
(
ññ 
token
ññ 
.
ññ 
ExpirationDate
ññ $
is
ññ% '
null
ññ( ,
)
ññ, -
{
óó 
return
òò 
new
òò 
	ValueTask
òò $
<
òò$ %
DateTimeOffset
òò% 3
?
òò3 4
>
òò4 5
(
òò5 6
result
òò6 <
:
òò< =
null
òò> B
)
òòB C
;
òòC D
}
ôô 
return
õõ 
new
õõ 
	ValueTask
õõ  
<
õõ  !
DateTimeOffset
õõ! /
?
õõ/ 0
>
õõ0 1
(
õõ1 2
DateTime
õõ2 :
.
õõ: ;
SpecifyKind
õõ; F
(
õõF G
token
õõG L
.
õõL M
ExpirationDate
õõM [
.
õõ[ \
Value
õõ\ a
,
õõa b
DateTimeKind
õõc o
.
õõo p
Utc
õõp s
)
õõs t
)
õõt u
;
õõu v
}
úú 	
public
üü 
virtual
üü 
	ValueTask
üü  
<
üü  !
string
üü! '
>
üü' (

GetIdAsync
üü) 3
(
üü3 4
TToken
üü4 :
token
üü; @
,
üü@ A
CancellationToken
üüB S
cancellationToken
üüT e
)
üüe f
{
†† 	
if
°° 
(
°° 
token
°° 
==
°° 
null
°° 
)
°° 
{
¢¢ 
throw
££ 
new
££ #
ArgumentNullException
££ /
(
££/ 0
nameof
££0 6
(
££6 7
token
££7 <
)
££< =
)
££= >
;
££> ?
}
§§ 
return
¶¶ 
new
¶¶ 
	ValueTask
¶¶  
<
¶¶  !
string
¶¶! '
>
¶¶' (
(
¶¶( )
token
¶¶) .
.
¶¶. /
TokenId
¶¶/ 6
)
¶¶6 7
;
¶¶7 8
}
ßß 	
public
™™ 
virtual
™™ 
	ValueTask
™™  
<
™™  !
string
™™! '
>
™™' (
GetPayloadAsync
™™) 8
(
™™8 9
TToken
™™9 ?
token
™™@ E
,
™™E F
CancellationToken
™™G X
cancellationToken
™™Y j
)
™™j k
{
´´ 	
if
¨¨ 
(
¨¨ 
token
¨¨ 
==
¨¨ 
null
¨¨ 
)
¨¨ 
{
≠≠ 
throw
ÆÆ 
new
ÆÆ #
ArgumentNullException
ÆÆ /
(
ÆÆ/ 0
nameof
ÆÆ0 6
(
ÆÆ6 7
token
ÆÆ7 <
)
ÆÆ< =
)
ÆÆ= >
;
ÆÆ> ?
}
ØØ 
return
±± 
new
±± 
	ValueTask
±±  
<
±±  !
string
±±! '
>
±±' (
(
±±( )
token
±±) .
.
±±. /
Payload
±±/ 6
)
±±6 7
;
±±7 8
}
≤≤ 	
public
µµ 
virtual
µµ 
	ValueTask
µµ  
<
µµ  !
string
µµ! '
>
µµ' ( 
GetPhysicalIdAsync
µµ) ;
(
µµ; <
TToken
µµ< B
token
µµC H
,
µµH I
CancellationToken
µµJ [
cancellationToken
µµ\ m
)
µµm n
{
∂∂ 	
if
∑∑ 
(
∑∑ 
token
∑∑ 
==
∑∑ 
null
∑∑ 
)
∑∑ 
{
∏∏ 
throw
ππ 
new
ππ #
ArgumentNullException
ππ /
(
ππ/ 0
nameof
ππ0 6
(
ππ6 7
token
ππ7 <
)
ππ< =
)
ππ= >
;
ππ> ?
}
∫∫ 
return
ºº 
new
ºº 
	ValueTask
ºº  
<
ºº  !
string
ºº! '
>
ºº' (
(
ºº( )
token
ºº) .
.
ºº. /
Id
ºº/ 1
.
ºº1 2
ToString
ºº2 :
(
ºº: ;
CultureInfo
ºº; F
.
ººF G
InvariantCulture
ººG W
)
ººW X
)
ººX Y
;
ººY Z
}
ΩΩ 	
public
¿¿ 
virtual
¿¿ 
	ValueTask
¿¿  
<
¿¿  !!
ImmutableDictionary
¿¿! 4
<
¿¿4 5
string
¿¿5 ;
,
¿¿; <
JsonElement
¿¿= H
>
¿¿H I
>
¿¿I J 
GetPropertiesAsync
¿¿K ]
(
¿¿] ^
TToken
¿¿^ d
token
¿¿e j
,
¿¿j k
CancellationToken
¿¿l } 
cancellationToken¿¿~ è
)¿¿è ê
{
¡¡ 	
if
¬¬ 
(
¬¬ 
token
¬¬ 
==
¬¬ 
null
¬¬ 
)
¬¬ 
{
√√ 
throw
ƒƒ 
new
ƒƒ #
ArgumentNullException
ƒƒ /
(
ƒƒ/ 0
nameof
ƒƒ0 6
(
ƒƒ6 7
token
ƒƒ7 <
)
ƒƒ< =
)
ƒƒ= >
;
ƒƒ> ?
}
≈≈ 
if
«« 
(
«« 
token
«« 
.
«« 

Properties
««  
==
««! #
null
««$ (
)
««( )
{
»» 
return
…… 
new
…… 
	ValueTask
…… $
<
……$ %!
ImmutableDictionary
……% 8
<
……8 9
string
……9 ?
,
……? @
JsonElement
……A L
>
……L M
>
……M N
(
……N O!
ImmutableDictionary
……O b
.
……b c
Create
……c i
<
……i j
string
……j p
,
……p q
JsonElement
……r }
>
……} ~
(
……~ 
)…… Ä
)……Ä Å
;……Å Ç
}
   
return
ÃÃ 
new
ÃÃ 
	ValueTask
ÃÃ  
<
ÃÃ  !!
ImmutableDictionary
ÃÃ! 4
<
ÃÃ4 5
string
ÃÃ5 ;
,
ÃÃ; <
JsonElement
ÃÃ= H
>
ÃÃH I
>
ÃÃI J
(
ÃÃJ K
JsonSerializer
ÕÕ 
.
ÕÕ 
Deserialize
ÕÕ *
<
ÕÕ* +!
ImmutableDictionary
ÕÕ+ >
<
ÕÕ> ?
string
ÕÕ? E
,
ÕÕE F
JsonElement
ÕÕG R
>
ÕÕR S
>
ÕÕS T
(
ÕÕT U
token
ÕÕU Z
.
ÕÕZ [

Properties
ÕÕ[ e
.
ÕÕe f
ToString
ÕÕf n
(
ÕÕn o
)
ÕÕo p
)
ÕÕp q
)
ÕÕq r
;
ÕÕr s
}
ŒŒ 	
public
—— 
virtual
—— 
	ValueTask
——  
<
——  !
DateTimeOffset
——! /
?
——/ 0
>
——0 1$
GetRedemptionDateAsync
——2 H
(
——H I
TToken
——I O
token
——P U
,
——U V
CancellationToken
——W h
cancellationToken
——i z
)
——z {
{
““ 	
if
”” 
(
”” 
token
”” 
==
”” 
null
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ #
ArgumentNullException
’’ /
(
’’/ 0
nameof
’’0 6
(
’’6 7
token
’’7 <
)
’’< =
)
’’= >
;
’’> ?
}
÷÷ 
if
ÿÿ 
(
ÿÿ 
token
ÿÿ 
.
ÿÿ 
RedemptionDate
ÿÿ $
is
ÿÿ% '
null
ÿÿ( ,
)
ÿÿ, -
{
ŸŸ 
return
⁄⁄ 
new
⁄⁄ 
	ValueTask
⁄⁄ $
<
⁄⁄$ %
DateTimeOffset
⁄⁄% 3
?
⁄⁄3 4
>
⁄⁄4 5
(
⁄⁄5 6
result
⁄⁄6 <
:
⁄⁄< =
null
⁄⁄> B
)
⁄⁄B C
;
⁄⁄C D
}
€€ 
return
›› 
new
›› 
	ValueTask
››  
<
››  !
DateTimeOffset
››! /
?
››/ 0
>
››0 1
(
››1 2
DateTime
››2 :
.
››: ;
SpecifyKind
››; F
(
››F G
token
››G L
.
››L M
RedemptionDate
››M [
.
››[ \
Value
››\ a
,
››a b
DateTimeKind
››c o
.
››o p
Utc
››p s
)
››s t
)
››t u
;
››u v
}
ﬁﬁ 	
public
·· 
virtual
·· 
	ValueTask
··  
<
··  !
string
··! '
>
··' (!
GetReferenceIdAsync
··) <
(
··< =
TToken
··= C
token
··D I
,
··I J
CancellationToken
··K \
cancellationToken
··] n
)
··n o
{
‚‚ 	
if
„„ 
(
„„ 
token
„„ 
==
„„ 
null
„„ 
)
„„ 
{
‰‰ 
throw
ÂÂ 
new
ÂÂ #
ArgumentNullException
ÂÂ /
(
ÂÂ/ 0
nameof
ÂÂ0 6
(
ÂÂ6 7
token
ÂÂ7 <
)
ÂÂ< =
)
ÂÂ= >
;
ÂÂ> ?
}
ÊÊ 
return
ËË 
new
ËË 
	ValueTask
ËË  
<
ËË  !
string
ËË! '
>
ËË' (
(
ËË( )
token
ËË) .
.
ËË. /
ReferenceId
ËË/ :
)
ËË: ;
;
ËË; <
}
ÈÈ 	
public
ÏÏ 
virtual
ÏÏ 
	ValueTask
ÏÏ  
<
ÏÏ  !
string
ÏÏ! '
>
ÏÏ' (
GetStatusAsync
ÏÏ) 7
(
ÏÏ7 8
TToken
ÏÏ8 >
token
ÏÏ? D
,
ÏÏD E
CancellationToken
ÏÏF W
cancellationToken
ÏÏX i
)
ÏÏi j
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ 
token
ÓÓ 
==
ÓÓ 
null
ÓÓ 
)
ÓÓ 
{
ÔÔ 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
nameof
0 6
(
6 7
token
7 <
)
< =
)
= >
;
> ?
}
ÒÒ 
return
ÛÛ 
new
ÛÛ 
	ValueTask
ÛÛ  
<
ÛÛ  !
string
ÛÛ! '
>
ÛÛ' (
(
ÛÛ( )
token
ÛÛ) .
.
ÛÛ. /
Status
ÛÛ/ 5
)
ÛÛ5 6
;
ÛÛ6 7
}
ÙÙ 	
public
˜˜ 
virtual
˜˜ 
	ValueTask
˜˜  
<
˜˜  !
string
˜˜! '
>
˜˜' (
GetSubjectAsync
˜˜) 8
(
˜˜8 9
TToken
˜˜9 ?
token
˜˜@ E
,
˜˜E F
CancellationToken
˜˜G X
cancellationToken
˜˜Y j
)
˜˜j k
{
¯¯ 	
if
˘˘ 
(
˘˘ 
token
˘˘ 
==
˘˘ 
null
˘˘ 
)
˘˘ 
{
˙˙ 
throw
˚˚ 
new
˚˚ #
ArgumentNullException
˚˚ /
(
˚˚/ 0
nameof
˚˚0 6
(
˚˚6 7
token
˚˚7 <
)
˚˚< =
)
˚˚= >
;
˚˚> ?
}
¸¸ 
return
˛˛ 
new
˛˛ 
	ValueTask
˛˛  
<
˛˛  !
string
˛˛! '
>
˛˛' (
(
˛˛( )
token
˛˛) .
.
˛˛. /
Subject
˛˛/ 6
)
˛˛6 7
;
˛˛7 8
}
ˇˇ 	
public
ÇÇ 
virtual
ÇÇ 
	ValueTask
ÇÇ  
<
ÇÇ  !
string
ÇÇ! '
>
ÇÇ' (
GetTypeAsync
ÇÇ) 5
(
ÇÇ5 6
TToken
ÇÇ6 <
token
ÇÇ= B
,
ÇÇB C
CancellationToken
ÇÇD U
cancellationToken
ÇÇV g
)
ÇÇg h
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
token
ÑÑ 
==
ÑÑ 
null
ÑÑ 
)
ÑÑ 
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ #
ArgumentNullException
ÜÜ /
(
ÜÜ/ 0
nameof
ÜÜ0 6
(
ÜÜ6 7
token
ÜÜ7 <
)
ÜÜ< =
)
ÜÜ= >
;
ÜÜ> ?
}
áá 
return
ââ 
new
ââ 
	ValueTask
ââ  
<
ââ  !
string
ââ! '
>
ââ' (
(
ââ( )
token
ââ) .
.
ââ. /
Type
ââ/ 3
)
ââ3 4
;
ââ4 5
}
ää 	
public
çç 
virtual
çç 
	ValueTask
çç  
<
çç  !
TToken
çç! '
>
çç' (
InstantiateAsync
çç) 9
(
çç9 :
CancellationToken
çç: K
cancellationToken
ççL ]
)
çç] ^
=>
éé 
new
éé 
	ValueTask
éé 
<
éé 
TToken
éé #
>
éé# $
(
éé$ %
new
éé% (
TToken
éé) /
{
éé0 1
TokenId
éé2 9
=
éé: ;
Guid
éé< @
.
éé@ A
NewGuid
ééA H
(
ééH I
)
ééI J
.
ééJ K
ToString
ééK S
(
ééS T
$str
ééT W
)
ééW X
}
ééY Z
)
ééZ [
;
éé[ \
public
ëë 
virtual
ëë 
IAsyncEnumerable
ëë '
<
ëë' (
TToken
ëë( .
>
ëë. /
	ListAsync
ëë0 9
(
ëë9 :
int
ëë: =
?
ëë= >
count
ëë? D
,
ëëD E
int
ëëF I
?
ëëI J
offset
ëëK Q
,
ëëQ R
CancellationToken
ëëS d
cancellationToken
ëëe v
)
ëëv w
{
íí 	
var
ìì 
query
ìì 
=
ìì 
_session
ìì  
.
ìì  !
Query
ìì! &
<
ìì& '
TToken
ìì' -
>
ìì- .
(
ìì. /
)
ìì/ 0
;
ìì0 1
if
ïï 
(
ïï 
offset
ïï 
.
ïï 
HasValue
ïï 
)
ïï  
{
ññ 
query
óó 
=
óó 
query
óó 
.
óó 
Skip
óó "
(
óó" #
offset
óó# )
.
óó) *
Value
óó* /
)
óó/ 0
;
óó0 1
}
òò 
if
öö 
(
öö 
count
öö 
.
öö 
HasValue
öö 
)
öö 
{
õõ 
query
úú 
=
úú 
query
úú 
.
úú 
Take
úú "
(
úú" #
count
úú# (
.
úú( )
Value
úú) .
)
úú. /
;
úú/ 0
}
ùù 
return
üü 
query
üü 
.
üü 
ToAsyncEnumerable
üü *
(
üü* +
)
üü+ ,
;
üü, -
}
†† 	
public
££ 
virtual
££ 
IAsyncEnumerable
££ '
<
££' (
TResult
££( /
>
££/ 0
	ListAsync
££1 :
<
££: ;
TState
££; A
,
££A B
TResult
££C J
>
££J K
(
££K L
Func
§§ 
<
§§ 

IQueryable
§§ 
<
§§ 
TToken
§§ "
>
§§" #
,
§§# $
TState
§§% +
,
§§+ ,

IQueryable
§§- 7
<
§§7 8
TResult
§§8 ?
>
§§? @
>
§§@ A
query
§§B G
,
§§G H
TState
•• 
state
•• 
,
•• 
CancellationToken
•• +
cancellationToken
••, =
)
••= >
=>
¶¶ 
throw
¶¶ 
new
¶¶ #
NotSupportedException
¶¶ .
(
¶¶. /
)
¶¶/ 0
;
¶¶0 1
public
©© 
virtual
©© 
async
©© 
	ValueTask
©© &

PruneAsync
©©' 1
(
©©1 2
DateTimeOffset
©©2 @
	threshold
©©A J
,
©©J K
CancellationToken
©©L ]
cancellationToken
©©^ o
=
©©p q
default
©©r y
)
©©y z
{
™™ 	
IList
ØØ 
<
ØØ 
	Exception
ØØ 
>
ØØ 

exceptions
ØØ '
=
ØØ( )
null
ØØ* .
;
ØØ. /
for
±± 
(
±± 
var
±± 
offset
±± 
=
±± 
$num
±± 
;
±±  
offset
±±! '
<
±±( )
$num
±±* 1
;
±±1 2
offset
±±3 9
+=
±±: <
$num
±±= B
)
±±B C
{
≤≤ 
cancellationToken
≥≥ !
.
≥≥! "*
ThrowIfCancellationRequested
≥≥" >
(
≥≥> ?
)
≥≥? @
;
≥≥@ A
var
µµ 
tokens
µµ 
=
µµ 
await
µµ "
_session
µµ# +
.
µµ+ ,
Query
µµ, 1
<
µµ1 2
TToken
µµ2 8
,
µµ8 9
OpenIdTokenIndex
µµ: J
>
µµJ K
(
µµK L
token
∂∂ 
=>
∂∂ 
token
∂∂ "
.
∂∂" #
CreationDate
∂∂# /
<
∂∂0 1
	threshold
∂∂2 ;
.
∂∂; <
UtcDateTime
∂∂< G
&&
∂∂H J
(
∑∑ 
(
∑∑ 
token
∑∑ "
.
∑∑" #
Status
∑∑# )
!=
∑∑* ,
Statuses
∑∑- 5
.
∑∑5 6
Inactive
∑∑6 >
&&
∑∑? A
token
∑∑B G
.
∑∑G H
Status
∑∑H N
!=
∑∑O Q
Statuses
∑∑R Z
.
∑∑Z [
Valid
∑∑[ `
)
∑∑` a
||
∑∑b d
token
∏∏ "
.
∏∏" #
AuthorizationId
∏∏# 2
.
∏∏2 3
IsNotIn
∏∏3 :
<
∏∏: ;&
OpenIdAuthorizationIndex
∏∏; S
>
∏∏S T
(
∏∏T U
authorization
ππ  -
=>
ππ. 0
authorization
ππ1 >
.
ππ> ?
AuthorizationId
ππ? N
,
ππN O
authorization
∫∫  -
=>
∫∫. 0
authorization
∫∫1 >
.
∫∫> ?
Status
∫∫? E
==
∫∫F H
Statuses
∫∫I Q
.
∫∫Q R
Valid
∫∫R W
)
∫∫W X
||
∫∫Y [
token
ªª "
.
ªª" #
ExpirationDate
ªª# 1
<
ªª2 3
DateTime
ªª4 <
.
ªª< =
UtcNow
ªª= C
)
ªªC D
)
ªªD E
.
ªªE F
Skip
ªªF J
(
ªªJ K
offset
ªªK Q
)
ªªQ R
.
ªªR S
Take
ªªS W
(
ªªW X
$num
ªªX ]
)
ªª] ^
.
ªª^ _
	ListAsync
ªª_ h
(
ªªh i
)
ªªi j
;
ªªj k
foreach
ΩΩ 
(
ΩΩ 
var
ΩΩ 
token
ΩΩ "
in
ΩΩ# %
tokens
ΩΩ& ,
)
ΩΩ, -
{
ææ 
_session
øø 
.
øø 
Delete
øø #
(
øø# $
token
øø$ )
)
øø) *
;
øø* +
}
¿¿ 
try
¬¬ 
{
√√ 
await
ƒƒ 
_session
ƒƒ "
.
ƒƒ" #
CommitAsync
ƒƒ# .
(
ƒƒ. /
)
ƒƒ/ 0
;
ƒƒ0 1
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆  
	exception
∆∆! *
)
∆∆* +
{
«« 
if
»» 
(
»» 

exceptions
»» "
==
»»# %
null
»»& *
)
»»* +
{
…… 

exceptions
   "
=
  # $
new
  % (
List
  ) -
<
  - .
	Exception
  . 7
>
  7 8
(
  8 9
capacity
  9 A
:
  A B
$num
  C D
)
  D E
;
  E F
}
ÀÀ 

exceptions
ÕÕ 
.
ÕÕ 
Add
ÕÕ "
(
ÕÕ" #
	exception
ÕÕ# ,
)
ÕÕ, -
;
ÕÕ- .
}
ŒŒ 
}
œœ 
if
—— 
(
—— 

exceptions
—— 
!=
—— 
null
—— "
)
——" #
{
““ 
throw
”” 
new
””  
AggregateException
”” ,
(
””, -
$str
””- ^
,
””^ _

exceptions
””` j
)
””j k
;
””k l
}
‘‘ 
}
’’ 	
public
ÿÿ 
virtual
ÿÿ 
	ValueTask
ÿÿ  #
SetApplicationIdAsync
ÿÿ! 6
(
ÿÿ6 7
TToken
ÿÿ7 =
token
ÿÿ> C
,
ÿÿC D
string
ÿÿE K

identifier
ÿÿL V
,
ÿÿV W
CancellationToken
ÿÿX i
cancellationToken
ÿÿj {
)
ÿÿ{ |
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
token
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ 
)
⁄⁄ 
{
€€ 
throw
‹‹ 
new
‹‹ #
ArgumentNullException
‹‹ /
(
‹‹/ 0
nameof
‹‹0 6
(
‹‹6 7
token
‹‹7 <
)
‹‹< =
)
‹‹= >
;
‹‹> ?
}
›› 
if
ﬂﬂ 
(
ﬂﬂ 
string
ﬂﬂ 
.
ﬂﬂ 
IsNullOrEmpty
ﬂﬂ $
(
ﬂﬂ$ %

identifier
ﬂﬂ% /
)
ﬂﬂ/ 0
)
ﬂﬂ0 1
{
‡‡ 
token
·· 
.
·· 
ApplicationId
·· #
=
··$ %
null
··& *
;
··* +
}
‚‚ 
else
„„ 
{
‰‰ 
token
ÂÂ 
.
ÂÂ 
ApplicationId
ÂÂ #
=
ÂÂ$ %

identifier
ÂÂ& 0
;
ÂÂ0 1
}
ÊÊ 
return
ËË 
default
ËË 
;
ËË 
}
ÈÈ 	
public
ÏÏ 
virtual
ÏÏ 
	ValueTask
ÏÏ  %
SetAuthorizationIdAsync
ÏÏ! 8
(
ÏÏ8 9
TToken
ÏÏ9 ?
token
ÏÏ@ E
,
ÏÏE F
string
ÏÏG M

identifier
ÏÏN X
,
ÏÏX Y
CancellationToken
ÏÏZ k
cancellationToken
ÏÏl }
)
ÏÏ} ~
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ 
token
ÓÓ 
==
ÓÓ 
null
ÓÓ 
)
ÓÓ 
{
ÔÔ 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
nameof
0 6
(
6 7
token
7 <
)
< =
)
= >
;
> ?
}
ÒÒ 
if
ÛÛ 
(
ÛÛ 
string
ÛÛ 
.
ÛÛ 
IsNullOrEmpty
ÛÛ $
(
ÛÛ$ %

identifier
ÛÛ% /
)
ÛÛ/ 0
)
ÛÛ0 1
{
ÙÙ 
token
ıı 
.
ıı 
AuthorizationId
ıı %
=
ıı& '
null
ıı( ,
;
ıı, -
}
ˆˆ 
else
˜˜ 
{
¯¯ 
token
˘˘ 
.
˘˘ 
AuthorizationId
˘˘ %
=
˘˘& '

identifier
˘˘( 2
;
˘˘2 3
}
˙˙ 
return
¸¸ 
default
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ÄÄ 
virtual
ÄÄ 
	ValueTask
ÄÄ  "
SetCreationDateAsync
ÄÄ! 5
(
ÄÄ5 6
TToken
ÄÄ6 <
token
ÄÄ= B
,
ÄÄB C
DateTimeOffset
ÄÄD R
?
ÄÄR S
date
ÄÄT X
,
ÄÄX Y
CancellationToken
ÄÄZ k
cancellationToken
ÄÄl }
)
ÄÄ} ~
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
token
ÇÇ 
==
ÇÇ 
null
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ #
ArgumentNullException
ÑÑ /
(
ÑÑ/ 0
nameof
ÑÑ0 6
(
ÑÑ6 7
token
ÑÑ7 <
)
ÑÑ< =
)
ÑÑ= >
;
ÑÑ> ?
}
ÖÖ 
token
áá 
.
áá 
CreationDate
áá 
=
áá  
date
áá! %
?
áá% &
.
áá& '
UtcDateTime
áá' 2
;
áá2 3
return
ââ 
default
ââ 
;
ââ 
}
ää 	
public
çç 
virtual
çç 
	ValueTask
çç  $
SetExpirationDateAsync
çç! 7
(
çç7 8
TToken
çç8 >
token
çç? D
,
ççD E
DateTimeOffset
ççF T
?
ççT U
date
ççV Z
,
ççZ [
CancellationToken
çç\ m
cancellationToken
ççn 
)çç Ä
{
éé 	
if
èè 
(
èè 
token
èè 
==
èè 
null
èè 
)
èè 
{
êê 
throw
ëë 
new
ëë #
ArgumentNullException
ëë /
(
ëë/ 0
nameof
ëë0 6
(
ëë6 7
token
ëë7 <
)
ëë< =
)
ëë= >
;
ëë> ?
}
íí 
token
îî 
.
îî 
ExpirationDate
îî  
=
îî! "
date
îî# '
?
îî' (
.
îî( )
UtcDateTime
îî) 4
;
îî4 5
return
ññ 
default
ññ 
;
ññ 
}
óó 	
public
öö 
virtual
öö 
	ValueTask
öö  
SetPayloadAsync
öö! 0
(
öö0 1
TToken
öö1 7
token
öö8 =
,
öö= >
string
öö? E
payload
ööF M
,
ööM N
CancellationToken
ööO `
cancellationToken
ööa r
)
öör s
{
õõ 	
if
úú 
(
úú 
token
úú 
==
úú 
null
úú 
)
úú 
{
ùù 
throw
ûû 
new
ûû #
ArgumentNullException
ûû /
(
ûû/ 0
nameof
ûû0 6
(
ûû6 7
token
ûû7 <
)
ûû< =
)
ûû= >
;
ûû> ?
}
üü 
token
°° 
.
°° 
Payload
°° 
=
°° 
payload
°° #
;
°°# $
return
££ 
default
££ 
;
££ 
}
§§ 	
public
ßß 
virtual
ßß 
	ValueTask
ßß   
SetPropertiesAsync
ßß! 3
(
ßß3 4
TToken
ßß4 :
token
ßß; @
,
ßß@ A!
ImmutableDictionary
ßßB U
<
ßßU V
string
ßßV \
,
ßß\ ]
JsonElement
ßß^ i
>
ßßi j

properties
ßßk u
,
ßßu v 
CancellationTokenßßw à!
cancellationTokenßßâ ö
)ßßö õ
{
®® 	
if
©© 
(
©© 
token
©© 
==
©© 
null
©© 
)
©© 
{
™™ 
throw
´´ 
new
´´ #
ArgumentNullException
´´ /
(
´´/ 0
nameof
´´0 6
(
´´6 7
token
´´7 <
)
´´< =
)
´´= >
;
´´> ?
}
¨¨ 
if
ÆÆ 
(
ÆÆ 

properties
ÆÆ 
==
ÆÆ 
null
ÆÆ "
||
ÆÆ# %

properties
ÆÆ& 0
.
ÆÆ0 1
IsEmpty
ÆÆ1 8
)
ÆÆ8 9
{
ØØ 
token
∞∞ 
.
∞∞ 

Properties
∞∞  
=
∞∞! "
null
∞∞# '
;
∞∞' (
return
≤≤ 
default
≤≤ 
;
≤≤ 
}
≥≥ 
token
µµ 
.
µµ 

Properties
µµ 
=
µµ 
JObject
µµ &
.
µµ& '
Parse
µµ' ,
(
µµ, -
JsonSerializer
µµ- ;
.
µµ; <
	Serialize
µµ< E
(
µµE F

properties
µµF P
,
µµP Q
new
µµR U#
JsonSerializerOptions
µµV k
{
∂∂ 
Encoder
∑∑ 
=
∑∑ 
JavaScriptEncoder
∑∑ +
.
∑∑+ ,'
UnsafeRelaxedJsonEscaping
∑∑, E
,
∑∑E F
WriteIndented
∏∏ 
=
∏∏ 
false
∏∏  %
}
ππ 
)
ππ 
)
ππ 
;
ππ 
return
ªª 
default
ªª 
;
ªª 
}
ºº 	
public
øø 
virtual
øø 
	ValueTask
øø  $
SetRedemptionDateAsync
øø! 7
(
øø7 8
TToken
øø8 >
token
øø? D
,
øøD E
DateTimeOffset
øøF T
?
øøT U
date
øøV Z
,
øøZ [
CancellationToken
øø\ m
cancellationToken
øøn 
)øø Ä
{
¿¿ 	
if
¡¡ 
(
¡¡ 
token
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
new
√√ #
ArgumentNullException
√√ /
(
√√/ 0
nameof
√√0 6
(
√√6 7
token
√√7 <
)
√√< =
)
√√= >
;
√√> ?
}
ƒƒ 
token
∆∆ 
.
∆∆ 
RedemptionDate
∆∆  
=
∆∆! "
date
∆∆# '
?
∆∆' (
.
∆∆( )
UtcDateTime
∆∆) 4
;
∆∆4 5
return
»» 
default
»» 
;
»» 
}
…… 	
public
ÃÃ 
virtual
ÃÃ 
	ValueTask
ÃÃ  !
SetReferenceIdAsync
ÃÃ! 4
(
ÃÃ4 5
TToken
ÃÃ5 ;
token
ÃÃ< A
,
ÃÃA B
string
ÃÃC I

identifier
ÃÃJ T
,
ÃÃT U
CancellationToken
ÃÃV g
cancellationToken
ÃÃh y
)
ÃÃy z
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
token
ŒŒ 
==
ŒŒ 
null
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
new
–– #
ArgumentNullException
–– /
(
––/ 0
nameof
––0 6
(
––6 7
token
––7 <
)
––< =
)
––= >
;
––> ?
}
—— 
token
”” 
.
”” 
ReferenceId
”” 
=
”” 

identifier
””  *
;
””* +
return
’’ 
default
’’ 
;
’’ 
}
÷÷ 	
public
ŸŸ 
virtual
ŸŸ 
	ValueTask
ŸŸ  
SetStatusAsync
ŸŸ! /
(
ŸŸ/ 0
TToken
ŸŸ0 6
token
ŸŸ7 <
,
ŸŸ< =
string
ŸŸ> D
status
ŸŸE K
,
ŸŸK L
CancellationToken
ŸŸM ^
cancellationToken
ŸŸ_ p
)
ŸŸp q
{
⁄⁄ 	
if
€€ 
(
€€ 
token
€€ 
==
€€ 
null
€€ 
)
€€ 
{
‹‹ 
throw
›› 
new
›› #
ArgumentNullException
›› /
(
››/ 0
nameof
››0 6
(
››6 7
token
››7 <
)
››< =
)
››= >
;
››> ?
}
ﬁﬁ 
if
‡‡ 
(
‡‡ 
string
‡‡ 
.
‡‡ 
IsNullOrEmpty
‡‡ $
(
‡‡$ %
status
‡‡% +
)
‡‡+ ,
)
‡‡, -
{
·· 
throw
‚‚ 
new
‚‚ 
ArgumentException
‚‚ +
(
‚‚+ ,
$str
‚‚, Q
,
‚‚Q R
nameof
‚‚S Y
(
‚‚Y Z
status
‚‚Z `
)
‚‚` a
)
‚‚a b
;
‚‚b c
}
„„ 
token
ÂÂ 
.
ÂÂ 
Status
ÂÂ 
=
ÂÂ 
status
ÂÂ !
;
ÂÂ! "
return
ÁÁ 
default
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÎÎ 
virtual
ÎÎ 
	ValueTask
ÎÎ  
SetSubjectAsync
ÎÎ! 0
(
ÎÎ0 1
TToken
ÎÎ1 7
token
ÎÎ8 =
,
ÎÎ= >
string
ÎÎ? E
subject
ÎÎF M
,
ÎÎM N
CancellationToken
ÎÎO `
cancellationToken
ÎÎa r
)
ÎÎr s
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
token
ÌÌ 
==
ÌÌ 
null
ÌÌ 
)
ÌÌ 
{
ÓÓ 
throw
ÔÔ 
new
ÔÔ #
ArgumentNullException
ÔÔ /
(
ÔÔ/ 0
nameof
ÔÔ0 6
(
ÔÔ6 7
token
ÔÔ7 <
)
ÔÔ< =
)
ÔÔ= >
;
ÔÔ> ?
}
 
if
ÚÚ 
(
ÚÚ 
string
ÚÚ 
.
ÚÚ 
IsNullOrEmpty
ÚÚ $
(
ÚÚ$ %
subject
ÚÚ% ,
)
ÚÚ, -
)
ÚÚ- .
{
ÛÛ 
throw
ÙÙ 
new
ÙÙ 
ArgumentException
ÙÙ +
(
ÙÙ+ ,
$str
ÙÙ, R
,
ÙÙR S
nameof
ÙÙT Z
(
ÙÙZ [
subject
ÙÙ[ b
)
ÙÙb c
)
ÙÙc d
;
ÙÙd e
}
ıı 
token
˜˜ 
.
˜˜ 
Subject
˜˜ 
=
˜˜ 
subject
˜˜ #
;
˜˜# $
return
˘˘ 
default
˘˘ 
;
˘˘ 
}
˙˙ 	
public
˝˝ 
virtual
˝˝ 
	ValueTask
˝˝  
SetTypeAsync
˝˝! -
(
˝˝- .
TToken
˝˝. 4
token
˝˝5 :
,
˝˝: ;
string
˝˝< B
type
˝˝C G
,
˝˝G H
CancellationToken
˝˝I Z
cancellationToken
˝˝[ l
)
˝˝l m
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
token
ˇˇ 
==
ˇˇ 
null
ˇˇ 
)
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ #
ArgumentNullException
ÅÅ /
(
ÅÅ/ 0
nameof
ÅÅ0 6
(
ÅÅ6 7
token
ÅÅ7 <
)
ÅÅ< =
)
ÅÅ= >
;
ÅÅ> ?
}
ÇÇ 
if
ÑÑ 
(
ÑÑ 
string
ÑÑ 
.
ÑÑ 
IsNullOrEmpty
ÑÑ $
(
ÑÑ$ %
type
ÑÑ% )
)
ÑÑ) *
)
ÑÑ* +
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
ArgumentException
ÜÜ +
(
ÜÜ+ ,
$str
ÜÜ, U
,
ÜÜU V
nameof
ÜÜW ]
(
ÜÜ] ^
type
ÜÜ^ b
)
ÜÜb c
)
ÜÜc d
;
ÜÜd e
}
áá 
token
ââ 
.
ââ 
Type
ââ 
=
ââ 
type
ââ 
;
ââ 
return
ãã 
default
ãã 
;
ãã 
}
åå 	
public
èè 
virtual
èè 
async
èè 
	ValueTask
èè &
UpdateAsync
èè' 2
(
èè2 3
TToken
èè3 9
token
èè: ?
,
èè? @
CancellationToken
èèA R
cancellationToken
èèS d
)
èèd e
{
êê 	
if
ëë 
(
ëë 
token
ëë 
==
ëë 
null
ëë 
)
ëë 
{
íí 
throw
ìì 
new
ìì #
ArgumentNullException
ìì /
(
ìì/ 0
nameof
ìì0 6
(
ìì6 7
token
ìì7 <
)
ìì< =
)
ìì= >
;
ìì> ?
}
îî 
cancellationToken
ññ 
.
ññ *
ThrowIfCancellationRequested
ññ :
(
ññ: ;
)
ññ; <
;
ññ< =
_session
òò 
.
òò 
Save
òò 
(
òò 
token
òò 
,
òò  
checkConcurrency
òò! 1
:
òò1 2
true
òò3 7
)
òò7 8
;
òò8 9
try
öö 
{
õõ 
await
úú 
_session
úú 
.
úú 
CommitAsync
úú *
(
úú* +
)
úú+ ,
;
úú, -
}
ùù 
catch
ûû 
(
ûû "
ConcurrencyException
ûû '
	exception
ûû( 1
)
ûû1 2
{
üü 
throw
†† 
new
†† "
OpenIddictExceptions
†† .
.
††. /"
ConcurrencyException
††/ C
(
††C D
new
††D G
StringBuilder
††H U
(
††U V
)
††V W
.
°° 

AppendLine
°° 
(
°°  
$str
°°  r
)
°°r s
.
¢¢ 
Append
¢¢ 
(
¢¢ 
$str
¢¢ Y
)
¢¢Y Z
.
££ 
ToString
££ 
(
££ 
)
££ 
,
££  
	exception
££! *
)
££* +
;
££+ ,
}
§§ 
}
•• 	
}
¶¶ 
}ßß 